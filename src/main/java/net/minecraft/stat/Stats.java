package net.minecraft.stat;

import net.minecraft.registry.Registries;
import net.minecraft.registry.Registry;
import net.minecraft.util.Identifier;

public class Stats {
   public static final StatType MINED;
   public static final StatType CRAFTED;
   public static final StatType USED;
   public static final StatType BROKEN;
   public static final StatType PICKED_UP;
   public static final StatType DROPPED;
   public static final StatType KILLED;
   public static final StatType KILLED_BY;
   public static final StatType CUSTOM;
   public static final Identifier LEAVE_GAME;
   public static final Identifier PLAY_TIME;
   public static final Identifier TOTAL_WORLD_TIME;
   public static final Identifier TIME_SINCE_DEATH;
   public static final Identifier TIME_SINCE_REST;
   public static final Identifier SNEAK_TIME;
   public static final Identifier WALK_ONE_CM;
   public static final Identifier CROUCH_ONE_CM;
   public static final Identifier SPRINT_ONE_CM;
   public static final Identifier WALK_ON_WATER_ONE_CM;
   public static final Identifier FALL_ONE_CM;
   public static final Identifier CLIMB_ONE_CM;
   public static final Identifier FLY_ONE_CM;
   public static final Identifier WALK_UNDER_WATER_ONE_CM;
   public static final Identifier MINECART_ONE_CM;
   public static final Identifier BOAT_ONE_CM;
   public static final Identifier PIG_ONE_CM;
   public static final Identifier HORSE_ONE_CM;
   public static final Identifier AVIATE_ONE_CM;
   public static final Identifier SWIM_ONE_CM;
   public static final Identifier STRIDER_ONE_CM;
   public static final Identifier JUMP;
   public static final Identifier DROP;
   public static final Identifier DAMAGE_DEALT;
   public static final Identifier DAMAGE_DEALT_ABSORBED;
   public static final Identifier DAMAGE_DEALT_RESISTED;
   public static final Identifier DAMAGE_TAKEN;
   public static final Identifier DAMAGE_BLOCKED_BY_SHIELD;
   public static final Identifier DAMAGE_ABSORBED;
   public static final Identifier DAMAGE_RESISTED;
   public static final Identifier DEATHS;
   public static final Identifier MOB_KILLS;
   public static final Identifier ANIMALS_BRED;
   public static final Identifier PLAYER_KILLS;
   public static final Identifier FISH_CAUGHT;
   public static final Identifier TALKED_TO_VILLAGER;
   public static final Identifier TRADED_WITH_VILLAGER;
   public static final Identifier EAT_CAKE_SLICE;
   public static final Identifier FILL_CAULDRON;
   public static final Identifier USE_CAULDRON;
   public static final Identifier CLEAN_ARMOR;
   public static final Identifier CLEAN_BANNER;
   public static final Identifier CLEAN_SHULKER_BOX;
   public static final Identifier INTERACT_WITH_BREWINGSTAND;
   public static final Identifier INTERACT_WITH_BEACON;
   public static final Identifier INSPECT_DROPPER;
   public static final Identifier INSPECT_HOPPER;
   public static final Identifier INSPECT_DISPENSER;
   public static final Identifier PLAY_NOTEBLOCK;
   public static final Identifier TUNE_NOTEBLOCK;
   public static final Identifier POT_FLOWER;
   public static final Identifier TRIGGER_TRAPPED_CHEST;
   public static final Identifier OPEN_ENDERCHEST;
   public static final Identifier ENCHANT_ITEM;
   public static final Identifier PLAY_RECORD;
   public static final Identifier INTERACT_WITH_FURNACE;
   public static final Identifier INTERACT_WITH_CRAFTING_TABLE;
   public static final Identifier OPEN_CHEST;
   public static final Identifier SLEEP_IN_BED;
   public static final Identifier OPEN_SHULKER_BOX;
   public static final Identifier OPEN_BARREL;
   public static final Identifier INTERACT_WITH_BLAST_FURNACE;
   public static final Identifier INTERACT_WITH_SMOKER;
   public static final Identifier INTERACT_WITH_LECTERN;
   public static final Identifier INTERACT_WITH_CAMPFIRE;
   public static final Identifier INTERACT_WITH_CARTOGRAPHY_TABLE;
   public static final Identifier INTERACT_WITH_LOOM;
   public static final Identifier INTERACT_WITH_STONECUTTER;
   public static final Identifier BELL_RING;
   public static final Identifier RAID_TRIGGER;
   public static final Identifier RAID_WIN;
   public static final Identifier INTERACT_WITH_ANVIL;
   public static final Identifier INTERACT_WITH_GRINDSTONE;
   public static final Identifier TARGET_HIT;
   public static final Identifier INTERACT_WITH_SMITHING_TABLE;

   private static Identifier register(String id, StatFormatter formatter) {
      Identifier lv = new Identifier(id);
      Registry.register(Registries.CUSTOM_STAT, (String)id, lv);
      CUSTOM.getOrCreateStat(lv, formatter);
      return lv;
   }

   private static StatType registerType(String id, Registry registry) {
      return (StatType)Registry.register(Registries.STAT_TYPE, (String)id, new StatType(registry));
   }

   static {
      MINED = registerType("mined", Registries.BLOCK);
      CRAFTED = registerType("crafted", Registries.ITEM);
      USED = registerType("used", Registries.ITEM);
      BROKEN = registerType("broken", Registries.ITEM);
      PICKED_UP = registerType("picked_up", Registries.ITEM);
      DROPPED = registerType("dropped", Registries.ITEM);
      KILLED = registerType("killed", Registries.ENTITY_TYPE);
      KILLED_BY = registerType("killed_by", Registries.ENTITY_TYPE);
      CUSTOM = registerType("custom", Registries.CUSTOM_STAT);
      LEAVE_GAME = register("leave_game", StatFormatter.DEFAULT);
      PLAY_TIME = register("play_time", StatFormatter.TIME);
      TOTAL_WORLD_TIME = register("total_world_time", StatFormatter.TIME);
      TIME_SINCE_DEATH = register("time_since_death", StatFormatter.TIME);
      TIME_SINCE_REST = register("time_since_rest", StatFormatter.TIME);
      SNEAK_TIME = register("sneak_time", StatFormatter.TIME);
      WALK_ONE_CM = register("walk_one_cm", StatFormatter.DISTANCE);
      CROUCH_ONE_CM = register("crouch_one_cm", StatFormatter.DISTANCE);
      SPRINT_ONE_CM = register("sprint_one_cm", StatFormatter.DISTANCE);
      WALK_ON_WATER_ONE_CM = register("walk_on_water_one_cm", StatFormatter.DISTANCE);
      FALL_ONE_CM = register("fall_one_cm", StatFormatter.DISTANCE);
      CLIMB_ONE_CM = register("climb_one_cm", StatFormatter.DISTANCE);
      FLY_ONE_CM = register("fly_one_cm", StatFormatter.DISTANCE);
      WALK_UNDER_WATER_ONE_CM = register("walk_under_water_one_cm", StatFormatter.DISTANCE);
      MINECART_ONE_CM = register("minecart_one_cm", StatFormatter.DISTANCE);
      BOAT_ONE_CM = register("boat_one_cm", StatFormatter.DISTANCE);
      PIG_ONE_CM = register("pig_one_cm", StatFormatter.DISTANCE);
      HORSE_ONE_CM = register("horse_one_cm", StatFormatter.DISTANCE);
      AVIATE_ONE_CM = register("aviate_one_cm", StatFormatter.DISTANCE);
      SWIM_ONE_CM = register("swim_one_cm", StatFormatter.DISTANCE);
      STRIDER_ONE_CM = register("strider_one_cm", StatFormatter.DISTANCE);
      JUMP = register("jump", StatFormatter.DEFAULT);
      DROP = register("drop", StatFormatter.DEFAULT);
      DAMAGE_DEALT = register("damage_dealt", StatFormatter.DIVIDE_BY_TEN);
      DAMAGE_DEALT_ABSORBED = register("damage_dealt_absorbed", StatFormatter.DIVIDE_BY_TEN);
      DAMAGE_DEALT_RESISTED = register("damage_dealt_resisted", StatFormatter.DIVIDE_BY_TEN);
      DAMAGE_TAKEN = register("damage_taken", StatFormatter.DIVIDE_BY_TEN);
      DAMAGE_BLOCKED_BY_SHIELD = register("damage_blocked_by_shield", StatFormatter.DIVIDE_BY_TEN);
      DAMAGE_ABSORBED = register("damage_absorbed", StatFormatter.DIVIDE_BY_TEN);
      DAMAGE_RESISTED = register("damage_resisted", StatFormatter.DIVIDE_BY_TEN);
      DEATHS = register("deaths", StatFormatter.DEFAULT);
      MOB_KILLS = register("mob_kills", StatFormatter.DEFAULT);
      ANIMALS_BRED = register("animals_bred", StatFormatter.DEFAULT);
      PLAYER_KILLS = register("player_kills", StatFormatter.DEFAULT);
      FISH_CAUGHT = register("fish_caught", StatFormatter.DEFAULT);
      TALKED_TO_VILLAGER = register("talked_to_villager", StatFormatter.DEFAULT);
      TRADED_WITH_VILLAGER = register("traded_with_villager", StatFormatter.DEFAULT);
      EAT_CAKE_SLICE = register("eat_cake_slice", StatFormatter.DEFAULT);
      FILL_CAULDRON = register("fill_cauldron", StatFormatter.DEFAULT);
      USE_CAULDRON = register("use_cauldron", StatFormatter.DEFAULT);
      CLEAN_ARMOR = register("clean_armor", StatFormatter.DEFAULT);
      CLEAN_BANNER = register("clean_banner", StatFormatter.DEFAULT);
      CLEAN_SHULKER_BOX = register("clean_shulker_box", StatFormatter.DEFAULT);
      INTERACT_WITH_BREWINGSTAND = register("interact_with_brewingstand", StatFormatter.DEFAULT);
      INTERACT_WITH_BEACON = register("interact_with_beacon", StatFormatter.DEFAULT);
      INSPECT_DROPPER = register("inspect_dropper", StatFormatter.DEFAULT);
      INSPECT_HOPPER = register("inspect_hopper", StatFormatter.DEFAULT);
      INSPECT_DISPENSER = register("inspect_dispenser", StatFormatter.DEFAULT);
      PLAY_NOTEBLOCK = register("play_noteblock", StatFormatter.DEFAULT);
      TUNE_NOTEBLOCK = register("tune_noteblock", StatFormatter.DEFAULT);
      POT_FLOWER = register("pot_flower", StatFormatter.DEFAULT);
      TRIGGER_TRAPPED_CHEST = register("trigger_trapped_chest", StatFormatter.DEFAULT);
      OPEN_ENDERCHEST = register("open_enderchest", StatFormatter.DEFAULT);
      ENCHANT_ITEM = register("enchant_item", StatFormatter.DEFAULT);
      PLAY_RECORD = register("play_record", StatFormatter.DEFAULT);
      INTERACT_WITH_FURNACE = register("interact_with_furnace", StatFormatter.DEFAULT);
      INTERACT_WITH_CRAFTING_TABLE = register("interact_with_crafting_table", StatFormatter.DEFAULT);
      OPEN_CHEST = register("open_chest", StatFormatter.DEFAULT);
      SLEEP_IN_BED = register("sleep_in_bed", StatFormatter.DEFAULT);
      OPEN_SHULKER_BOX = register("open_shulker_box", StatFormatter.DEFAULT);
      OPEN_BARREL = register("open_barrel", StatFormatter.DEFAULT);
      INTERACT_WITH_BLAST_FURNACE = register("interact_with_blast_furnace", StatFormatter.DEFAULT);
      INTERACT_WITH_SMOKER = register("interact_with_smoker", StatFormatter.DEFAULT);
      INTERACT_WITH_LECTERN = register("interact_with_lectern", StatFormatter.DEFAULT);
      INTERACT_WITH_CAMPFIRE = register("interact_with_campfire", StatFormatter.DEFAULT);
      INTERACT_WITH_CARTOGRAPHY_TABLE = register("interact_with_cartography_table", StatFormatter.DEFAULT);
      INTERACT_WITH_LOOM = register("interact_with_loom", StatFormatter.DEFAULT);
      INTERACT_WITH_STONECUTTER = register("interact_with_stonecutter", StatFormatter.DEFAULT);
      BELL_RING = register("bell_ring", StatFormatter.DEFAULT);
      RAID_TRIGGER = register("raid_trigger", StatFormatter.DEFAULT);
      RAID_WIN = register("raid_win", StatFormatter.DEFAULT);
      INTERACT_WITH_ANVIL = register("interact_with_anvil", StatFormatter.DEFAULT);
      INTERACT_WITH_GRINDSTONE = register("interact_with_grindstone", StatFormatter.DEFAULT);
      TARGET_HIT = register("target_hit", StatFormatter.DEFAULT);
      INTERACT_WITH_SMITHING_TABLE = register("interact_with_smithing_table", StatFormatter.DEFAULT);
   }
}
