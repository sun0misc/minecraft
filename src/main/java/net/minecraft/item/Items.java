package net.minecraft.item;

import net.minecraft.block.Block;
import net.minecraft.block.Blocks;
import net.minecraft.entity.EntityType;
import net.minecraft.entity.vehicle.AbstractMinecartEntity;
import net.minecraft.entity.vehicle.BoatEntity;
import net.minecraft.fluid.Fluids;
import net.minecraft.item.trim.ArmorTrimPatterns;
import net.minecraft.registry.Registries;
import net.minecraft.registry.Registry;
import net.minecraft.registry.tag.BannerPatternTags;
import net.minecraft.registry.tag.InstrumentTags;
import net.minecraft.sound.SoundEvents;
import net.minecraft.util.DyeColor;
import net.minecraft.util.Identifier;
import net.minecraft.util.Rarity;
import net.minecraft.util.math.Direction;

public class Items {
   public static final Item AIR;
   public static final Item STONE;
   public static final Item GRANITE;
   public static final Item POLISHED_GRANITE;
   public static final Item DIORITE;
   public static final Item POLISHED_DIORITE;
   public static final Item ANDESITE;
   public static final Item POLISHED_ANDESITE;
   public static final Item DEEPSLATE;
   public static final Item COBBLED_DEEPSLATE;
   public static final Item POLISHED_DEEPSLATE;
   public static final Item CALCITE;
   public static final Item TUFF;
   public static final Item DRIPSTONE_BLOCK;
   public static final Item GRASS_BLOCK;
   public static final Item DIRT;
   public static final Item COARSE_DIRT;
   public static final Item PODZOL;
   public static final Item ROOTED_DIRT;
   public static final Item MUD;
   public static final Item CRIMSON_NYLIUM;
   public static final Item WARPED_NYLIUM;
   public static final Item COBBLESTONE;
   public static final Item OAK_PLANKS;
   public static final Item SPRUCE_PLANKS;
   public static final Item BIRCH_PLANKS;
   public static final Item JUNGLE_PLANKS;
   public static final Item ACACIA_PLANKS;
   public static final Item CHERRY_PLANKS;
   public static final Item DARK_OAK_PLANKS;
   public static final Item MANGROVE_PLANKS;
   public static final Item BAMBOO_PLANKS;
   public static final Item CRIMSON_PLANKS;
   public static final Item WARPED_PLANKS;
   public static final Item BAMBOO_MOSAIC;
   public static final Item OAK_SAPLING;
   public static final Item SPRUCE_SAPLING;
   public static final Item BIRCH_SAPLING;
   public static final Item JUNGLE_SAPLING;
   public static final Item ACACIA_SAPLING;
   public static final Item CHERRY_SAPLING;
   public static final Item DARK_OAK_SAPLING;
   public static final Item MANGROVE_PROPAGULE;
   public static final Item BEDROCK;
   public static final Item SAND;
   public static final Item SUSPICIOUS_SAND;
   public static final Item SUSPICIOUS_GRAVEL;
   public static final Item RED_SAND;
   public static final Item GRAVEL;
   public static final Item COAL_ORE;
   public static final Item DEEPSLATE_COAL_ORE;
   public static final Item IRON_ORE;
   public static final Item DEEPSLATE_IRON_ORE;
   public static final Item COPPER_ORE;
   public static final Item DEEPSLATE_COPPER_ORE;
   public static final Item GOLD_ORE;
   public static final Item DEEPSLATE_GOLD_ORE;
   public static final Item REDSTONE_ORE;
   public static final Item DEEPSLATE_REDSTONE_ORE;
   public static final Item EMERALD_ORE;
   public static final Item DEEPSLATE_EMERALD_ORE;
   public static final Item LAPIS_ORE;
   public static final Item DEEPSLATE_LAPIS_ORE;
   public static final Item DIAMOND_ORE;
   public static final Item DEEPSLATE_DIAMOND_ORE;
   public static final Item NETHER_GOLD_ORE;
   public static final Item NETHER_QUARTZ_ORE;
   public static final Item ANCIENT_DEBRIS;
   public static final Item COAL_BLOCK;
   public static final Item RAW_IRON_BLOCK;
   public static final Item RAW_COPPER_BLOCK;
   public static final Item RAW_GOLD_BLOCK;
   public static final Item AMETHYST_BLOCK;
   public static final Item BUDDING_AMETHYST;
   public static final Item IRON_BLOCK;
   public static final Item COPPER_BLOCK;
   public static final Item GOLD_BLOCK;
   public static final Item DIAMOND_BLOCK;
   public static final Item NETHERITE_BLOCK;
   public static final Item EXPOSED_COPPER;
   public static final Item WEATHERED_COPPER;
   public static final Item OXIDIZED_COPPER;
   public static final Item CUT_COPPER;
   public static final Item EXPOSED_CUT_COPPER;
   public static final Item WEATHERED_CUT_COPPER;
   public static final Item OXIDIZED_CUT_COPPER;
   public static final Item CUT_COPPER_STAIRS;
   public static final Item EXPOSED_CUT_COPPER_STAIRS;
   public static final Item WEATHERED_CUT_COPPER_STAIRS;
   public static final Item OXIDIZED_CUT_COPPER_STAIRS;
   public static final Item CUT_COPPER_SLAB;
   public static final Item EXPOSED_CUT_COPPER_SLAB;
   public static final Item WEATHERED_CUT_COPPER_SLAB;
   public static final Item OXIDIZED_CUT_COPPER_SLAB;
   public static final Item WAXED_COPPER_BLOCK;
   public static final Item WAXED_EXPOSED_COPPER;
   public static final Item WAXED_WEATHERED_COPPER;
   public static final Item WAXED_OXIDIZED_COPPER;
   public static final Item WAXED_CUT_COPPER;
   public static final Item WAXED_EXPOSED_CUT_COPPER;
   public static final Item WAXED_WEATHERED_CUT_COPPER;
   public static final Item WAXED_OXIDIZED_CUT_COPPER;
   public static final Item WAXED_CUT_COPPER_STAIRS;
   public static final Item WAXED_EXPOSED_CUT_COPPER_STAIRS;
   public static final Item WAXED_WEATHERED_CUT_COPPER_STAIRS;
   public static final Item WAXED_OXIDIZED_CUT_COPPER_STAIRS;
   public static final Item WAXED_CUT_COPPER_SLAB;
   public static final Item WAXED_EXPOSED_CUT_COPPER_SLAB;
   public static final Item WAXED_WEATHERED_CUT_COPPER_SLAB;
   public static final Item WAXED_OXIDIZED_CUT_COPPER_SLAB;
   public static final Item OAK_LOG;
   public static final Item SPRUCE_LOG;
   public static final Item BIRCH_LOG;
   public static final Item JUNGLE_LOG;
   public static final Item ACACIA_LOG;
   public static final Item CHERRY_LOG;
   public static final Item DARK_OAK_LOG;
   public static final Item MANGROVE_LOG;
   public static final Item MANGROVE_ROOTS;
   public static final Item MUDDY_MANGROVE_ROOTS;
   public static final Item CRIMSON_STEM;
   public static final Item WARPED_STEM;
   public static final Item BAMBOO_BLOCK;
   public static final Item STRIPPED_OAK_LOG;
   public static final Item STRIPPED_SPRUCE_LOG;
   public static final Item STRIPPED_BIRCH_LOG;
   public static final Item STRIPPED_JUNGLE_LOG;
   public static final Item STRIPPED_ACACIA_LOG;
   public static final Item STRIPPED_CHERRY_LOG;
   public static final Item STRIPPED_DARK_OAK_LOG;
   public static final Item STRIPPED_MANGROVE_LOG;
   public static final Item STRIPPED_CRIMSON_STEM;
   public static final Item STRIPPED_WARPED_STEM;
   public static final Item STRIPPED_OAK_WOOD;
   public static final Item STRIPPED_SPRUCE_WOOD;
   public static final Item STRIPPED_BIRCH_WOOD;
   public static final Item STRIPPED_JUNGLE_WOOD;
   public static final Item STRIPPED_ACACIA_WOOD;
   public static final Item STRIPPED_CHERRY_WOOD;
   public static final Item STRIPPED_DARK_OAK_WOOD;
   public static final Item STRIPPED_MANGROVE_WOOD;
   public static final Item STRIPPED_CRIMSON_HYPHAE;
   public static final Item STRIPPED_WARPED_HYPHAE;
   public static final Item STRIPPED_BAMBOO_BLOCK;
   public static final Item OAK_WOOD;
   public static final Item SPRUCE_WOOD;
   public static final Item BIRCH_WOOD;
   public static final Item JUNGLE_WOOD;
   public static final Item ACACIA_WOOD;
   public static final Item CHERRY_WOOD;
   public static final Item DARK_OAK_WOOD;
   public static final Item MANGROVE_WOOD;
   public static final Item CRIMSON_HYPHAE;
   public static final Item WARPED_HYPHAE;
   public static final Item OAK_LEAVES;
   public static final Item SPRUCE_LEAVES;
   public static final Item BIRCH_LEAVES;
   public static final Item JUNGLE_LEAVES;
   public static final Item ACACIA_LEAVES;
   public static final Item CHERRY_LEAVES;
   public static final Item DARK_OAK_LEAVES;
   public static final Item MANGROVE_LEAVES;
   public static final Item AZALEA_LEAVES;
   public static final Item FLOWERING_AZALEA_LEAVES;
   public static final Item SPONGE;
   public static final Item WET_SPONGE;
   public static final Item GLASS;
   public static final Item TINTED_GLASS;
   public static final Item LAPIS_BLOCK;
   public static final Item SANDSTONE;
   public static final Item CHISELED_SANDSTONE;
   public static final Item CUT_SANDSTONE;
   public static final Item COBWEB;
   public static final Item GRASS;
   public static final Item FERN;
   public static final Item AZALEA;
   public static final Item FLOWERING_AZALEA;
   public static final Item DEAD_BUSH;
   public static final Item SEAGRASS;
   public static final Item SEA_PICKLE;
   public static final Item WHITE_WOOL;
   public static final Item ORANGE_WOOL;
   public static final Item MAGENTA_WOOL;
   public static final Item LIGHT_BLUE_WOOL;
   public static final Item YELLOW_WOOL;
   public static final Item LIME_WOOL;
   public static final Item PINK_WOOL;
   public static final Item GRAY_WOOL;
   public static final Item LIGHT_GRAY_WOOL;
   public static final Item CYAN_WOOL;
   public static final Item PURPLE_WOOL;
   public static final Item BLUE_WOOL;
   public static final Item BROWN_WOOL;
   public static final Item GREEN_WOOL;
   public static final Item RED_WOOL;
   public static final Item BLACK_WOOL;
   public static final Item DANDELION;
   public static final Item POPPY;
   public static final Item BLUE_ORCHID;
   public static final Item ALLIUM;
   public static final Item AZURE_BLUET;
   public static final Item RED_TULIP;
   public static final Item ORANGE_TULIP;
   public static final Item WHITE_TULIP;
   public static final Item PINK_TULIP;
   public static final Item OXEYE_DAISY;
   public static final Item CORNFLOWER;
   public static final Item LILY_OF_THE_VALLEY;
   public static final Item WITHER_ROSE;
   public static final Item TORCHFLOWER;
   public static final Item PITCHER_PLANT;
   public static final Item SPORE_BLOSSOM;
   public static final Item BROWN_MUSHROOM;
   public static final Item RED_MUSHROOM;
   public static final Item CRIMSON_FUNGUS;
   public static final Item WARPED_FUNGUS;
   public static final Item CRIMSON_ROOTS;
   public static final Item WARPED_ROOTS;
   public static final Item NETHER_SPROUTS;
   public static final Item WEEPING_VINES;
   public static final Item TWISTING_VINES;
   public static final Item SUGAR_CANE;
   public static final Item KELP;
   public static final Item MOSS_CARPET;
   public static final Item PINK_PETALS;
   public static final Item MOSS_BLOCK;
   public static final Item HANGING_ROOTS;
   public static final Item BIG_DRIPLEAF;
   public static final Item SMALL_DRIPLEAF;
   public static final Item BAMBOO;
   public static final Item OAK_SLAB;
   public static final Item SPRUCE_SLAB;
   public static final Item BIRCH_SLAB;
   public static final Item JUNGLE_SLAB;
   public static final Item ACACIA_SLAB;
   public static final Item CHERRY_SLAB;
   public static final Item DARK_OAK_SLAB;
   public static final Item MANGROVE_SLAB;
   public static final Item BAMBOO_SLAB;
   public static final Item BAMBOO_MOSAIC_SLAB;
   public static final Item CRIMSON_SLAB;
   public static final Item WARPED_SLAB;
   public static final Item STONE_SLAB;
   public static final Item SMOOTH_STONE_SLAB;
   public static final Item SANDSTONE_SLAB;
   public static final Item CUT_SANDSTONE_SLAB;
   public static final Item PETRIFIED_OAK_SLAB;
   public static final Item COBBLESTONE_SLAB;
   public static final Item BRICK_SLAB;
   public static final Item STONE_BRICK_SLAB;
   public static final Item MUD_BRICK_SLAB;
   public static final Item NETHER_BRICK_SLAB;
   public static final Item QUARTZ_SLAB;
   public static final Item RED_SANDSTONE_SLAB;
   public static final Item CUT_RED_SANDSTONE_SLAB;
   public static final Item PURPUR_SLAB;
   public static final Item PRISMARINE_SLAB;
   public static final Item PRISMARINE_BRICK_SLAB;
   public static final Item DARK_PRISMARINE_SLAB;
   public static final Item SMOOTH_QUARTZ;
   public static final Item SMOOTH_RED_SANDSTONE;
   public static final Item SMOOTH_SANDSTONE;
   public static final Item SMOOTH_STONE;
   public static final Item BRICKS;
   public static final Item BOOKSHELF;
   public static final Item CHISELED_BOOKSHELF;
   public static final Item DECORATED_POT;
   public static final Item MOSSY_COBBLESTONE;
   public static final Item OBSIDIAN;
   public static final Item TORCH;
   public static final Item END_ROD;
   public static final Item CHORUS_PLANT;
   public static final Item CHORUS_FLOWER;
   public static final Item PURPUR_BLOCK;
   public static final Item PURPUR_PILLAR;
   public static final Item PURPUR_STAIRS;
   public static final Item SPAWNER;
   public static final Item CHEST;
   public static final Item CRAFTING_TABLE;
   public static final Item FARMLAND;
   public static final Item FURNACE;
   public static final Item LADDER;
   public static final Item COBBLESTONE_STAIRS;
   public static final Item SNOW;
   public static final Item ICE;
   public static final Item SNOW_BLOCK;
   public static final Item CACTUS;
   public static final Item CLAY;
   public static final Item JUKEBOX;
   public static final Item OAK_FENCE;
   public static final Item SPRUCE_FENCE;
   public static final Item BIRCH_FENCE;
   public static final Item JUNGLE_FENCE;
   public static final Item ACACIA_FENCE;
   public static final Item CHERRY_FENCE;
   public static final Item DARK_OAK_FENCE;
   public static final Item MANGROVE_FENCE;
   public static final Item BAMBOO_FENCE;
   public static final Item CRIMSON_FENCE;
   public static final Item WARPED_FENCE;
   public static final Item PUMPKIN;
   public static final Item CARVED_PUMPKIN;
   public static final Item JACK_O_LANTERN;
   public static final Item NETHERRACK;
   public static final Item SOUL_SAND;
   public static final Item SOUL_SOIL;
   public static final Item BASALT;
   public static final Item POLISHED_BASALT;
   public static final Item SMOOTH_BASALT;
   public static final Item SOUL_TORCH;
   public static final Item GLOWSTONE;
   public static final Item INFESTED_STONE;
   public static final Item INFESTED_COBBLESTONE;
   public static final Item INFESTED_STONE_BRICKS;
   public static final Item INFESTED_MOSSY_STONE_BRICKS;
   public static final Item INFESTED_CRACKED_STONE_BRICKS;
   public static final Item INFESTED_CHISELED_STONE_BRICKS;
   public static final Item INFESTED_DEEPSLATE;
   public static final Item STONE_BRICKS;
   public static final Item MOSSY_STONE_BRICKS;
   public static final Item CRACKED_STONE_BRICKS;
   public static final Item CHISELED_STONE_BRICKS;
   public static final Item PACKED_MUD;
   public static final Item MUD_BRICKS;
   public static final Item DEEPSLATE_BRICKS;
   public static final Item CRACKED_DEEPSLATE_BRICKS;
   public static final Item DEEPSLATE_TILES;
   public static final Item CRACKED_DEEPSLATE_TILES;
   public static final Item CHISELED_DEEPSLATE;
   public static final Item REINFORCED_DEEPSLATE;
   public static final Item BROWN_MUSHROOM_BLOCK;
   public static final Item RED_MUSHROOM_BLOCK;
   public static final Item MUSHROOM_STEM;
   public static final Item IRON_BARS;
   public static final Item CHAIN;
   public static final Item GLASS_PANE;
   public static final Item MELON;
   public static final Item VINE;
   public static final Item GLOW_LICHEN;
   public static final Item BRICK_STAIRS;
   public static final Item STONE_BRICK_STAIRS;
   public static final Item MUD_BRICK_STAIRS;
   public static final Item MYCELIUM;
   public static final Item LILY_PAD;
   public static final Item NETHER_BRICKS;
   public static final Item CRACKED_NETHER_BRICKS;
   public static final Item CHISELED_NETHER_BRICKS;
   public static final Item NETHER_BRICK_FENCE;
   public static final Item NETHER_BRICK_STAIRS;
   public static final Item SCULK;
   public static final Item SCULK_VEIN;
   public static final Item SCULK_CATALYST;
   public static final Item SCULK_SHRIEKER;
   public static final Item ENCHANTING_TABLE;
   public static final Item END_PORTAL_FRAME;
   public static final Item END_STONE;
   public static final Item END_STONE_BRICKS;
   public static final Item DRAGON_EGG;
   public static final Item SANDSTONE_STAIRS;
   public static final Item ENDER_CHEST;
   public static final Item EMERALD_BLOCK;
   public static final Item OAK_STAIRS;
   public static final Item SPRUCE_STAIRS;
   public static final Item BIRCH_STAIRS;
   public static final Item JUNGLE_STAIRS;
   public static final Item ACACIA_STAIRS;
   public static final Item CHERRY_STAIRS;
   public static final Item DARK_OAK_STAIRS;
   public static final Item MANGROVE_STAIRS;
   public static final Item BAMBOO_STAIRS;
   public static final Item BAMBOO_MOSAIC_STAIRS;
   public static final Item CRIMSON_STAIRS;
   public static final Item WARPED_STAIRS;
   public static final Item COMMAND_BLOCK;
   public static final Item BEACON;
   public static final Item COBBLESTONE_WALL;
   public static final Item MOSSY_COBBLESTONE_WALL;
   public static final Item BRICK_WALL;
   public static final Item PRISMARINE_WALL;
   public static final Item RED_SANDSTONE_WALL;
   public static final Item MOSSY_STONE_BRICK_WALL;
   public static final Item GRANITE_WALL;
   public static final Item STONE_BRICK_WALL;
   public static final Item MUD_BRICK_WALL;
   public static final Item NETHER_BRICK_WALL;
   public static final Item ANDESITE_WALL;
   public static final Item RED_NETHER_BRICK_WALL;
   public static final Item SANDSTONE_WALL;
   public static final Item END_STONE_BRICK_WALL;
   public static final Item DIORITE_WALL;
   public static final Item BLACKSTONE_WALL;
   public static final Item POLISHED_BLACKSTONE_WALL;
   public static final Item POLISHED_BLACKSTONE_BRICK_WALL;
   public static final Item COBBLED_DEEPSLATE_WALL;
   public static final Item POLISHED_DEEPSLATE_WALL;
   public static final Item DEEPSLATE_BRICK_WALL;
   public static final Item DEEPSLATE_TILE_WALL;
   public static final Item ANVIL;
   public static final Item CHIPPED_ANVIL;
   public static final Item DAMAGED_ANVIL;
   public static final Item CHISELED_QUARTZ_BLOCK;
   public static final Item QUARTZ_BLOCK;
   public static final Item QUARTZ_BRICKS;
   public static final Item QUARTZ_PILLAR;
   public static final Item QUARTZ_STAIRS;
   public static final Item WHITE_TERRACOTTA;
   public static final Item ORANGE_TERRACOTTA;
   public static final Item MAGENTA_TERRACOTTA;
   public static final Item LIGHT_BLUE_TERRACOTTA;
   public static final Item YELLOW_TERRACOTTA;
   public static final Item LIME_TERRACOTTA;
   public static final Item PINK_TERRACOTTA;
   public static final Item GRAY_TERRACOTTA;
   public static final Item LIGHT_GRAY_TERRACOTTA;
   public static final Item CYAN_TERRACOTTA;
   public static final Item PURPLE_TERRACOTTA;
   public static final Item BLUE_TERRACOTTA;
   public static final Item BROWN_TERRACOTTA;
   public static final Item GREEN_TERRACOTTA;
   public static final Item RED_TERRACOTTA;
   public static final Item BLACK_TERRACOTTA;
   public static final Item BARRIER;
   public static final Item LIGHT;
   public static final Item HAY_BLOCK;
   public static final Item WHITE_CARPET;
   public static final Item ORANGE_CARPET;
   public static final Item MAGENTA_CARPET;
   public static final Item LIGHT_BLUE_CARPET;
   public static final Item YELLOW_CARPET;
   public static final Item LIME_CARPET;
   public static final Item PINK_CARPET;
   public static final Item GRAY_CARPET;
   public static final Item LIGHT_GRAY_CARPET;
   public static final Item CYAN_CARPET;
   public static final Item PURPLE_CARPET;
   public static final Item BLUE_CARPET;
   public static final Item BROWN_CARPET;
   public static final Item GREEN_CARPET;
   public static final Item RED_CARPET;
   public static final Item BLACK_CARPET;
   public static final Item TERRACOTTA;
   public static final Item PACKED_ICE;
   public static final Item DIRT_PATH;
   public static final Item SUNFLOWER;
   public static final Item LILAC;
   public static final Item ROSE_BUSH;
   public static final Item PEONY;
   public static final Item TALL_GRASS;
   public static final Item LARGE_FERN;
   public static final Item WHITE_STAINED_GLASS;
   public static final Item ORANGE_STAINED_GLASS;
   public static final Item MAGENTA_STAINED_GLASS;
   public static final Item LIGHT_BLUE_STAINED_GLASS;
   public static final Item YELLOW_STAINED_GLASS;
   public static final Item LIME_STAINED_GLASS;
   public static final Item PINK_STAINED_GLASS;
   public static final Item GRAY_STAINED_GLASS;
   public static final Item LIGHT_GRAY_STAINED_GLASS;
   public static final Item CYAN_STAINED_GLASS;
   public static final Item PURPLE_STAINED_GLASS;
   public static final Item BLUE_STAINED_GLASS;
   public static final Item BROWN_STAINED_GLASS;
   public static final Item GREEN_STAINED_GLASS;
   public static final Item RED_STAINED_GLASS;
   public static final Item BLACK_STAINED_GLASS;
   public static final Item WHITE_STAINED_GLASS_PANE;
   public static final Item ORANGE_STAINED_GLASS_PANE;
   public static final Item MAGENTA_STAINED_GLASS_PANE;
   public static final Item LIGHT_BLUE_STAINED_GLASS_PANE;
   public static final Item YELLOW_STAINED_GLASS_PANE;
   public static final Item LIME_STAINED_GLASS_PANE;
   public static final Item PINK_STAINED_GLASS_PANE;
   public static final Item GRAY_STAINED_GLASS_PANE;
   public static final Item LIGHT_GRAY_STAINED_GLASS_PANE;
   public static final Item CYAN_STAINED_GLASS_PANE;
   public static final Item PURPLE_STAINED_GLASS_PANE;
   public static final Item BLUE_STAINED_GLASS_PANE;
   public static final Item BROWN_STAINED_GLASS_PANE;
   public static final Item GREEN_STAINED_GLASS_PANE;
   public static final Item RED_STAINED_GLASS_PANE;
   public static final Item BLACK_STAINED_GLASS_PANE;
   public static final Item PRISMARINE;
   public static final Item PRISMARINE_BRICKS;
   public static final Item DARK_PRISMARINE;
   public static final Item PRISMARINE_STAIRS;
   public static final Item PRISMARINE_BRICK_STAIRS;
   public static final Item DARK_PRISMARINE_STAIRS;
   public static final Item SEA_LANTERN;
   public static final Item RED_SANDSTONE;
   public static final Item CHISELED_RED_SANDSTONE;
   public static final Item CUT_RED_SANDSTONE;
   public static final Item RED_SANDSTONE_STAIRS;
   public static final Item REPEATING_COMMAND_BLOCK;
   public static final Item CHAIN_COMMAND_BLOCK;
   public static final Item MAGMA_BLOCK;
   public static final Item NETHER_WART_BLOCK;
   public static final Item WARPED_WART_BLOCK;
   public static final Item RED_NETHER_BRICKS;
   public static final Item BONE_BLOCK;
   public static final Item STRUCTURE_VOID;
   public static final Item SHULKER_BOX;
   public static final Item WHITE_SHULKER_BOX;
   public static final Item ORANGE_SHULKER_BOX;
   public static final Item MAGENTA_SHULKER_BOX;
   public static final Item LIGHT_BLUE_SHULKER_BOX;
   public static final Item YELLOW_SHULKER_BOX;
   public static final Item LIME_SHULKER_BOX;
   public static final Item PINK_SHULKER_BOX;
   public static final Item GRAY_SHULKER_BOX;
   public static final Item LIGHT_GRAY_SHULKER_BOX;
   public static final Item CYAN_SHULKER_BOX;
   public static final Item PURPLE_SHULKER_BOX;
   public static final Item BLUE_SHULKER_BOX;
   public static final Item BROWN_SHULKER_BOX;
   public static final Item GREEN_SHULKER_BOX;
   public static final Item RED_SHULKER_BOX;
   public static final Item BLACK_SHULKER_BOX;
   public static final Item WHITE_GLAZED_TERRACOTTA;
   public static final Item ORANGE_GLAZED_TERRACOTTA;
   public static final Item MAGENTA_GLAZED_TERRACOTTA;
   public static final Item LIGHT_BLUE_GLAZED_TERRACOTTA;
   public static final Item YELLOW_GLAZED_TERRACOTTA;
   public static final Item LIME_GLAZED_TERRACOTTA;
   public static final Item PINK_GLAZED_TERRACOTTA;
   public static final Item GRAY_GLAZED_TERRACOTTA;
   public static final Item LIGHT_GRAY_GLAZED_TERRACOTTA;
   public static final Item CYAN_GLAZED_TERRACOTTA;
   public static final Item PURPLE_GLAZED_TERRACOTTA;
   public static final Item BLUE_GLAZED_TERRACOTTA;
   public static final Item BROWN_GLAZED_TERRACOTTA;
   public static final Item GREEN_GLAZED_TERRACOTTA;
   public static final Item RED_GLAZED_TERRACOTTA;
   public static final Item BLACK_GLAZED_TERRACOTTA;
   public static final Item WHITE_CONCRETE;
   public static final Item ORANGE_CONCRETE;
   public static final Item MAGENTA_CONCRETE;
   public static final Item LIGHT_BLUE_CONCRETE;
   public static final Item YELLOW_CONCRETE;
   public static final Item LIME_CONCRETE;
   public static final Item PINK_CONCRETE;
   public static final Item GRAY_CONCRETE;
   public static final Item LIGHT_GRAY_CONCRETE;
   public static final Item CYAN_CONCRETE;
   public static final Item PURPLE_CONCRETE;
   public static final Item BLUE_CONCRETE;
   public static final Item BROWN_CONCRETE;
   public static final Item GREEN_CONCRETE;
   public static final Item RED_CONCRETE;
   public static final Item BLACK_CONCRETE;
   public static final Item WHITE_CONCRETE_POWDER;
   public static final Item ORANGE_CONCRETE_POWDER;
   public static final Item MAGENTA_CONCRETE_POWDER;
   public static final Item LIGHT_BLUE_CONCRETE_POWDER;
   public static final Item YELLOW_CONCRETE_POWDER;
   public static final Item LIME_CONCRETE_POWDER;
   public static final Item PINK_CONCRETE_POWDER;
   public static final Item GRAY_CONCRETE_POWDER;
   public static final Item LIGHT_GRAY_CONCRETE_POWDER;
   public static final Item CYAN_CONCRETE_POWDER;
   public static final Item PURPLE_CONCRETE_POWDER;
   public static final Item BLUE_CONCRETE_POWDER;
   public static final Item BROWN_CONCRETE_POWDER;
   public static final Item GREEN_CONCRETE_POWDER;
   public static final Item RED_CONCRETE_POWDER;
   public static final Item BLACK_CONCRETE_POWDER;
   public static final Item TURTLE_EGG;
   public static final Item SNIFFER_EGG;
   public static final Item DEAD_TUBE_CORAL_BLOCK;
   public static final Item DEAD_BRAIN_CORAL_BLOCK;
   public static final Item DEAD_BUBBLE_CORAL_BLOCK;
   public static final Item DEAD_FIRE_CORAL_BLOCK;
   public static final Item DEAD_HORN_CORAL_BLOCK;
   public static final Item TUBE_CORAL_BLOCK;
   public static final Item BRAIN_CORAL_BLOCK;
   public static final Item BUBBLE_CORAL_BLOCK;
   public static final Item FIRE_CORAL_BLOCK;
   public static final Item HORN_CORAL_BLOCK;
   public static final Item TUBE_CORAL;
   public static final Item BRAIN_CORAL;
   public static final Item BUBBLE_CORAL;
   public static final Item FIRE_CORAL;
   public static final Item HORN_CORAL;
   public static final Item DEAD_BRAIN_CORAL;
   public static final Item DEAD_BUBBLE_CORAL;
   public static final Item DEAD_FIRE_CORAL;
   public static final Item DEAD_HORN_CORAL;
   public static final Item DEAD_TUBE_CORAL;
   public static final Item TUBE_CORAL_FAN;
   public static final Item BRAIN_CORAL_FAN;
   public static final Item BUBBLE_CORAL_FAN;
   public static final Item FIRE_CORAL_FAN;
   public static final Item HORN_CORAL_FAN;
   public static final Item DEAD_TUBE_CORAL_FAN;
   public static final Item DEAD_BRAIN_CORAL_FAN;
   public static final Item DEAD_BUBBLE_CORAL_FAN;
   public static final Item DEAD_FIRE_CORAL_FAN;
   public static final Item DEAD_HORN_CORAL_FAN;
   public static final Item BLUE_ICE;
   public static final Item CONDUIT;
   public static final Item POLISHED_GRANITE_STAIRS;
   public static final Item SMOOTH_RED_SANDSTONE_STAIRS;
   public static final Item MOSSY_STONE_BRICK_STAIRS;
   public static final Item POLISHED_DIORITE_STAIRS;
   public static final Item MOSSY_COBBLESTONE_STAIRS;
   public static final Item END_STONE_BRICK_STAIRS;
   public static final Item STONE_STAIRS;
   public static final Item SMOOTH_SANDSTONE_STAIRS;
   public static final Item SMOOTH_QUARTZ_STAIRS;
   public static final Item GRANITE_STAIRS;
   public static final Item ANDESITE_STAIRS;
   public static final Item RED_NETHER_BRICK_STAIRS;
   public static final Item POLISHED_ANDESITE_STAIRS;
   public static final Item DIORITE_STAIRS;
   public static final Item COBBLED_DEEPSLATE_STAIRS;
   public static final Item POLISHED_DEEPSLATE_STAIRS;
   public static final Item DEEPSLATE_BRICK_STAIRS;
   public static final Item DEEPSLATE_TILE_STAIRS;
   public static final Item POLISHED_GRANITE_SLAB;
   public static final Item SMOOTH_RED_SANDSTONE_SLAB;
   public static final Item MOSSY_STONE_BRICK_SLAB;
   public static final Item POLISHED_DIORITE_SLAB;
   public static final Item MOSSY_COBBLESTONE_SLAB;
   public static final Item END_STONE_BRICK_SLAB;
   public static final Item SMOOTH_SANDSTONE_SLAB;
   public static final Item SMOOTH_QUARTZ_SLAB;
   public static final Item GRANITE_SLAB;
   public static final Item ANDESITE_SLAB;
   public static final Item RED_NETHER_BRICK_SLAB;
   public static final Item POLISHED_ANDESITE_SLAB;
   public static final Item DIORITE_SLAB;
   public static final Item COBBLED_DEEPSLATE_SLAB;
   public static final Item POLISHED_DEEPSLATE_SLAB;
   public static final Item DEEPSLATE_BRICK_SLAB;
   public static final Item DEEPSLATE_TILE_SLAB;
   public static final Item SCAFFOLDING;
   public static final Item REDSTONE;
   public static final Item REDSTONE_TORCH;
   public static final Item REDSTONE_BLOCK;
   public static final Item REPEATER;
   public static final Item COMPARATOR;
   public static final Item PISTON;
   public static final Item STICKY_PISTON;
   public static final Item SLIME_BLOCK;
   public static final Item HONEY_BLOCK;
   public static final Item OBSERVER;
   public static final Item HOPPER;
   public static final Item DISPENSER;
   public static final Item DROPPER;
   public static final Item LECTERN;
   public static final Item TARGET;
   public static final Item LEVER;
   public static final Item LIGHTNING_ROD;
   public static final Item DAYLIGHT_DETECTOR;
   public static final Item SCULK_SENSOR;
   public static final Item CALIBRATED_SCULK_SENSOR;
   public static final Item TRIPWIRE_HOOK;
   public static final Item TRAPPED_CHEST;
   public static final Item TNT;
   public static final Item REDSTONE_LAMP;
   public static final Item NOTE_BLOCK;
   public static final Item STONE_BUTTON;
   public static final Item POLISHED_BLACKSTONE_BUTTON;
   public static final Item OAK_BUTTON;
   public static final Item SPRUCE_BUTTON;
   public static final Item BIRCH_BUTTON;
   public static final Item JUNGLE_BUTTON;
   public static final Item ACACIA_BUTTON;
   public static final Item CHERRY_BUTTON;
   public static final Item DARK_OAK_BUTTON;
   public static final Item MANGROVE_BUTTON;
   public static final Item BAMBOO_BUTTON;
   public static final Item CRIMSON_BUTTON;
   public static final Item WARPED_BUTTON;
   public static final Item STONE_PRESSURE_PLATE;
   public static final Item POLISHED_BLACKSTONE_PRESSURE_PLATE;
   public static final Item LIGHT_WEIGHTED_PRESSURE_PLATE;
   public static final Item HEAVY_WEIGHTED_PRESSURE_PLATE;
   public static final Item OAK_PRESSURE_PLATE;
   public static final Item SPRUCE_PRESSURE_PLATE;
   public static final Item BIRCH_PRESSURE_PLATE;
   public static final Item JUNGLE_PRESSURE_PLATE;
   public static final Item ACACIA_PRESSURE_PLATE;
   public static final Item CHERRY_PRESSURE_PLATE;
   public static final Item DARK_OAK_PRESSURE_PLATE;
   public static final Item MANGROVE_PRESSURE_PLATE;
   public static final Item BAMBOO_PRESSURE_PLATE;
   public static final Item CRIMSON_PRESSURE_PLATE;
   public static final Item WARPED_PRESSURE_PLATE;
   public static final Item IRON_DOOR;
   public static final Item OAK_DOOR;
   public static final Item SPRUCE_DOOR;
   public static final Item BIRCH_DOOR;
   public static final Item JUNGLE_DOOR;
   public static final Item ACACIA_DOOR;
   public static final Item CHERRY_DOOR;
   public static final Item DARK_OAK_DOOR;
   public static final Item MANGROVE_DOOR;
   public static final Item BAMBOO_DOOR;
   public static final Item CRIMSON_DOOR;
   public static final Item WARPED_DOOR;
   public static final Item IRON_TRAPDOOR;
   public static final Item OAK_TRAPDOOR;
   public static final Item SPRUCE_TRAPDOOR;
   public static final Item BIRCH_TRAPDOOR;
   public static final Item JUNGLE_TRAPDOOR;
   public static final Item ACACIA_TRAPDOOR;
   public static final Item CHERRY_TRAPDOOR;
   public static final Item DARK_OAK_TRAPDOOR;
   public static final Item MANGROVE_TRAPDOOR;
   public static final Item BAMBOO_TRAPDOOR;
   public static final Item CRIMSON_TRAPDOOR;
   public static final Item WARPED_TRAPDOOR;
   public static final Item OAK_FENCE_GATE;
   public static final Item SPRUCE_FENCE_GATE;
   public static final Item BIRCH_FENCE_GATE;
   public static final Item JUNGLE_FENCE_GATE;
   public static final Item ACACIA_FENCE_GATE;
   public static final Item CHERRY_FENCE_GATE;
   public static final Item DARK_OAK_FENCE_GATE;
   public static final Item MANGROVE_FENCE_GATE;
   public static final Item BAMBOO_FENCE_GATE;
   public static final Item CRIMSON_FENCE_GATE;
   public static final Item WARPED_FENCE_GATE;
   public static final Item POWERED_RAIL;
   public static final Item DETECTOR_RAIL;
   public static final Item RAIL;
   public static final Item ACTIVATOR_RAIL;
   public static final Item SADDLE;
   public static final Item MINECART;
   public static final Item CHEST_MINECART;
   public static final Item FURNACE_MINECART;
   public static final Item TNT_MINECART;
   public static final Item HOPPER_MINECART;
   public static final Item CARROT_ON_A_STICK;
   public static final Item WARPED_FUNGUS_ON_A_STICK;
   public static final Item ELYTRA;
   public static final Item OAK_BOAT;
   public static final Item OAK_CHEST_BOAT;
   public static final Item SPRUCE_BOAT;
   public static final Item SPRUCE_CHEST_BOAT;
   public static final Item BIRCH_BOAT;
   public static final Item BIRCH_CHEST_BOAT;
   public static final Item JUNGLE_BOAT;
   public static final Item JUNGLE_CHEST_BOAT;
   public static final Item ACACIA_BOAT;
   public static final Item ACACIA_CHEST_BOAT;
   public static final Item CHERRY_BOAT;
   public static final Item CHERRY_CHEST_BOAT;
   public static final Item DARK_OAK_BOAT;
   public static final Item DARK_OAK_CHEST_BOAT;
   public static final Item MANGROVE_BOAT;
   public static final Item MANGROVE_CHEST_BOAT;
   public static final Item BAMBOO_RAFT;
   public static final Item BAMBOO_CHEST_RAFT;
   public static final Item STRUCTURE_BLOCK;
   public static final Item JIGSAW;
   public static final Item TURTLE_HELMET;
   public static final Item SCUTE;
   public static final Item FLINT_AND_STEEL;
   public static final Item APPLE;
   public static final Item BOW;
   public static final Item ARROW;
   public static final Item COAL;
   public static final Item CHARCOAL;
   public static final Item DIAMOND;
   public static final Item EMERALD;
   public static final Item LAPIS_LAZULI;
   public static final Item QUARTZ;
   public static final Item AMETHYST_SHARD;
   public static final Item RAW_IRON;
   public static final Item IRON_INGOT;
   public static final Item RAW_COPPER;
   public static final Item COPPER_INGOT;
   public static final Item RAW_GOLD;
   public static final Item GOLD_INGOT;
   public static final Item NETHERITE_INGOT;
   public static final Item NETHERITE_SCRAP;
   public static final Item WOODEN_SWORD;
   public static final Item WOODEN_SHOVEL;
   public static final Item WOODEN_PICKAXE;
   public static final Item WOODEN_AXE;
   public static final Item WOODEN_HOE;
   public static final Item STONE_SWORD;
   public static final Item STONE_SHOVEL;
   public static final Item STONE_PICKAXE;
   public static final Item STONE_AXE;
   public static final Item STONE_HOE;
   public static final Item GOLDEN_SWORD;
   public static final Item GOLDEN_SHOVEL;
   public static final Item GOLDEN_PICKAXE;
   public static final Item GOLDEN_AXE;
   public static final Item GOLDEN_HOE;
   public static final Item IRON_SWORD;
   public static final Item IRON_SHOVEL;
   public static final Item IRON_PICKAXE;
   public static final Item IRON_AXE;
   public static final Item IRON_HOE;
   public static final Item DIAMOND_SWORD;
   public static final Item DIAMOND_SHOVEL;
   public static final Item DIAMOND_PICKAXE;
   public static final Item DIAMOND_AXE;
   public static final Item DIAMOND_HOE;
   public static final Item NETHERITE_SWORD;
   public static final Item NETHERITE_SHOVEL;
   public static final Item NETHERITE_PICKAXE;
   public static final Item NETHERITE_AXE;
   public static final Item NETHERITE_HOE;
   public static final Item STICK;
   public static final Item BOWL;
   public static final Item MUSHROOM_STEW;
   public static final Item STRING;
   public static final Item FEATHER;
   public static final Item GUNPOWDER;
   public static final Item WHEAT_SEEDS;
   public static final Item WHEAT;
   public static final Item BREAD;
   public static final Item LEATHER_HELMET;
   public static final Item LEATHER_CHESTPLATE;
   public static final Item LEATHER_LEGGINGS;
   public static final Item LEATHER_BOOTS;
   public static final Item CHAINMAIL_HELMET;
   public static final Item CHAINMAIL_CHESTPLATE;
   public static final Item CHAINMAIL_LEGGINGS;
   public static final Item CHAINMAIL_BOOTS;
   public static final Item IRON_HELMET;
   public static final Item IRON_CHESTPLATE;
   public static final Item IRON_LEGGINGS;
   public static final Item IRON_BOOTS;
   public static final Item DIAMOND_HELMET;
   public static final Item DIAMOND_CHESTPLATE;
   public static final Item DIAMOND_LEGGINGS;
   public static final Item DIAMOND_BOOTS;
   public static final Item GOLDEN_HELMET;
   public static final Item GOLDEN_CHESTPLATE;
   public static final Item GOLDEN_LEGGINGS;
   public static final Item GOLDEN_BOOTS;
   public static final Item NETHERITE_HELMET;
   public static final Item NETHERITE_CHESTPLATE;
   public static final Item NETHERITE_LEGGINGS;
   public static final Item NETHERITE_BOOTS;
   public static final Item FLINT;
   public static final Item PORKCHOP;
   public static final Item COOKED_PORKCHOP;
   public static final Item PAINTING;
   public static final Item GOLDEN_APPLE;
   public static final Item ENCHANTED_GOLDEN_APPLE;
   public static final Item OAK_SIGN;
   public static final Item SPRUCE_SIGN;
   public static final Item BIRCH_SIGN;
   public static final Item JUNGLE_SIGN;
   public static final Item ACACIA_SIGN;
   public static final Item CHERRY_SIGN;
   public static final Item DARK_OAK_SIGN;
   public static final Item MANGROVE_SIGN;
   public static final Item BAMBOO_SIGN;
   public static final Item CRIMSON_SIGN;
   public static final Item WARPED_SIGN;
   public static final Item OAK_HANGING_SIGN;
   public static final Item SPRUCE_HANGING_SIGN;
   public static final Item BIRCH_HANGING_SIGN;
   public static final Item JUNGLE_HANGING_SIGN;
   public static final Item ACACIA_HANGING_SIGN;
   public static final Item CHERRY_HANGING_SIGN;
   public static final Item DARK_OAK_HANGING_SIGN;
   public static final Item MANGROVE_HANGING_SIGN;
   public static final Item BAMBOO_HANGING_SIGN;
   public static final Item CRIMSON_HANGING_SIGN;
   public static final Item WARPED_HANGING_SIGN;
   public static final Item BUCKET;
   public static final Item WATER_BUCKET;
   public static final Item LAVA_BUCKET;
   public static final Item POWDER_SNOW_BUCKET;
   public static final Item SNOWBALL;
   public static final Item LEATHER;
   public static final Item MILK_BUCKET;
   public static final Item PUFFERFISH_BUCKET;
   public static final Item SALMON_BUCKET;
   public static final Item COD_BUCKET;
   public static final Item TROPICAL_FISH_BUCKET;
   public static final Item AXOLOTL_BUCKET;
   public static final Item TADPOLE_BUCKET;
   public static final Item BRICK;
   public static final Item CLAY_BALL;
   public static final Item DRIED_KELP_BLOCK;
   public static final Item PAPER;
   public static final Item BOOK;
   public static final Item SLIME_BALL;
   public static final Item EGG;
   public static final Item COMPASS;
   public static final Item RECOVERY_COMPASS;
   public static final Item BUNDLE;
   public static final Item FISHING_ROD;
   public static final Item CLOCK;
   public static final Item SPYGLASS;
   public static final Item GLOWSTONE_DUST;
   public static final Item COD;
   public static final Item SALMON;
   public static final Item TROPICAL_FISH;
   public static final Item PUFFERFISH;
   public static final Item COOKED_COD;
   public static final Item COOKED_SALMON;
   public static final Item INK_SAC;
   public static final Item GLOW_INK_SAC;
   public static final Item COCOA_BEANS;
   public static final Item WHITE_DYE;
   public static final Item ORANGE_DYE;
   public static final Item MAGENTA_DYE;
   public static final Item LIGHT_BLUE_DYE;
   public static final Item YELLOW_DYE;
   public static final Item LIME_DYE;
   public static final Item PINK_DYE;
   public static final Item GRAY_DYE;
   public static final Item LIGHT_GRAY_DYE;
   public static final Item CYAN_DYE;
   public static final Item PURPLE_DYE;
   public static final Item BLUE_DYE;
   public static final Item BROWN_DYE;
   public static final Item GREEN_DYE;
   public static final Item RED_DYE;
   public static final Item BLACK_DYE;
   public static final Item BONE_MEAL;
   public static final Item BONE;
   public static final Item SUGAR;
   public static final Item CAKE;
   public static final Item WHITE_BED;
   public static final Item ORANGE_BED;
   public static final Item MAGENTA_BED;
   public static final Item LIGHT_BLUE_BED;
   public static final Item YELLOW_BED;
   public static final Item LIME_BED;
   public static final Item PINK_BED;
   public static final Item GRAY_BED;
   public static final Item LIGHT_GRAY_BED;
   public static final Item CYAN_BED;
   public static final Item PURPLE_BED;
   public static final Item BLUE_BED;
   public static final Item BROWN_BED;
   public static final Item GREEN_BED;
   public static final Item RED_BED;
   public static final Item BLACK_BED;
   public static final Item COOKIE;
   public static final Item FILLED_MAP;
   public static final Item SHEARS;
   public static final Item MELON_SLICE;
   public static final Item DRIED_KELP;
   public static final Item PUMPKIN_SEEDS;
   public static final Item MELON_SEEDS;
   public static final Item BEEF;
   public static final Item COOKED_BEEF;
   public static final Item CHICKEN;
   public static final Item COOKED_CHICKEN;
   public static final Item ROTTEN_FLESH;
   public static final Item ENDER_PEARL;
   public static final Item BLAZE_ROD;
   public static final Item GHAST_TEAR;
   public static final Item GOLD_NUGGET;
   public static final Item NETHER_WART;
   public static final Item POTION;
   public static final Item GLASS_BOTTLE;
   public static final Item SPIDER_EYE;
   public static final Item FERMENTED_SPIDER_EYE;
   public static final Item BLAZE_POWDER;
   public static final Item MAGMA_CREAM;
   public static final Item BREWING_STAND;
   public static final Item CAULDRON;
   public static final Item ENDER_EYE;
   public static final Item GLISTERING_MELON_SLICE;
   public static final Item ALLAY_SPAWN_EGG;
   public static final Item AXOLOTL_SPAWN_EGG;
   public static final Item BAT_SPAWN_EGG;
   public static final Item BEE_SPAWN_EGG;
   public static final Item BLAZE_SPAWN_EGG;
   public static final Item CAT_SPAWN_EGG;
   public static final Item CAMEL_SPAWN_EGG;
   public static final Item CAVE_SPIDER_SPAWN_EGG;
   public static final Item CHICKEN_SPAWN_EGG;
   public static final Item COD_SPAWN_EGG;
   public static final Item COW_SPAWN_EGG;
   public static final Item CREEPER_SPAWN_EGG;
   public static final Item DOLPHIN_SPAWN_EGG;
   public static final Item DONKEY_SPAWN_EGG;
   public static final Item DROWNED_SPAWN_EGG;
   public static final Item ELDER_GUARDIAN_SPAWN_EGG;
   public static final Item ENDER_DRAGON_SPAWN_EGG;
   public static final Item ENDERMAN_SPAWN_EGG;
   public static final Item ENDERMITE_SPAWN_EGG;
   public static final Item EVOKER_SPAWN_EGG;
   public static final Item FOX_SPAWN_EGG;
   public static final Item FROG_SPAWN_EGG;
   public static final Item GHAST_SPAWN_EGG;
   public static final Item GLOW_SQUID_SPAWN_EGG;
   public static final Item GOAT_SPAWN_EGG;
   public static final Item GUARDIAN_SPAWN_EGG;
   public static final Item HOGLIN_SPAWN_EGG;
   public static final Item HORSE_SPAWN_EGG;
   public static final Item HUSK_SPAWN_EGG;
   public static final Item IRON_GOLEM_SPAWN_EGG;
   public static final Item LLAMA_SPAWN_EGG;
   public static final Item MAGMA_CUBE_SPAWN_EGG;
   public static final Item MOOSHROOM_SPAWN_EGG;
   public static final Item MULE_SPAWN_EGG;
   public static final Item OCELOT_SPAWN_EGG;
   public static final Item PANDA_SPAWN_EGG;
   public static final Item PARROT_SPAWN_EGG;
   public static final Item PHANTOM_SPAWN_EGG;
   public static final Item PIG_SPAWN_EGG;
   public static final Item PIGLIN_SPAWN_EGG;
   public static final Item PIGLIN_BRUTE_SPAWN_EGG;
   public static final Item PILLAGER_SPAWN_EGG;
   public static final Item POLAR_BEAR_SPAWN_EGG;
   public static final Item PUFFERFISH_SPAWN_EGG;
   public static final Item RABBIT_SPAWN_EGG;
   public static final Item RAVAGER_SPAWN_EGG;
   public static final Item SALMON_SPAWN_EGG;
   public static final Item SHEEP_SPAWN_EGG;
   public static final Item SHULKER_SPAWN_EGG;
   public static final Item SILVERFISH_SPAWN_EGG;
   public static final Item SKELETON_SPAWN_EGG;
   public static final Item SKELETON_HORSE_SPAWN_EGG;
   public static final Item SLIME_SPAWN_EGG;
   public static final Item SNIFFER_SPAWN_EGG;
   public static final Item SNOW_GOLEM_SPAWN_EGG;
   public static final Item SPIDER_SPAWN_EGG;
   public static final Item SQUID_SPAWN_EGG;
   public static final Item STRAY_SPAWN_EGG;
   public static final Item STRIDER_SPAWN_EGG;
   public static final Item TADPOLE_SPAWN_EGG;
   public static final Item TRADER_LLAMA_SPAWN_EGG;
   public static final Item TROPICAL_FISH_SPAWN_EGG;
   public static final Item TURTLE_SPAWN_EGG;
   public static final Item VEX_SPAWN_EGG;
   public static final Item VILLAGER_SPAWN_EGG;
   public static final Item VINDICATOR_SPAWN_EGG;
   public static final Item WANDERING_TRADER_SPAWN_EGG;
   public static final Item WARDEN_SPAWN_EGG;
   public static final Item WITCH_SPAWN_EGG;
   public static final Item WITHER_SPAWN_EGG;
   public static final Item WITHER_SKELETON_SPAWN_EGG;
   public static final Item WOLF_SPAWN_EGG;
   public static final Item ZOGLIN_SPAWN_EGG;
   public static final Item ZOMBIE_SPAWN_EGG;
   public static final Item ZOMBIE_HORSE_SPAWN_EGG;
   public static final Item ZOMBIE_VILLAGER_SPAWN_EGG;
   public static final Item ZOMBIFIED_PIGLIN_SPAWN_EGG;
   public static final Item EXPERIENCE_BOTTLE;
   public static final Item FIRE_CHARGE;
   public static final Item WRITABLE_BOOK;
   public static final Item WRITTEN_BOOK;
   public static final Item ITEM_FRAME;
   public static final Item GLOW_ITEM_FRAME;
   public static final Item FLOWER_POT;
   public static final Item CARROT;
   public static final Item POTATO;
   public static final Item BAKED_POTATO;
   public static final Item POISONOUS_POTATO;
   public static final Item MAP;
   public static final Item GOLDEN_CARROT;
   public static final Item SKELETON_SKULL;
   public static final Item WITHER_SKELETON_SKULL;
   public static final Item PLAYER_HEAD;
   public static final Item ZOMBIE_HEAD;
   public static final Item CREEPER_HEAD;
   public static final Item DRAGON_HEAD;
   public static final Item PIGLIN_HEAD;
   public static final Item NETHER_STAR;
   public static final Item PUMPKIN_PIE;
   public static final Item FIREWORK_ROCKET;
   public static final Item FIREWORK_STAR;
   public static final Item ENCHANTED_BOOK;
   public static final Item NETHER_BRICK;
   public static final Item PRISMARINE_SHARD;
   public static final Item PRISMARINE_CRYSTALS;
   public static final Item RABBIT;
   public static final Item COOKED_RABBIT;
   public static final Item RABBIT_STEW;
   public static final Item RABBIT_FOOT;
   public static final Item RABBIT_HIDE;
   public static final Item ARMOR_STAND;
   public static final Item IRON_HORSE_ARMOR;
   public static final Item GOLDEN_HORSE_ARMOR;
   public static final Item DIAMOND_HORSE_ARMOR;
   public static final Item LEATHER_HORSE_ARMOR;
   public static final Item LEAD;
   public static final Item NAME_TAG;
   public static final Item COMMAND_BLOCK_MINECART;
   public static final Item MUTTON;
   public static final Item COOKED_MUTTON;
   public static final Item WHITE_BANNER;
   public static final Item ORANGE_BANNER;
   public static final Item MAGENTA_BANNER;
   public static final Item LIGHT_BLUE_BANNER;
   public static final Item YELLOW_BANNER;
   public static final Item LIME_BANNER;
   public static final Item PINK_BANNER;
   public static final Item GRAY_BANNER;
   public static final Item LIGHT_GRAY_BANNER;
   public static final Item CYAN_BANNER;
   public static final Item PURPLE_BANNER;
   public static final Item BLUE_BANNER;
   public static final Item BROWN_BANNER;
   public static final Item GREEN_BANNER;
   public static final Item RED_BANNER;
   public static final Item BLACK_BANNER;
   public static final Item END_CRYSTAL;
   public static final Item CHORUS_FRUIT;
   public static final Item POPPED_CHORUS_FRUIT;
   public static final Item TORCHFLOWER_SEEDS;
   public static final Item PITCHER_POD;
   public static final Item BEETROOT;
   public static final Item BEETROOT_SEEDS;
   public static final Item BEETROOT_SOUP;
   public static final Item DRAGON_BREATH;
   public static final Item SPLASH_POTION;
   public static final Item SPECTRAL_ARROW;
   public static final Item TIPPED_ARROW;
   public static final Item LINGERING_POTION;
   public static final Item SHIELD;
   public static final Item TOTEM_OF_UNDYING;
   public static final Item SHULKER_SHELL;
   public static final Item IRON_NUGGET;
   public static final Item KNOWLEDGE_BOOK;
   public static final Item DEBUG_STICK;
   public static final Item MUSIC_DISC_13;
   public static final Item MUSIC_DISC_CAT;
   public static final Item MUSIC_DISC_BLOCKS;
   public static final Item MUSIC_DISC_CHIRP;
   public static final Item MUSIC_DISC_FAR;
   public static final Item MUSIC_DISC_MALL;
   public static final Item MUSIC_DISC_MELLOHI;
   public static final Item MUSIC_DISC_STAL;
   public static final Item MUSIC_DISC_STRAD;
   public static final Item MUSIC_DISC_WARD;
   public static final Item MUSIC_DISC_11;
   public static final Item MUSIC_DISC_WAIT;
   public static final Item MUSIC_DISC_OTHERSIDE;
   public static final Item MUSIC_DISC_5;
   public static final Item MUSIC_DISC_PIGSTEP;
   public static final Item DISC_FRAGMENT_5;
   public static final Item TRIDENT;
   public static final Item PHANTOM_MEMBRANE;
   public static final Item NAUTILUS_SHELL;
   public static final Item HEART_OF_THE_SEA;
   public static final Item CROSSBOW;
   public static final Item SUSPICIOUS_STEW;
   public static final Item LOOM;
   public static final Item FLOWER_BANNER_PATTERN;
   public static final Item CREEPER_BANNER_PATTERN;
   public static final Item SKULL_BANNER_PATTERN;
   public static final Item MOJANG_BANNER_PATTERN;
   public static final Item GLOBE_BANNER_PATTERN;
   public static final Item PIGLIN_BANNER_PATTERN;
   public static final Item GOAT_HORN;
   public static final Item COMPOSTER;
   public static final Item BARREL;
   public static final Item SMOKER;
   public static final Item BLAST_FURNACE;
   public static final Item CARTOGRAPHY_TABLE;
   public static final Item FLETCHING_TABLE;
   public static final Item GRINDSTONE;
   public static final Item SMITHING_TABLE;
   public static final Item STONECUTTER;
   public static final Item BELL;
   public static final Item LANTERN;
   public static final Item SOUL_LANTERN;
   public static final Item SWEET_BERRIES;
   public static final Item GLOW_BERRIES;
   public static final Item CAMPFIRE;
   public static final Item SOUL_CAMPFIRE;
   public static final Item SHROOMLIGHT;
   public static final Item HONEYCOMB;
   public static final Item BEE_NEST;
   public static final Item BEEHIVE;
   public static final Item HONEY_BOTTLE;
   public static final Item HONEYCOMB_BLOCK;
   public static final Item LODESTONE;
   public static final Item CRYING_OBSIDIAN;
   public static final Item BLACKSTONE;
   public static final Item BLACKSTONE_SLAB;
   public static final Item BLACKSTONE_STAIRS;
   public static final Item GILDED_BLACKSTONE;
   public static final Item POLISHED_BLACKSTONE;
   public static final Item POLISHED_BLACKSTONE_SLAB;
   public static final Item POLISHED_BLACKSTONE_STAIRS;
   public static final Item CHISELED_POLISHED_BLACKSTONE;
   public static final Item POLISHED_BLACKSTONE_BRICKS;
   public static final Item POLISHED_BLACKSTONE_BRICK_SLAB;
   public static final Item POLISHED_BLACKSTONE_BRICK_STAIRS;
   public static final Item CRACKED_POLISHED_BLACKSTONE_BRICKS;
   public static final Item RESPAWN_ANCHOR;
   public static final Item CANDLE;
   public static final Item WHITE_CANDLE;
   public static final Item ORANGE_CANDLE;
   public static final Item MAGENTA_CANDLE;
   public static final Item LIGHT_BLUE_CANDLE;
   public static final Item YELLOW_CANDLE;
   public static final Item LIME_CANDLE;
   public static final Item PINK_CANDLE;
   public static final Item GRAY_CANDLE;
   public static final Item LIGHT_GRAY_CANDLE;
   public static final Item CYAN_CANDLE;
   public static final Item PURPLE_CANDLE;
   public static final Item BLUE_CANDLE;
   public static final Item BROWN_CANDLE;
   public static final Item GREEN_CANDLE;
   public static final Item RED_CANDLE;
   public static final Item BLACK_CANDLE;
   public static final Item SMALL_AMETHYST_BUD;
   public static final Item MEDIUM_AMETHYST_BUD;
   public static final Item LARGE_AMETHYST_BUD;
   public static final Item AMETHYST_CLUSTER;
   public static final Item POINTED_DRIPSTONE;
   public static final Item OCHRE_FROGLIGHT;
   public static final Item VERDANT_FROGLIGHT;
   public static final Item PEARLESCENT_FROGLIGHT;
   public static final Item FROGSPAWN;
   public static final Item ECHO_SHARD;
   public static final Item BRUSH;
   public static final Item NETHERITE_UPGRADE_SMITHING_TEMPLATE;
   public static final Item SENTRY_ARMOR_TRIM_SMITHING_TEMPLATE;
   public static final Item DUNE_ARMOR_TRIM_SMITHING_TEMPLATE;
   public static final Item COAST_ARMOR_TRIM_SMITHING_TEMPLATE;
   public static final Item WILD_ARMOR_TRIM_SMITHING_TEMPLATE;
   public static final Item WARD_ARMOR_TRIM_SMITHING_TEMPLATE;
   public static final Item EYE_ARMOR_TRIM_SMITHING_TEMPLATE;
   public static final Item VEX_ARMOR_TRIM_SMITHING_TEMPLATE;
   public static final Item TIDE_ARMOR_TRIM_SMITHING_TEMPLATE;
   public static final Item SNOUT_ARMOR_TRIM_SMITHING_TEMPLATE;
   public static final Item RIB_ARMOR_TRIM_SMITHING_TEMPLATE;
   public static final Item SPIRE_ARMOR_TRIM_SMITHING_TEMPLATE;
   public static final Item WAYFINDER_ARMOR_TRIM_SMITHING_TEMPLATE;
   public static final Item SHAPER_ARMOR_TRIM_SMITHING_TEMPLATE;
   public static final Item SILENCE_ARMOR_TRIM_SMITHING_TEMPLATE;
   public static final Item RAISER_ARMOR_TRIM_SMITHING_TEMPLATE;
   public static final Item HOST_ARMOR_TRIM_SMITHING_TEMPLATE;
   public static final Item ANGLER_POTTERY_SHARD;
   public static final Item ARCHER_POTTERY_SHARD;
   public static final Item ARMS_UP_POTTERY_SHARD;
   public static final Item BLADE_POTTERY_SHARD;
   public static final Item BREWER_POTTERY_SHARD;
   public static final Item BURN_POTTERY_SHARD;
   public static final Item DANGER_POTTERY_SHARD;
   public static final Item EXPLORER_POTTERY_SHARD;
   public static final Item FRIEND_POTTERY_SHARD;
   public static final Item HEART_POTTERY_SHARD;
   public static final Item HEARTBREAK_POTTERY_SHARD;
   public static final Item HOWL_POTTERY_SHARD;
   public static final Item MINER_POTTERY_SHARD;
   public static final Item MOURNER_POTTERY_SHARD;
   public static final Item PLENTY_POTTERY_SHARD;
   public static final Item PRIZE_POTTERY_SHARD;
   public static final Item SHEAF_POTTERY_SHARD;
   public static final Item SHELTER_POTTERY_SHARD;
   public static final Item SKULL_POTTERY_SHARD;
   public static final Item SNORT_POTTERY_SHARD;

   private static Item register(Block block) {
      return register(new BlockItem(block, new Item.Settings()));
   }

   private static Item register(Block block, Block... blocks) {
      BlockItem lv = new BlockItem(block, new Item.Settings());
      Block[] var3 = blocks;
      int var4 = blocks.length;

      for(int var5 = 0; var5 < var4; ++var5) {
         Block lv2 = var3[var5];
         Item.BLOCK_ITEMS.put(lv2, lv);
      }

      return register(lv);
   }

   private static Item register(BlockItem item) {
      return register((Block)item.getBlock(), (Item)item);
   }

   protected static Item register(Block block, Item item) {
      return register(Registries.BLOCK.getId(block), item);
   }

   private static Item register(String id, Item item) {
      return register(new Identifier(id), item);
   }

   private static Item register(Identifier id, Item item) {
      if (item instanceof BlockItem) {
         ((BlockItem)item).appendBlocks(Item.BLOCK_ITEMS, item);
      }

      return (Item)Registry.register(Registries.ITEM, (Identifier)id, item);
   }

   static {
      AIR = register((Block)Blocks.AIR, (Item)(new AirBlockItem(Blocks.AIR, new Item.Settings())));
      STONE = register(Blocks.STONE);
      GRANITE = register(Blocks.GRANITE);
      POLISHED_GRANITE = register(Blocks.POLISHED_GRANITE);
      DIORITE = register(Blocks.DIORITE);
      POLISHED_DIORITE = register(Blocks.POLISHED_DIORITE);
      ANDESITE = register(Blocks.ANDESITE);
      POLISHED_ANDESITE = register(Blocks.POLISHED_ANDESITE);
      DEEPSLATE = register(Blocks.DEEPSLATE);
      COBBLED_DEEPSLATE = register(Blocks.COBBLED_DEEPSLATE);
      POLISHED_DEEPSLATE = register(Blocks.POLISHED_DEEPSLATE);
      CALCITE = register(Blocks.CALCITE);
      TUFF = register(Blocks.TUFF);
      DRIPSTONE_BLOCK = register(Blocks.DRIPSTONE_BLOCK);
      GRASS_BLOCK = register(Blocks.GRASS_BLOCK);
      DIRT = register(Blocks.DIRT);
      COARSE_DIRT = register(Blocks.COARSE_DIRT);
      PODZOL = register(Blocks.PODZOL);
      ROOTED_DIRT = register(Blocks.ROOTED_DIRT);
      MUD = register(Blocks.MUD);
      CRIMSON_NYLIUM = register(Blocks.CRIMSON_NYLIUM);
      WARPED_NYLIUM = register(Blocks.WARPED_NYLIUM);
      COBBLESTONE = register(Blocks.COBBLESTONE);
      OAK_PLANKS = register(Blocks.OAK_PLANKS);
      SPRUCE_PLANKS = register(Blocks.SPRUCE_PLANKS);
      BIRCH_PLANKS = register(Blocks.BIRCH_PLANKS);
      JUNGLE_PLANKS = register(Blocks.JUNGLE_PLANKS);
      ACACIA_PLANKS = register(Blocks.ACACIA_PLANKS);
      CHERRY_PLANKS = register(Blocks.CHERRY_PLANKS);
      DARK_OAK_PLANKS = register(Blocks.DARK_OAK_PLANKS);
      MANGROVE_PLANKS = register(Blocks.MANGROVE_PLANKS);
      BAMBOO_PLANKS = register(Blocks.BAMBOO_PLANKS);
      CRIMSON_PLANKS = register(Blocks.CRIMSON_PLANKS);
      WARPED_PLANKS = register(Blocks.WARPED_PLANKS);
      BAMBOO_MOSAIC = register(Blocks.BAMBOO_MOSAIC);
      OAK_SAPLING = register(Blocks.OAK_SAPLING);
      SPRUCE_SAPLING = register(Blocks.SPRUCE_SAPLING);
      BIRCH_SAPLING = register(Blocks.BIRCH_SAPLING);
      JUNGLE_SAPLING = register(Blocks.JUNGLE_SAPLING);
      ACACIA_SAPLING = register(Blocks.ACACIA_SAPLING);
      CHERRY_SAPLING = register(Blocks.CHERRY_SAPLING);
      DARK_OAK_SAPLING = register(Blocks.DARK_OAK_SAPLING);
      MANGROVE_PROPAGULE = register(Blocks.MANGROVE_PROPAGULE);
      BEDROCK = register(Blocks.BEDROCK);
      SAND = register(Blocks.SAND);
      SUSPICIOUS_SAND = register(new BlockItem(Blocks.SUSPICIOUS_SAND, new Item.Settings()));
      SUSPICIOUS_GRAVEL = register(new BlockItem(Blocks.SUSPICIOUS_GRAVEL, new Item.Settings()));
      RED_SAND = register(Blocks.RED_SAND);
      GRAVEL = register(Blocks.GRAVEL);
      COAL_ORE = register(Blocks.COAL_ORE);
      DEEPSLATE_COAL_ORE = register(Blocks.DEEPSLATE_COAL_ORE);
      IRON_ORE = register(Blocks.IRON_ORE);
      DEEPSLATE_IRON_ORE = register(Blocks.DEEPSLATE_IRON_ORE);
      COPPER_ORE = register(Blocks.COPPER_ORE);
      DEEPSLATE_COPPER_ORE = register(Blocks.DEEPSLATE_COPPER_ORE);
      GOLD_ORE = register(Blocks.GOLD_ORE);
      DEEPSLATE_GOLD_ORE = register(Blocks.DEEPSLATE_GOLD_ORE);
      REDSTONE_ORE = register(Blocks.REDSTONE_ORE);
      DEEPSLATE_REDSTONE_ORE = register(Blocks.DEEPSLATE_REDSTONE_ORE);
      EMERALD_ORE = register(Blocks.EMERALD_ORE);
      DEEPSLATE_EMERALD_ORE = register(Blocks.DEEPSLATE_EMERALD_ORE);
      LAPIS_ORE = register(Blocks.LAPIS_ORE);
      DEEPSLATE_LAPIS_ORE = register(Blocks.DEEPSLATE_LAPIS_ORE);
      DIAMOND_ORE = register(Blocks.DIAMOND_ORE);
      DEEPSLATE_DIAMOND_ORE = register(Blocks.DEEPSLATE_DIAMOND_ORE);
      NETHER_GOLD_ORE = register(Blocks.NETHER_GOLD_ORE);
      NETHER_QUARTZ_ORE = register(Blocks.NETHER_QUARTZ_ORE);
      ANCIENT_DEBRIS = register(new BlockItem(Blocks.ANCIENT_DEBRIS, (new Item.Settings()).fireproof()));
      COAL_BLOCK = register(Blocks.COAL_BLOCK);
      RAW_IRON_BLOCK = register(Blocks.RAW_IRON_BLOCK);
      RAW_COPPER_BLOCK = register(Blocks.RAW_COPPER_BLOCK);
      RAW_GOLD_BLOCK = register(Blocks.RAW_GOLD_BLOCK);
      AMETHYST_BLOCK = register(Blocks.AMETHYST_BLOCK);
      BUDDING_AMETHYST = register(Blocks.BUDDING_AMETHYST);
      IRON_BLOCK = register(Blocks.IRON_BLOCK);
      COPPER_BLOCK = register(Blocks.COPPER_BLOCK);
      GOLD_BLOCK = register(Blocks.GOLD_BLOCK);
      DIAMOND_BLOCK = register(Blocks.DIAMOND_BLOCK);
      NETHERITE_BLOCK = register(new BlockItem(Blocks.NETHERITE_BLOCK, (new Item.Settings()).fireproof()));
      EXPOSED_COPPER = register(Blocks.EXPOSED_COPPER);
      WEATHERED_COPPER = register(Blocks.WEATHERED_COPPER);
      OXIDIZED_COPPER = register(Blocks.OXIDIZED_COPPER);
      CUT_COPPER = register(Blocks.CUT_COPPER);
      EXPOSED_CUT_COPPER = register(Blocks.EXPOSED_CUT_COPPER);
      WEATHERED_CUT_COPPER = register(Blocks.WEATHERED_CUT_COPPER);
      OXIDIZED_CUT_COPPER = register(Blocks.OXIDIZED_CUT_COPPER);
      CUT_COPPER_STAIRS = register(Blocks.CUT_COPPER_STAIRS);
      EXPOSED_CUT_COPPER_STAIRS = register(Blocks.EXPOSED_CUT_COPPER_STAIRS);
      WEATHERED_CUT_COPPER_STAIRS = register(Blocks.WEATHERED_CUT_COPPER_STAIRS);
      OXIDIZED_CUT_COPPER_STAIRS = register(Blocks.OXIDIZED_CUT_COPPER_STAIRS);
      CUT_COPPER_SLAB = register(Blocks.CUT_COPPER_SLAB);
      EXPOSED_CUT_COPPER_SLAB = register(Blocks.EXPOSED_CUT_COPPER_SLAB);
      WEATHERED_CUT_COPPER_SLAB = register(Blocks.WEATHERED_CUT_COPPER_SLAB);
      OXIDIZED_CUT_COPPER_SLAB = register(Blocks.OXIDIZED_CUT_COPPER_SLAB);
      WAXED_COPPER_BLOCK = register(Blocks.WAXED_COPPER_BLOCK);
      WAXED_EXPOSED_COPPER = register(Blocks.WAXED_EXPOSED_COPPER);
      WAXED_WEATHERED_COPPER = register(Blocks.WAXED_WEATHERED_COPPER);
      WAXED_OXIDIZED_COPPER = register(Blocks.WAXED_OXIDIZED_COPPER);
      WAXED_CUT_COPPER = register(Blocks.WAXED_CUT_COPPER);
      WAXED_EXPOSED_CUT_COPPER = register(Blocks.WAXED_EXPOSED_CUT_COPPER);
      WAXED_WEATHERED_CUT_COPPER = register(Blocks.WAXED_WEATHERED_CUT_COPPER);
      WAXED_OXIDIZED_CUT_COPPER = register(Blocks.WAXED_OXIDIZED_CUT_COPPER);
      WAXED_CUT_COPPER_STAIRS = register(Blocks.WAXED_CUT_COPPER_STAIRS);
      WAXED_EXPOSED_CUT_COPPER_STAIRS = register(Blocks.WAXED_EXPOSED_CUT_COPPER_STAIRS);
      WAXED_WEATHERED_CUT_COPPER_STAIRS = register(Blocks.WAXED_WEATHERED_CUT_COPPER_STAIRS);
      WAXED_OXIDIZED_CUT_COPPER_STAIRS = register(Blocks.WAXED_OXIDIZED_CUT_COPPER_STAIRS);
      WAXED_CUT_COPPER_SLAB = register(Blocks.WAXED_CUT_COPPER_SLAB);
      WAXED_EXPOSED_CUT_COPPER_SLAB = register(Blocks.WAXED_EXPOSED_CUT_COPPER_SLAB);
      WAXED_WEATHERED_CUT_COPPER_SLAB = register(Blocks.WAXED_WEATHERED_CUT_COPPER_SLAB);
      WAXED_OXIDIZED_CUT_COPPER_SLAB = register(Blocks.WAXED_OXIDIZED_CUT_COPPER_SLAB);
      OAK_LOG = register(Blocks.OAK_LOG);
      SPRUCE_LOG = register(Blocks.SPRUCE_LOG);
      BIRCH_LOG = register(Blocks.BIRCH_LOG);
      JUNGLE_LOG = register(Blocks.JUNGLE_LOG);
      ACACIA_LOG = register(Blocks.ACACIA_LOG);
      CHERRY_LOG = register(Blocks.CHERRY_LOG);
      DARK_OAK_LOG = register(Blocks.DARK_OAK_LOG);
      MANGROVE_LOG = register(Blocks.MANGROVE_LOG);
      MANGROVE_ROOTS = register(Blocks.MANGROVE_ROOTS);
      MUDDY_MANGROVE_ROOTS = register(Blocks.MUDDY_MANGROVE_ROOTS);
      CRIMSON_STEM = register(Blocks.CRIMSON_STEM);
      WARPED_STEM = register(Blocks.WARPED_STEM);
      BAMBOO_BLOCK = register(Blocks.BAMBOO_BLOCK);
      STRIPPED_OAK_LOG = register(Blocks.STRIPPED_OAK_LOG);
      STRIPPED_SPRUCE_LOG = register(Blocks.STRIPPED_SPRUCE_LOG);
      STRIPPED_BIRCH_LOG = register(Blocks.STRIPPED_BIRCH_LOG);
      STRIPPED_JUNGLE_LOG = register(Blocks.STRIPPED_JUNGLE_LOG);
      STRIPPED_ACACIA_LOG = register(Blocks.STRIPPED_ACACIA_LOG);
      STRIPPED_CHERRY_LOG = register(Blocks.STRIPPED_CHERRY_LOG);
      STRIPPED_DARK_OAK_LOG = register(Blocks.STRIPPED_DARK_OAK_LOG);
      STRIPPED_MANGROVE_LOG = register(Blocks.STRIPPED_MANGROVE_LOG);
      STRIPPED_CRIMSON_STEM = register(Blocks.STRIPPED_CRIMSON_STEM);
      STRIPPED_WARPED_STEM = register(Blocks.STRIPPED_WARPED_STEM);
      STRIPPED_OAK_WOOD = register(Blocks.STRIPPED_OAK_WOOD);
      STRIPPED_SPRUCE_WOOD = register(Blocks.STRIPPED_SPRUCE_WOOD);
      STRIPPED_BIRCH_WOOD = register(Blocks.STRIPPED_BIRCH_WOOD);
      STRIPPED_JUNGLE_WOOD = register(Blocks.STRIPPED_JUNGLE_WOOD);
      STRIPPED_ACACIA_WOOD = register(Blocks.STRIPPED_ACACIA_WOOD);
      STRIPPED_CHERRY_WOOD = register(Blocks.STRIPPED_CHERRY_WOOD);
      STRIPPED_DARK_OAK_WOOD = register(Blocks.STRIPPED_DARK_OAK_WOOD);
      STRIPPED_MANGROVE_WOOD = register(Blocks.STRIPPED_MANGROVE_WOOD);
      STRIPPED_CRIMSON_HYPHAE = register(Blocks.STRIPPED_CRIMSON_HYPHAE);
      STRIPPED_WARPED_HYPHAE = register(Blocks.STRIPPED_WARPED_HYPHAE);
      STRIPPED_BAMBOO_BLOCK = register(Blocks.STRIPPED_BAMBOO_BLOCK);
      OAK_WOOD = register(Blocks.OAK_WOOD);
      SPRUCE_WOOD = register(Blocks.SPRUCE_WOOD);
      BIRCH_WOOD = register(Blocks.BIRCH_WOOD);
      JUNGLE_WOOD = register(Blocks.JUNGLE_WOOD);
      ACACIA_WOOD = register(Blocks.ACACIA_WOOD);
      CHERRY_WOOD = register(Blocks.CHERRY_WOOD);
      DARK_OAK_WOOD = register(Blocks.DARK_OAK_WOOD);
      MANGROVE_WOOD = register(Blocks.MANGROVE_WOOD);
      CRIMSON_HYPHAE = register(Blocks.CRIMSON_HYPHAE);
      WARPED_HYPHAE = register(Blocks.WARPED_HYPHAE);
      OAK_LEAVES = register(Blocks.OAK_LEAVES);
      SPRUCE_LEAVES = register(Blocks.SPRUCE_LEAVES);
      BIRCH_LEAVES = register(Blocks.BIRCH_LEAVES);
      JUNGLE_LEAVES = register(Blocks.JUNGLE_LEAVES);
      ACACIA_LEAVES = register(Blocks.ACACIA_LEAVES);
      CHERRY_LEAVES = register(Blocks.CHERRY_LEAVES);
      DARK_OAK_LEAVES = register(Blocks.DARK_OAK_LEAVES);
      MANGROVE_LEAVES = register(Blocks.MANGROVE_LEAVES);
      AZALEA_LEAVES = register(Blocks.AZALEA_LEAVES);
      FLOWERING_AZALEA_LEAVES = register(Blocks.FLOWERING_AZALEA_LEAVES);
      SPONGE = register(Blocks.SPONGE);
      WET_SPONGE = register(Blocks.WET_SPONGE);
      GLASS = register(Blocks.GLASS);
      TINTED_GLASS = register(Blocks.TINTED_GLASS);
      LAPIS_BLOCK = register(Blocks.LAPIS_BLOCK);
      SANDSTONE = register(Blocks.SANDSTONE);
      CHISELED_SANDSTONE = register(Blocks.CHISELED_SANDSTONE);
      CUT_SANDSTONE = register(Blocks.CUT_SANDSTONE);
      COBWEB = register(Blocks.COBWEB);
      GRASS = register(Blocks.GRASS);
      FERN = register(Blocks.FERN);
      AZALEA = register(Blocks.AZALEA);
      FLOWERING_AZALEA = register(Blocks.FLOWERING_AZALEA);
      DEAD_BUSH = register(Blocks.DEAD_BUSH);
      SEAGRASS = register(Blocks.SEAGRASS);
      SEA_PICKLE = register(Blocks.SEA_PICKLE);
      WHITE_WOOL = register(Blocks.WHITE_WOOL);
      ORANGE_WOOL = register(Blocks.ORANGE_WOOL);
      MAGENTA_WOOL = register(Blocks.MAGENTA_WOOL);
      LIGHT_BLUE_WOOL = register(Blocks.LIGHT_BLUE_WOOL);
      YELLOW_WOOL = register(Blocks.YELLOW_WOOL);
      LIME_WOOL = register(Blocks.LIME_WOOL);
      PINK_WOOL = register(Blocks.PINK_WOOL);
      GRAY_WOOL = register(Blocks.GRAY_WOOL);
      LIGHT_GRAY_WOOL = register(Blocks.LIGHT_GRAY_WOOL);
      CYAN_WOOL = register(Blocks.CYAN_WOOL);
      PURPLE_WOOL = register(Blocks.PURPLE_WOOL);
      BLUE_WOOL = register(Blocks.BLUE_WOOL);
      BROWN_WOOL = register(Blocks.BROWN_WOOL);
      GREEN_WOOL = register(Blocks.GREEN_WOOL);
      RED_WOOL = register(Blocks.RED_WOOL);
      BLACK_WOOL = register(Blocks.BLACK_WOOL);
      DANDELION = register(Blocks.DANDELION);
      POPPY = register(Blocks.POPPY);
      BLUE_ORCHID = register(Blocks.BLUE_ORCHID);
      ALLIUM = register(Blocks.ALLIUM);
      AZURE_BLUET = register(Blocks.AZURE_BLUET);
      RED_TULIP = register(Blocks.RED_TULIP);
      ORANGE_TULIP = register(Blocks.ORANGE_TULIP);
      WHITE_TULIP = register(Blocks.WHITE_TULIP);
      PINK_TULIP = register(Blocks.PINK_TULIP);
      OXEYE_DAISY = register(Blocks.OXEYE_DAISY);
      CORNFLOWER = register(Blocks.CORNFLOWER);
      LILY_OF_THE_VALLEY = register(Blocks.LILY_OF_THE_VALLEY);
      WITHER_ROSE = register(Blocks.WITHER_ROSE);
      TORCHFLOWER = register(Blocks.TORCHFLOWER);
      PITCHER_PLANT = register(Blocks.PITCHER_PLANT);
      SPORE_BLOSSOM = register(Blocks.SPORE_BLOSSOM);
      BROWN_MUSHROOM = register(Blocks.BROWN_MUSHROOM);
      RED_MUSHROOM = register(Blocks.RED_MUSHROOM);
      CRIMSON_FUNGUS = register(Blocks.CRIMSON_FUNGUS);
      WARPED_FUNGUS = register(Blocks.WARPED_FUNGUS);
      CRIMSON_ROOTS = register(Blocks.CRIMSON_ROOTS);
      WARPED_ROOTS = register(Blocks.WARPED_ROOTS);
      NETHER_SPROUTS = register(Blocks.NETHER_SPROUTS);
      WEEPING_VINES = register(Blocks.WEEPING_VINES);
      TWISTING_VINES = register(Blocks.TWISTING_VINES);
      SUGAR_CANE = register(Blocks.SUGAR_CANE);
      KELP = register(Blocks.KELP);
      MOSS_CARPET = register(Blocks.MOSS_CARPET);
      PINK_PETALS = register(Blocks.PINK_PETALS);
      MOSS_BLOCK = register(Blocks.MOSS_BLOCK);
      HANGING_ROOTS = register(Blocks.HANGING_ROOTS);
      BIG_DRIPLEAF = register(Blocks.BIG_DRIPLEAF, Blocks.BIG_DRIPLEAF_STEM);
      SMALL_DRIPLEAF = register((BlockItem)(new TallBlockItem(Blocks.SMALL_DRIPLEAF, new Item.Settings())));
      BAMBOO = register(Blocks.BAMBOO);
      OAK_SLAB = register(Blocks.OAK_SLAB);
      SPRUCE_SLAB = register(Blocks.SPRUCE_SLAB);
      BIRCH_SLAB = register(Blocks.BIRCH_SLAB);
      JUNGLE_SLAB = register(Blocks.JUNGLE_SLAB);
      ACACIA_SLAB = register(Blocks.ACACIA_SLAB);
      CHERRY_SLAB = register(Blocks.CHERRY_SLAB);
      DARK_OAK_SLAB = register(Blocks.DARK_OAK_SLAB);
      MANGROVE_SLAB = register(Blocks.MANGROVE_SLAB);
      BAMBOO_SLAB = register(Blocks.BAMBOO_SLAB);
      BAMBOO_MOSAIC_SLAB = register(Blocks.BAMBOO_MOSAIC_SLAB);
      CRIMSON_SLAB = register(Blocks.CRIMSON_SLAB);
      WARPED_SLAB = register(Blocks.WARPED_SLAB);
      STONE_SLAB = register(Blocks.STONE_SLAB);
      SMOOTH_STONE_SLAB = register(Blocks.SMOOTH_STONE_SLAB);
      SANDSTONE_SLAB = register(Blocks.SANDSTONE_SLAB);
      CUT_SANDSTONE_SLAB = register(Blocks.CUT_SANDSTONE_SLAB);
      PETRIFIED_OAK_SLAB = register(Blocks.PETRIFIED_OAK_SLAB);
      COBBLESTONE_SLAB = register(Blocks.COBBLESTONE_SLAB);
      BRICK_SLAB = register(Blocks.BRICK_SLAB);
      STONE_BRICK_SLAB = register(Blocks.STONE_BRICK_SLAB);
      MUD_BRICK_SLAB = register(Blocks.MUD_BRICK_SLAB);
      NETHER_BRICK_SLAB = register(Blocks.NETHER_BRICK_SLAB);
      QUARTZ_SLAB = register(Blocks.QUARTZ_SLAB);
      RED_SANDSTONE_SLAB = register(Blocks.RED_SANDSTONE_SLAB);
      CUT_RED_SANDSTONE_SLAB = register(Blocks.CUT_RED_SANDSTONE_SLAB);
      PURPUR_SLAB = register(Blocks.PURPUR_SLAB);
      PRISMARINE_SLAB = register(Blocks.PRISMARINE_SLAB);
      PRISMARINE_BRICK_SLAB = register(Blocks.PRISMARINE_BRICK_SLAB);
      DARK_PRISMARINE_SLAB = register(Blocks.DARK_PRISMARINE_SLAB);
      SMOOTH_QUARTZ = register(Blocks.SMOOTH_QUARTZ);
      SMOOTH_RED_SANDSTONE = register(Blocks.SMOOTH_RED_SANDSTONE);
      SMOOTH_SANDSTONE = register(Blocks.SMOOTH_SANDSTONE);
      SMOOTH_STONE = register(Blocks.SMOOTH_STONE);
      BRICKS = register(Blocks.BRICKS);
      BOOKSHELF = register(Blocks.BOOKSHELF);
      CHISELED_BOOKSHELF = register(Blocks.CHISELED_BOOKSHELF);
      DECORATED_POT = register(new BlockItem(Blocks.DECORATED_POT, (new Item.Settings()).maxCount(1)));
      MOSSY_COBBLESTONE = register(Blocks.MOSSY_COBBLESTONE);
      OBSIDIAN = register(Blocks.OBSIDIAN);
      TORCH = register((BlockItem)(new VerticallyAttachableBlockItem(Blocks.TORCH, Blocks.WALL_TORCH, new Item.Settings(), Direction.DOWN)));
      END_ROD = register(Blocks.END_ROD);
      CHORUS_PLANT = register(Blocks.CHORUS_PLANT);
      CHORUS_FLOWER = register(Blocks.CHORUS_FLOWER);
      PURPUR_BLOCK = register(Blocks.PURPUR_BLOCK);
      PURPUR_PILLAR = register(Blocks.PURPUR_PILLAR);
      PURPUR_STAIRS = register(Blocks.PURPUR_STAIRS);
      SPAWNER = register(Blocks.SPAWNER);
      CHEST = register(Blocks.CHEST);
      CRAFTING_TABLE = register(Blocks.CRAFTING_TABLE);
      FARMLAND = register(Blocks.FARMLAND);
      FURNACE = register(Blocks.FURNACE);
      LADDER = register(Blocks.LADDER);
      COBBLESTONE_STAIRS = register(Blocks.COBBLESTONE_STAIRS);
      SNOW = register(Blocks.SNOW);
      ICE = register(Blocks.ICE);
      SNOW_BLOCK = register(Blocks.SNOW_BLOCK);
      CACTUS = register(Blocks.CACTUS);
      CLAY = register(Blocks.CLAY);
      JUKEBOX = register(Blocks.JUKEBOX);
      OAK_FENCE = register(Blocks.OAK_FENCE);
      SPRUCE_FENCE = register(Blocks.SPRUCE_FENCE);
      BIRCH_FENCE = register(Blocks.BIRCH_FENCE);
      JUNGLE_FENCE = register(Blocks.JUNGLE_FENCE);
      ACACIA_FENCE = register(Blocks.ACACIA_FENCE);
      CHERRY_FENCE = register(Blocks.CHERRY_FENCE);
      DARK_OAK_FENCE = register(Blocks.DARK_OAK_FENCE);
      MANGROVE_FENCE = register(Blocks.MANGROVE_FENCE);
      BAMBOO_FENCE = register(Blocks.BAMBOO_FENCE);
      CRIMSON_FENCE = register(Blocks.CRIMSON_FENCE);
      WARPED_FENCE = register(Blocks.WARPED_FENCE);
      PUMPKIN = register(Blocks.PUMPKIN);
      CARVED_PUMPKIN = register(Blocks.CARVED_PUMPKIN);
      JACK_O_LANTERN = register(Blocks.JACK_O_LANTERN);
      NETHERRACK = register(Blocks.NETHERRACK);
      SOUL_SAND = register(Blocks.SOUL_SAND);
      SOUL_SOIL = register(Blocks.SOUL_SOIL);
      BASALT = register(Blocks.BASALT);
      POLISHED_BASALT = register(Blocks.POLISHED_BASALT);
      SMOOTH_BASALT = register(Blocks.SMOOTH_BASALT);
      SOUL_TORCH = register((BlockItem)(new VerticallyAttachableBlockItem(Blocks.SOUL_TORCH, Blocks.SOUL_WALL_TORCH, new Item.Settings(), Direction.DOWN)));
      GLOWSTONE = register(Blocks.GLOWSTONE);
      INFESTED_STONE = register(Blocks.INFESTED_STONE);
      INFESTED_COBBLESTONE = register(Blocks.INFESTED_COBBLESTONE);
      INFESTED_STONE_BRICKS = register(Blocks.INFESTED_STONE_BRICKS);
      INFESTED_MOSSY_STONE_BRICKS = register(Blocks.INFESTED_MOSSY_STONE_BRICKS);
      INFESTED_CRACKED_STONE_BRICKS = register(Blocks.INFESTED_CRACKED_STONE_BRICKS);
      INFESTED_CHISELED_STONE_BRICKS = register(Blocks.INFESTED_CHISELED_STONE_BRICKS);
      INFESTED_DEEPSLATE = register(Blocks.INFESTED_DEEPSLATE);
      STONE_BRICKS = register(Blocks.STONE_BRICKS);
      MOSSY_STONE_BRICKS = register(Blocks.MOSSY_STONE_BRICKS);
      CRACKED_STONE_BRICKS = register(Blocks.CRACKED_STONE_BRICKS);
      CHISELED_STONE_BRICKS = register(Blocks.CHISELED_STONE_BRICKS);
      PACKED_MUD = register(Blocks.PACKED_MUD);
      MUD_BRICKS = register(Blocks.MUD_BRICKS);
      DEEPSLATE_BRICKS = register(Blocks.DEEPSLATE_BRICKS);
      CRACKED_DEEPSLATE_BRICKS = register(Blocks.CRACKED_DEEPSLATE_BRICKS);
      DEEPSLATE_TILES = register(Blocks.DEEPSLATE_TILES);
      CRACKED_DEEPSLATE_TILES = register(Blocks.CRACKED_DEEPSLATE_TILES);
      CHISELED_DEEPSLATE = register(Blocks.CHISELED_DEEPSLATE);
      REINFORCED_DEEPSLATE = register(Blocks.REINFORCED_DEEPSLATE);
      BROWN_MUSHROOM_BLOCK = register(Blocks.BROWN_MUSHROOM_BLOCK);
      RED_MUSHROOM_BLOCK = register(Blocks.RED_MUSHROOM_BLOCK);
      MUSHROOM_STEM = register(Blocks.MUSHROOM_STEM);
      IRON_BARS = register(Blocks.IRON_BARS);
      CHAIN = register(Blocks.CHAIN);
      GLASS_PANE = register(Blocks.GLASS_PANE);
      MELON = register(Blocks.MELON);
      VINE = register(Blocks.VINE);
      GLOW_LICHEN = register(Blocks.GLOW_LICHEN);
      BRICK_STAIRS = register(Blocks.BRICK_STAIRS);
      STONE_BRICK_STAIRS = register(Blocks.STONE_BRICK_STAIRS);
      MUD_BRICK_STAIRS = register(Blocks.MUD_BRICK_STAIRS);
      MYCELIUM = register(Blocks.MYCELIUM);
      LILY_PAD = register((BlockItem)(new PlaceableOnWaterItem(Blocks.LILY_PAD, new Item.Settings())));
      NETHER_BRICKS = register(Blocks.NETHER_BRICKS);
      CRACKED_NETHER_BRICKS = register(Blocks.CRACKED_NETHER_BRICKS);
      CHISELED_NETHER_BRICKS = register(Blocks.CHISELED_NETHER_BRICKS);
      NETHER_BRICK_FENCE = register(Blocks.NETHER_BRICK_FENCE);
      NETHER_BRICK_STAIRS = register(Blocks.NETHER_BRICK_STAIRS);
      SCULK = register(Blocks.SCULK);
      SCULK_VEIN = register(Blocks.SCULK_VEIN);
      SCULK_CATALYST = register(Blocks.SCULK_CATALYST);
      SCULK_SHRIEKER = register(Blocks.SCULK_SHRIEKER);
      ENCHANTING_TABLE = register(Blocks.ENCHANTING_TABLE);
      END_PORTAL_FRAME = register(Blocks.END_PORTAL_FRAME);
      END_STONE = register(Blocks.END_STONE);
      END_STONE_BRICKS = register(Blocks.END_STONE_BRICKS);
      DRAGON_EGG = register(new BlockItem(Blocks.DRAGON_EGG, (new Item.Settings()).rarity(Rarity.EPIC)));
      SANDSTONE_STAIRS = register(Blocks.SANDSTONE_STAIRS);
      ENDER_CHEST = register(Blocks.ENDER_CHEST);
      EMERALD_BLOCK = register(Blocks.EMERALD_BLOCK);
      OAK_STAIRS = register(Blocks.OAK_STAIRS);
      SPRUCE_STAIRS = register(Blocks.SPRUCE_STAIRS);
      BIRCH_STAIRS = register(Blocks.BIRCH_STAIRS);
      JUNGLE_STAIRS = register(Blocks.JUNGLE_STAIRS);
      ACACIA_STAIRS = register(Blocks.ACACIA_STAIRS);
      CHERRY_STAIRS = register(Blocks.CHERRY_STAIRS);
      DARK_OAK_STAIRS = register(Blocks.DARK_OAK_STAIRS);
      MANGROVE_STAIRS = register(Blocks.MANGROVE_STAIRS);
      BAMBOO_STAIRS = register(Blocks.BAMBOO_STAIRS);
      BAMBOO_MOSAIC_STAIRS = register(Blocks.BAMBOO_MOSAIC_STAIRS);
      CRIMSON_STAIRS = register(Blocks.CRIMSON_STAIRS);
      WARPED_STAIRS = register(Blocks.WARPED_STAIRS);
      COMMAND_BLOCK = register((BlockItem)(new OperatorOnlyBlockItem(Blocks.COMMAND_BLOCK, (new Item.Settings()).rarity(Rarity.EPIC))));
      BEACON = register(new BlockItem(Blocks.BEACON, (new Item.Settings()).rarity(Rarity.RARE)));
      COBBLESTONE_WALL = register(Blocks.COBBLESTONE_WALL);
      MOSSY_COBBLESTONE_WALL = register(Blocks.MOSSY_COBBLESTONE_WALL);
      BRICK_WALL = register(Blocks.BRICK_WALL);
      PRISMARINE_WALL = register(Blocks.PRISMARINE_WALL);
      RED_SANDSTONE_WALL = register(Blocks.RED_SANDSTONE_WALL);
      MOSSY_STONE_BRICK_WALL = register(Blocks.MOSSY_STONE_BRICK_WALL);
      GRANITE_WALL = register(Blocks.GRANITE_WALL);
      STONE_BRICK_WALL = register(Blocks.STONE_BRICK_WALL);
      MUD_BRICK_WALL = register(Blocks.MUD_BRICK_WALL);
      NETHER_BRICK_WALL = register(Blocks.NETHER_BRICK_WALL);
      ANDESITE_WALL = register(Blocks.ANDESITE_WALL);
      RED_NETHER_BRICK_WALL = register(Blocks.RED_NETHER_BRICK_WALL);
      SANDSTONE_WALL = register(Blocks.SANDSTONE_WALL);
      END_STONE_BRICK_WALL = register(Blocks.END_STONE_BRICK_WALL);
      DIORITE_WALL = register(Blocks.DIORITE_WALL);
      BLACKSTONE_WALL = register(Blocks.BLACKSTONE_WALL);
      POLISHED_BLACKSTONE_WALL = register(Blocks.POLISHED_BLACKSTONE_WALL);
      POLISHED_BLACKSTONE_BRICK_WALL = register(Blocks.POLISHED_BLACKSTONE_BRICK_WALL);
      COBBLED_DEEPSLATE_WALL = register(Blocks.COBBLED_DEEPSLATE_WALL);
      POLISHED_DEEPSLATE_WALL = register(Blocks.POLISHED_DEEPSLATE_WALL);
      DEEPSLATE_BRICK_WALL = register(Blocks.DEEPSLATE_BRICK_WALL);
      DEEPSLATE_TILE_WALL = register(Blocks.DEEPSLATE_TILE_WALL);
      ANVIL = register(Blocks.ANVIL);
      CHIPPED_ANVIL = register(Blocks.CHIPPED_ANVIL);
      DAMAGED_ANVIL = register(Blocks.DAMAGED_ANVIL);
      CHISELED_QUARTZ_BLOCK = register(Blocks.CHISELED_QUARTZ_BLOCK);
      QUARTZ_BLOCK = register(Blocks.QUARTZ_BLOCK);
      QUARTZ_BRICKS = register(Blocks.QUARTZ_BRICKS);
      QUARTZ_PILLAR = register(Blocks.QUARTZ_PILLAR);
      QUARTZ_STAIRS = register(Blocks.QUARTZ_STAIRS);
      WHITE_TERRACOTTA = register(Blocks.WHITE_TERRACOTTA);
      ORANGE_TERRACOTTA = register(Blocks.ORANGE_TERRACOTTA);
      MAGENTA_TERRACOTTA = register(Blocks.MAGENTA_TERRACOTTA);
      LIGHT_BLUE_TERRACOTTA = register(Blocks.LIGHT_BLUE_TERRACOTTA);
      YELLOW_TERRACOTTA = register(Blocks.YELLOW_TERRACOTTA);
      LIME_TERRACOTTA = register(Blocks.LIME_TERRACOTTA);
      PINK_TERRACOTTA = register(Blocks.PINK_TERRACOTTA);
      GRAY_TERRACOTTA = register(Blocks.GRAY_TERRACOTTA);
      LIGHT_GRAY_TERRACOTTA = register(Blocks.LIGHT_GRAY_TERRACOTTA);
      CYAN_TERRACOTTA = register(Blocks.CYAN_TERRACOTTA);
      PURPLE_TERRACOTTA = register(Blocks.PURPLE_TERRACOTTA);
      BLUE_TERRACOTTA = register(Blocks.BLUE_TERRACOTTA);
      BROWN_TERRACOTTA = register(Blocks.BROWN_TERRACOTTA);
      GREEN_TERRACOTTA = register(Blocks.GREEN_TERRACOTTA);
      RED_TERRACOTTA = register(Blocks.RED_TERRACOTTA);
      BLACK_TERRACOTTA = register(Blocks.BLACK_TERRACOTTA);
      BARRIER = register(new BlockItem(Blocks.BARRIER, (new Item.Settings()).rarity(Rarity.EPIC)));
      LIGHT = register(new BlockItem(Blocks.LIGHT, (new Item.Settings()).rarity(Rarity.EPIC)));
      HAY_BLOCK = register(Blocks.HAY_BLOCK);
      WHITE_CARPET = register(Blocks.WHITE_CARPET);
      ORANGE_CARPET = register(Blocks.ORANGE_CARPET);
      MAGENTA_CARPET = register(Blocks.MAGENTA_CARPET);
      LIGHT_BLUE_CARPET = register(Blocks.LIGHT_BLUE_CARPET);
      YELLOW_CARPET = register(Blocks.YELLOW_CARPET);
      LIME_CARPET = register(Blocks.LIME_CARPET);
      PINK_CARPET = register(Blocks.PINK_CARPET);
      GRAY_CARPET = register(Blocks.GRAY_CARPET);
      LIGHT_GRAY_CARPET = register(Blocks.LIGHT_GRAY_CARPET);
      CYAN_CARPET = register(Blocks.CYAN_CARPET);
      PURPLE_CARPET = register(Blocks.PURPLE_CARPET);
      BLUE_CARPET = register(Blocks.BLUE_CARPET);
      BROWN_CARPET = register(Blocks.BROWN_CARPET);
      GREEN_CARPET = register(Blocks.GREEN_CARPET);
      RED_CARPET = register(Blocks.RED_CARPET);
      BLACK_CARPET = register(Blocks.BLACK_CARPET);
      TERRACOTTA = register(Blocks.TERRACOTTA);
      PACKED_ICE = register(Blocks.PACKED_ICE);
      DIRT_PATH = register(Blocks.DIRT_PATH);
      SUNFLOWER = register((BlockItem)(new TallBlockItem(Blocks.SUNFLOWER, new Item.Settings())));
      LILAC = register((BlockItem)(new TallBlockItem(Blocks.LILAC, new Item.Settings())));
      ROSE_BUSH = register((BlockItem)(new TallBlockItem(Blocks.ROSE_BUSH, new Item.Settings())));
      PEONY = register((BlockItem)(new TallBlockItem(Blocks.PEONY, new Item.Settings())));
      TALL_GRASS = register((BlockItem)(new TallBlockItem(Blocks.TALL_GRASS, new Item.Settings())));
      LARGE_FERN = register((BlockItem)(new TallBlockItem(Blocks.LARGE_FERN, new Item.Settings())));
      WHITE_STAINED_GLASS = register(Blocks.WHITE_STAINED_GLASS);
      ORANGE_STAINED_GLASS = register(Blocks.ORANGE_STAINED_GLASS);
      MAGENTA_STAINED_GLASS = register(Blocks.MAGENTA_STAINED_GLASS);
      LIGHT_BLUE_STAINED_GLASS = register(Blocks.LIGHT_BLUE_STAINED_GLASS);
      YELLOW_STAINED_GLASS = register(Blocks.YELLOW_STAINED_GLASS);
      LIME_STAINED_GLASS = register(Blocks.LIME_STAINED_GLASS);
      PINK_STAINED_GLASS = register(Blocks.PINK_STAINED_GLASS);
      GRAY_STAINED_GLASS = register(Blocks.GRAY_STAINED_GLASS);
      LIGHT_GRAY_STAINED_GLASS = register(Blocks.LIGHT_GRAY_STAINED_GLASS);
      CYAN_STAINED_GLASS = register(Blocks.CYAN_STAINED_GLASS);
      PURPLE_STAINED_GLASS = register(Blocks.PURPLE_STAINED_GLASS);
      BLUE_STAINED_GLASS = register(Blocks.BLUE_STAINED_GLASS);
      BROWN_STAINED_GLASS = register(Blocks.BROWN_STAINED_GLASS);
      GREEN_STAINED_GLASS = register(Blocks.GREEN_STAINED_GLASS);
      RED_STAINED_GLASS = register(Blocks.RED_STAINED_GLASS);
      BLACK_STAINED_GLASS = register(Blocks.BLACK_STAINED_GLASS);
      WHITE_STAINED_GLASS_PANE = register(Blocks.WHITE_STAINED_GLASS_PANE);
      ORANGE_STAINED_GLASS_PANE = register(Blocks.ORANGE_STAINED_GLASS_PANE);
      MAGENTA_STAINED_GLASS_PANE = register(Blocks.MAGENTA_STAINED_GLASS_PANE);
      LIGHT_BLUE_STAINED_GLASS_PANE = register(Blocks.LIGHT_BLUE_STAINED_GLASS_PANE);
      YELLOW_STAINED_GLASS_PANE = register(Blocks.YELLOW_STAINED_GLASS_PANE);
      LIME_STAINED_GLASS_PANE = register(Blocks.LIME_STAINED_GLASS_PANE);
      PINK_STAINED_GLASS_PANE = register(Blocks.PINK_STAINED_GLASS_PANE);
      GRAY_STAINED_GLASS_PANE = register(Blocks.GRAY_STAINED_GLASS_PANE);
      LIGHT_GRAY_STAINED_GLASS_PANE = register(Blocks.LIGHT_GRAY_STAINED_GLASS_PANE);
      CYAN_STAINED_GLASS_PANE = register(Blocks.CYAN_STAINED_GLASS_PANE);
      PURPLE_STAINED_GLASS_PANE = register(Blocks.PURPLE_STAINED_GLASS_PANE);
      BLUE_STAINED_GLASS_PANE = register(Blocks.BLUE_STAINED_GLASS_PANE);
      BROWN_STAINED_GLASS_PANE = register(Blocks.BROWN_STAINED_GLASS_PANE);
      GREEN_STAINED_GLASS_PANE = register(Blocks.GREEN_STAINED_GLASS_PANE);
      RED_STAINED_GLASS_PANE = register(Blocks.RED_STAINED_GLASS_PANE);
      BLACK_STAINED_GLASS_PANE = register(Blocks.BLACK_STAINED_GLASS_PANE);
      PRISMARINE = register(Blocks.PRISMARINE);
      PRISMARINE_BRICKS = register(Blocks.PRISMARINE_BRICKS);
      DARK_PRISMARINE = register(Blocks.DARK_PRISMARINE);
      PRISMARINE_STAIRS = register(Blocks.PRISMARINE_STAIRS);
      PRISMARINE_BRICK_STAIRS = register(Blocks.PRISMARINE_BRICK_STAIRS);
      DARK_PRISMARINE_STAIRS = register(Blocks.DARK_PRISMARINE_STAIRS);
      SEA_LANTERN = register(Blocks.SEA_LANTERN);
      RED_SANDSTONE = register(Blocks.RED_SANDSTONE);
      CHISELED_RED_SANDSTONE = register(Blocks.CHISELED_RED_SANDSTONE);
      CUT_RED_SANDSTONE = register(Blocks.CUT_RED_SANDSTONE);
      RED_SANDSTONE_STAIRS = register(Blocks.RED_SANDSTONE_STAIRS);
      REPEATING_COMMAND_BLOCK = register((BlockItem)(new OperatorOnlyBlockItem(Blocks.REPEATING_COMMAND_BLOCK, (new Item.Settings()).rarity(Rarity.EPIC))));
      CHAIN_COMMAND_BLOCK = register((BlockItem)(new OperatorOnlyBlockItem(Blocks.CHAIN_COMMAND_BLOCK, (new Item.Settings()).rarity(Rarity.EPIC))));
      MAGMA_BLOCK = register(Blocks.MAGMA_BLOCK);
      NETHER_WART_BLOCK = register(Blocks.NETHER_WART_BLOCK);
      WARPED_WART_BLOCK = register(Blocks.WARPED_WART_BLOCK);
      RED_NETHER_BRICKS = register(Blocks.RED_NETHER_BRICKS);
      BONE_BLOCK = register(Blocks.BONE_BLOCK);
      STRUCTURE_VOID = register(new BlockItem(Blocks.STRUCTURE_VOID, (new Item.Settings()).rarity(Rarity.EPIC)));
      SHULKER_BOX = register(new BlockItem(Blocks.SHULKER_BOX, (new Item.Settings()).maxCount(1)));
      WHITE_SHULKER_BOX = register(new BlockItem(Blocks.WHITE_SHULKER_BOX, (new Item.Settings()).maxCount(1)));
      ORANGE_SHULKER_BOX = register(new BlockItem(Blocks.ORANGE_SHULKER_BOX, (new Item.Settings()).maxCount(1)));
      MAGENTA_SHULKER_BOX = register(new BlockItem(Blocks.MAGENTA_SHULKER_BOX, (new Item.Settings()).maxCount(1)));
      LIGHT_BLUE_SHULKER_BOX = register(new BlockItem(Blocks.LIGHT_BLUE_SHULKER_BOX, (new Item.Settings()).maxCount(1)));
      YELLOW_SHULKER_BOX = register(new BlockItem(Blocks.YELLOW_SHULKER_BOX, (new Item.Settings()).maxCount(1)));
      LIME_SHULKER_BOX = register(new BlockItem(Blocks.LIME_SHULKER_BOX, (new Item.Settings()).maxCount(1)));
      PINK_SHULKER_BOX = register(new BlockItem(Blocks.PINK_SHULKER_BOX, (new Item.Settings()).maxCount(1)));
      GRAY_SHULKER_BOX = register(new BlockItem(Blocks.GRAY_SHULKER_BOX, (new Item.Settings()).maxCount(1)));
      LIGHT_GRAY_SHULKER_BOX = register(new BlockItem(Blocks.LIGHT_GRAY_SHULKER_BOX, (new Item.Settings()).maxCount(1)));
      CYAN_SHULKER_BOX = register(new BlockItem(Blocks.CYAN_SHULKER_BOX, (new Item.Settings()).maxCount(1)));
      PURPLE_SHULKER_BOX = register(new BlockItem(Blocks.PURPLE_SHULKER_BOX, (new Item.Settings()).maxCount(1)));
      BLUE_SHULKER_BOX = register(new BlockItem(Blocks.BLUE_SHULKER_BOX, (new Item.Settings()).maxCount(1)));
      BROWN_SHULKER_BOX = register(new BlockItem(Blocks.BROWN_SHULKER_BOX, (new Item.Settings()).maxCount(1)));
      GREEN_SHULKER_BOX = register(new BlockItem(Blocks.GREEN_SHULKER_BOX, (new Item.Settings()).maxCount(1)));
      RED_SHULKER_BOX = register(new BlockItem(Blocks.RED_SHULKER_BOX, (new Item.Settings()).maxCount(1)));
      BLACK_SHULKER_BOX = register(new BlockItem(Blocks.BLACK_SHULKER_BOX, (new Item.Settings()).maxCount(1)));
      WHITE_GLAZED_TERRACOTTA = register(Blocks.WHITE_GLAZED_TERRACOTTA);
      ORANGE_GLAZED_TERRACOTTA = register(Blocks.ORANGE_GLAZED_TERRACOTTA);
      MAGENTA_GLAZED_TERRACOTTA = register(Blocks.MAGENTA_GLAZED_TERRACOTTA);
      LIGHT_BLUE_GLAZED_TERRACOTTA = register(Blocks.LIGHT_BLUE_GLAZED_TERRACOTTA);
      YELLOW_GLAZED_TERRACOTTA = register(Blocks.YELLOW_GLAZED_TERRACOTTA);
      LIME_GLAZED_TERRACOTTA = register(Blocks.LIME_GLAZED_TERRACOTTA);
      PINK_GLAZED_TERRACOTTA = register(Blocks.PINK_GLAZED_TERRACOTTA);
      GRAY_GLAZED_TERRACOTTA = register(Blocks.GRAY_GLAZED_TERRACOTTA);
      LIGHT_GRAY_GLAZED_TERRACOTTA = register(Blocks.LIGHT_GRAY_GLAZED_TERRACOTTA);
      CYAN_GLAZED_TERRACOTTA = register(Blocks.CYAN_GLAZED_TERRACOTTA);
      PURPLE_GLAZED_TERRACOTTA = register(Blocks.PURPLE_GLAZED_TERRACOTTA);
      BLUE_GLAZED_TERRACOTTA = register(Blocks.BLUE_GLAZED_TERRACOTTA);
      BROWN_GLAZED_TERRACOTTA = register(Blocks.BROWN_GLAZED_TERRACOTTA);
      GREEN_GLAZED_TERRACOTTA = register(Blocks.GREEN_GLAZED_TERRACOTTA);
      RED_GLAZED_TERRACOTTA = register(Blocks.RED_GLAZED_TERRACOTTA);
      BLACK_GLAZED_TERRACOTTA = register(Blocks.BLACK_GLAZED_TERRACOTTA);
      WHITE_CONCRETE = register(Blocks.WHITE_CONCRETE);
      ORANGE_CONCRETE = register(Blocks.ORANGE_CONCRETE);
      MAGENTA_CONCRETE = register(Blocks.MAGENTA_CONCRETE);
      LIGHT_BLUE_CONCRETE = register(Blocks.LIGHT_BLUE_CONCRETE);
      YELLOW_CONCRETE = register(Blocks.YELLOW_CONCRETE);
      LIME_CONCRETE = register(Blocks.LIME_CONCRETE);
      PINK_CONCRETE = register(Blocks.PINK_CONCRETE);
      GRAY_CONCRETE = register(Blocks.GRAY_CONCRETE);
      LIGHT_GRAY_CONCRETE = register(Blocks.LIGHT_GRAY_CONCRETE);
      CYAN_CONCRETE = register(Blocks.CYAN_CONCRETE);
      PURPLE_CONCRETE = register(Blocks.PURPLE_CONCRETE);
      BLUE_CONCRETE = register(Blocks.BLUE_CONCRETE);
      BROWN_CONCRETE = register(Blocks.BROWN_CONCRETE);
      GREEN_CONCRETE = register(Blocks.GREEN_CONCRETE);
      RED_CONCRETE = register(Blocks.RED_CONCRETE);
      BLACK_CONCRETE = register(Blocks.BLACK_CONCRETE);
      WHITE_CONCRETE_POWDER = register(Blocks.WHITE_CONCRETE_POWDER);
      ORANGE_CONCRETE_POWDER = register(Blocks.ORANGE_CONCRETE_POWDER);
      MAGENTA_CONCRETE_POWDER = register(Blocks.MAGENTA_CONCRETE_POWDER);
      LIGHT_BLUE_CONCRETE_POWDER = register(Blocks.LIGHT_BLUE_CONCRETE_POWDER);
      YELLOW_CONCRETE_POWDER = register(Blocks.YELLOW_CONCRETE_POWDER);
      LIME_CONCRETE_POWDER = register(Blocks.LIME_CONCRETE_POWDER);
      PINK_CONCRETE_POWDER = register(Blocks.PINK_CONCRETE_POWDER);
      GRAY_CONCRETE_POWDER = register(Blocks.GRAY_CONCRETE_POWDER);
      LIGHT_GRAY_CONCRETE_POWDER = register(Blocks.LIGHT_GRAY_CONCRETE_POWDER);
      CYAN_CONCRETE_POWDER = register(Blocks.CYAN_CONCRETE_POWDER);
      PURPLE_CONCRETE_POWDER = register(Blocks.PURPLE_CONCRETE_POWDER);
      BLUE_CONCRETE_POWDER = register(Blocks.BLUE_CONCRETE_POWDER);
      BROWN_CONCRETE_POWDER = register(Blocks.BROWN_CONCRETE_POWDER);
      GREEN_CONCRETE_POWDER = register(Blocks.GREEN_CONCRETE_POWDER);
      RED_CONCRETE_POWDER = register(Blocks.RED_CONCRETE_POWDER);
      BLACK_CONCRETE_POWDER = register(Blocks.BLACK_CONCRETE_POWDER);
      TURTLE_EGG = register(Blocks.TURTLE_EGG);
      SNIFFER_EGG = register(Blocks.SNIFFER_EGG);
      DEAD_TUBE_CORAL_BLOCK = register(Blocks.DEAD_TUBE_CORAL_BLOCK);
      DEAD_BRAIN_CORAL_BLOCK = register(Blocks.DEAD_BRAIN_CORAL_BLOCK);
      DEAD_BUBBLE_CORAL_BLOCK = register(Blocks.DEAD_BUBBLE_CORAL_BLOCK);
      DEAD_FIRE_CORAL_BLOCK = register(Blocks.DEAD_FIRE_CORAL_BLOCK);
      DEAD_HORN_CORAL_BLOCK = register(Blocks.DEAD_HORN_CORAL_BLOCK);
      TUBE_CORAL_BLOCK = register(Blocks.TUBE_CORAL_BLOCK);
      BRAIN_CORAL_BLOCK = register(Blocks.BRAIN_CORAL_BLOCK);
      BUBBLE_CORAL_BLOCK = register(Blocks.BUBBLE_CORAL_BLOCK);
      FIRE_CORAL_BLOCK = register(Blocks.FIRE_CORAL_BLOCK);
      HORN_CORAL_BLOCK = register(Blocks.HORN_CORAL_BLOCK);
      TUBE_CORAL = register(Blocks.TUBE_CORAL);
      BRAIN_CORAL = register(Blocks.BRAIN_CORAL);
      BUBBLE_CORAL = register(Blocks.BUBBLE_CORAL);
      FIRE_CORAL = register(Blocks.FIRE_CORAL);
      HORN_CORAL = register(Blocks.HORN_CORAL);
      DEAD_BRAIN_CORAL = register(Blocks.DEAD_BRAIN_CORAL);
      DEAD_BUBBLE_CORAL = register(Blocks.DEAD_BUBBLE_CORAL);
      DEAD_FIRE_CORAL = register(Blocks.DEAD_FIRE_CORAL);
      DEAD_HORN_CORAL = register(Blocks.DEAD_HORN_CORAL);
      DEAD_TUBE_CORAL = register(Blocks.DEAD_TUBE_CORAL);
      TUBE_CORAL_FAN = register((BlockItem)(new VerticallyAttachableBlockItem(Blocks.TUBE_CORAL_FAN, Blocks.TUBE_CORAL_WALL_FAN, new Item.Settings(), Direction.DOWN)));
      BRAIN_CORAL_FAN = register((BlockItem)(new VerticallyAttachableBlockItem(Blocks.BRAIN_CORAL_FAN, Blocks.BRAIN_CORAL_WALL_FAN, new Item.Settings(), Direction.DOWN)));
      BUBBLE_CORAL_FAN = register((BlockItem)(new VerticallyAttachableBlockItem(Blocks.BUBBLE_CORAL_FAN, Blocks.BUBBLE_CORAL_WALL_FAN, new Item.Settings(), Direction.DOWN)));
      FIRE_CORAL_FAN = register((BlockItem)(new VerticallyAttachableBlockItem(Blocks.FIRE_CORAL_FAN, Blocks.FIRE_CORAL_WALL_FAN, new Item.Settings(), Direction.DOWN)));
      HORN_CORAL_FAN = register((BlockItem)(new VerticallyAttachableBlockItem(Blocks.HORN_CORAL_FAN, Blocks.HORN_CORAL_WALL_FAN, new Item.Settings(), Direction.DOWN)));
      DEAD_TUBE_CORAL_FAN = register((BlockItem)(new VerticallyAttachableBlockItem(Blocks.DEAD_TUBE_CORAL_FAN, Blocks.DEAD_TUBE_CORAL_WALL_FAN, new Item.Settings(), Direction.DOWN)));
      DEAD_BRAIN_CORAL_FAN = register((BlockItem)(new VerticallyAttachableBlockItem(Blocks.DEAD_BRAIN_CORAL_FAN, Blocks.DEAD_BRAIN_CORAL_WALL_FAN, new Item.Settings(), Direction.DOWN)));
      DEAD_BUBBLE_CORAL_FAN = register((BlockItem)(new VerticallyAttachableBlockItem(Blocks.DEAD_BUBBLE_CORAL_FAN, Blocks.DEAD_BUBBLE_CORAL_WALL_FAN, new Item.Settings(), Direction.DOWN)));
      DEAD_FIRE_CORAL_FAN = register((BlockItem)(new VerticallyAttachableBlockItem(Blocks.DEAD_FIRE_CORAL_FAN, Blocks.DEAD_FIRE_CORAL_WALL_FAN, new Item.Settings(), Direction.DOWN)));
      DEAD_HORN_CORAL_FAN = register((BlockItem)(new VerticallyAttachableBlockItem(Blocks.DEAD_HORN_CORAL_FAN, Blocks.DEAD_HORN_CORAL_WALL_FAN, new Item.Settings(), Direction.DOWN)));
      BLUE_ICE = register(Blocks.BLUE_ICE);
      CONDUIT = register(new BlockItem(Blocks.CONDUIT, (new Item.Settings()).rarity(Rarity.RARE)));
      POLISHED_GRANITE_STAIRS = register(Blocks.POLISHED_GRANITE_STAIRS);
      SMOOTH_RED_SANDSTONE_STAIRS = register(Blocks.SMOOTH_RED_SANDSTONE_STAIRS);
      MOSSY_STONE_BRICK_STAIRS = register(Blocks.MOSSY_STONE_BRICK_STAIRS);
      POLISHED_DIORITE_STAIRS = register(Blocks.POLISHED_DIORITE_STAIRS);
      MOSSY_COBBLESTONE_STAIRS = register(Blocks.MOSSY_COBBLESTONE_STAIRS);
      END_STONE_BRICK_STAIRS = register(Blocks.END_STONE_BRICK_STAIRS);
      STONE_STAIRS = register(Blocks.STONE_STAIRS);
      SMOOTH_SANDSTONE_STAIRS = register(Blocks.SMOOTH_SANDSTONE_STAIRS);
      SMOOTH_QUARTZ_STAIRS = register(Blocks.SMOOTH_QUARTZ_STAIRS);
      GRANITE_STAIRS = register(Blocks.GRANITE_STAIRS);
      ANDESITE_STAIRS = register(Blocks.ANDESITE_STAIRS);
      RED_NETHER_BRICK_STAIRS = register(Blocks.RED_NETHER_BRICK_STAIRS);
      POLISHED_ANDESITE_STAIRS = register(Blocks.POLISHED_ANDESITE_STAIRS);
      DIORITE_STAIRS = register(Blocks.DIORITE_STAIRS);
      COBBLED_DEEPSLATE_STAIRS = register(Blocks.COBBLED_DEEPSLATE_STAIRS);
      POLISHED_DEEPSLATE_STAIRS = register(Blocks.POLISHED_DEEPSLATE_STAIRS);
      DEEPSLATE_BRICK_STAIRS = register(Blocks.DEEPSLATE_BRICK_STAIRS);
      DEEPSLATE_TILE_STAIRS = register(Blocks.DEEPSLATE_TILE_STAIRS);
      POLISHED_GRANITE_SLAB = register(Blocks.POLISHED_GRANITE_SLAB);
      SMOOTH_RED_SANDSTONE_SLAB = register(Blocks.SMOOTH_RED_SANDSTONE_SLAB);
      MOSSY_STONE_BRICK_SLAB = register(Blocks.MOSSY_STONE_BRICK_SLAB);
      POLISHED_DIORITE_SLAB = register(Blocks.POLISHED_DIORITE_SLAB);
      MOSSY_COBBLESTONE_SLAB = register(Blocks.MOSSY_COBBLESTONE_SLAB);
      END_STONE_BRICK_SLAB = register(Blocks.END_STONE_BRICK_SLAB);
      SMOOTH_SANDSTONE_SLAB = register(Blocks.SMOOTH_SANDSTONE_SLAB);
      SMOOTH_QUARTZ_SLAB = register(Blocks.SMOOTH_QUARTZ_SLAB);
      GRANITE_SLAB = register(Blocks.GRANITE_SLAB);
      ANDESITE_SLAB = register(Blocks.ANDESITE_SLAB);
      RED_NETHER_BRICK_SLAB = register(Blocks.RED_NETHER_BRICK_SLAB);
      POLISHED_ANDESITE_SLAB = register(Blocks.POLISHED_ANDESITE_SLAB);
      DIORITE_SLAB = register(Blocks.DIORITE_SLAB);
      COBBLED_DEEPSLATE_SLAB = register(Blocks.COBBLED_DEEPSLATE_SLAB);
      POLISHED_DEEPSLATE_SLAB = register(Blocks.POLISHED_DEEPSLATE_SLAB);
      DEEPSLATE_BRICK_SLAB = register(Blocks.DEEPSLATE_BRICK_SLAB);
      DEEPSLATE_TILE_SLAB = register(Blocks.DEEPSLATE_TILE_SLAB);
      SCAFFOLDING = register((BlockItem)(new ScaffoldingItem(Blocks.SCAFFOLDING, new Item.Settings())));
      REDSTONE = register((String)"redstone", (Item)(new AliasedBlockItem(Blocks.REDSTONE_WIRE, new Item.Settings())));
      REDSTONE_TORCH = register((BlockItem)(new VerticallyAttachableBlockItem(Blocks.REDSTONE_TORCH, Blocks.REDSTONE_WALL_TORCH, new Item.Settings(), Direction.DOWN)));
      REDSTONE_BLOCK = register(Blocks.REDSTONE_BLOCK);
      REPEATER = register(Blocks.REPEATER);
      COMPARATOR = register(Blocks.COMPARATOR);
      PISTON = register(Blocks.PISTON);
      STICKY_PISTON = register(Blocks.STICKY_PISTON);
      SLIME_BLOCK = register(Blocks.SLIME_BLOCK);
      HONEY_BLOCK = register(Blocks.HONEY_BLOCK);
      OBSERVER = register(Blocks.OBSERVER);
      HOPPER = register(Blocks.HOPPER);
      DISPENSER = register(Blocks.DISPENSER);
      DROPPER = register(Blocks.DROPPER);
      LECTERN = register(Blocks.LECTERN);
      TARGET = register(Blocks.TARGET);
      LEVER = register(Blocks.LEVER);
      LIGHTNING_ROD = register(Blocks.LIGHTNING_ROD);
      DAYLIGHT_DETECTOR = register(Blocks.DAYLIGHT_DETECTOR);
      SCULK_SENSOR = register(Blocks.SCULK_SENSOR);
      CALIBRATED_SCULK_SENSOR = register(Blocks.CALIBRATED_SCULK_SENSOR);
      TRIPWIRE_HOOK = register(Blocks.TRIPWIRE_HOOK);
      TRAPPED_CHEST = register(Blocks.TRAPPED_CHEST);
      TNT = register(Blocks.TNT);
      REDSTONE_LAMP = register(Blocks.REDSTONE_LAMP);
      NOTE_BLOCK = register(Blocks.NOTE_BLOCK);
      STONE_BUTTON = register(Blocks.STONE_BUTTON);
      POLISHED_BLACKSTONE_BUTTON = register(Blocks.POLISHED_BLACKSTONE_BUTTON);
      OAK_BUTTON = register(Blocks.OAK_BUTTON);
      SPRUCE_BUTTON = register(Blocks.SPRUCE_BUTTON);
      BIRCH_BUTTON = register(Blocks.BIRCH_BUTTON);
      JUNGLE_BUTTON = register(Blocks.JUNGLE_BUTTON);
      ACACIA_BUTTON = register(Blocks.ACACIA_BUTTON);
      CHERRY_BUTTON = register(Blocks.CHERRY_BUTTON);
      DARK_OAK_BUTTON = register(Blocks.DARK_OAK_BUTTON);
      MANGROVE_BUTTON = register(Blocks.MANGROVE_BUTTON);
      BAMBOO_BUTTON = register(Blocks.BAMBOO_BUTTON);
      CRIMSON_BUTTON = register(Blocks.CRIMSON_BUTTON);
      WARPED_BUTTON = register(Blocks.WARPED_BUTTON);
      STONE_PRESSURE_PLATE = register(Blocks.STONE_PRESSURE_PLATE);
      POLISHED_BLACKSTONE_PRESSURE_PLATE = register(Blocks.POLISHED_BLACKSTONE_PRESSURE_PLATE);
      LIGHT_WEIGHTED_PRESSURE_PLATE = register(Blocks.LIGHT_WEIGHTED_PRESSURE_PLATE);
      HEAVY_WEIGHTED_PRESSURE_PLATE = register(Blocks.HEAVY_WEIGHTED_PRESSURE_PLATE);
      OAK_PRESSURE_PLATE = register(Blocks.OAK_PRESSURE_PLATE);
      SPRUCE_PRESSURE_PLATE = register(Blocks.SPRUCE_PRESSURE_PLATE);
      BIRCH_PRESSURE_PLATE = register(Blocks.BIRCH_PRESSURE_PLATE);
      JUNGLE_PRESSURE_PLATE = register(Blocks.JUNGLE_PRESSURE_PLATE);
      ACACIA_PRESSURE_PLATE = register(Blocks.ACACIA_PRESSURE_PLATE);
      CHERRY_PRESSURE_PLATE = register(Blocks.CHERRY_PRESSURE_PLATE);
      DARK_OAK_PRESSURE_PLATE = register(Blocks.DARK_OAK_PRESSURE_PLATE);
      MANGROVE_PRESSURE_PLATE = register(Blocks.MANGROVE_PRESSURE_PLATE);
      BAMBOO_PRESSURE_PLATE = register(Blocks.BAMBOO_PRESSURE_PLATE);
      CRIMSON_PRESSURE_PLATE = register(Blocks.CRIMSON_PRESSURE_PLATE);
      WARPED_PRESSURE_PLATE = register(Blocks.WARPED_PRESSURE_PLATE);
      IRON_DOOR = register((BlockItem)(new TallBlockItem(Blocks.IRON_DOOR, new Item.Settings())));
      OAK_DOOR = register((BlockItem)(new TallBlockItem(Blocks.OAK_DOOR, new Item.Settings())));
      SPRUCE_DOOR = register((BlockItem)(new TallBlockItem(Blocks.SPRUCE_DOOR, new Item.Settings())));
      BIRCH_DOOR = register((BlockItem)(new TallBlockItem(Blocks.BIRCH_DOOR, new Item.Settings())));
      JUNGLE_DOOR = register((BlockItem)(new TallBlockItem(Blocks.JUNGLE_DOOR, new Item.Settings())));
      ACACIA_DOOR = register((BlockItem)(new TallBlockItem(Blocks.ACACIA_DOOR, new Item.Settings())));
      CHERRY_DOOR = register((BlockItem)(new TallBlockItem(Blocks.CHERRY_DOOR, new Item.Settings())));
      DARK_OAK_DOOR = register((BlockItem)(new TallBlockItem(Blocks.DARK_OAK_DOOR, new Item.Settings())));
      MANGROVE_DOOR = register((BlockItem)(new TallBlockItem(Blocks.MANGROVE_DOOR, new Item.Settings())));
      BAMBOO_DOOR = register((BlockItem)(new TallBlockItem(Blocks.BAMBOO_DOOR, new Item.Settings())));
      CRIMSON_DOOR = register((BlockItem)(new TallBlockItem(Blocks.CRIMSON_DOOR, new Item.Settings())));
      WARPED_DOOR = register((BlockItem)(new TallBlockItem(Blocks.WARPED_DOOR, new Item.Settings())));
      IRON_TRAPDOOR = register(Blocks.IRON_TRAPDOOR);
      OAK_TRAPDOOR = register(Blocks.OAK_TRAPDOOR);
      SPRUCE_TRAPDOOR = register(Blocks.SPRUCE_TRAPDOOR);
      BIRCH_TRAPDOOR = register(Blocks.BIRCH_TRAPDOOR);
      JUNGLE_TRAPDOOR = register(Blocks.JUNGLE_TRAPDOOR);
      ACACIA_TRAPDOOR = register(Blocks.ACACIA_TRAPDOOR);
      CHERRY_TRAPDOOR = register(Blocks.CHERRY_TRAPDOOR);
      DARK_OAK_TRAPDOOR = register(Blocks.DARK_OAK_TRAPDOOR);
      MANGROVE_TRAPDOOR = register(Blocks.MANGROVE_TRAPDOOR);
      BAMBOO_TRAPDOOR = register(Blocks.BAMBOO_TRAPDOOR);
      CRIMSON_TRAPDOOR = register(Blocks.CRIMSON_TRAPDOOR);
      WARPED_TRAPDOOR = register(Blocks.WARPED_TRAPDOOR);
      OAK_FENCE_GATE = register(Blocks.OAK_FENCE_GATE);
      SPRUCE_FENCE_GATE = register(Blocks.SPRUCE_FENCE_GATE);
      BIRCH_FENCE_GATE = register(Blocks.BIRCH_FENCE_GATE);
      JUNGLE_FENCE_GATE = register(Blocks.JUNGLE_FENCE_GATE);
      ACACIA_FENCE_GATE = register(Blocks.ACACIA_FENCE_GATE);
      CHERRY_FENCE_GATE = register(Blocks.CHERRY_FENCE_GATE);
      DARK_OAK_FENCE_GATE = register(Blocks.DARK_OAK_FENCE_GATE);
      MANGROVE_FENCE_GATE = register(Blocks.MANGROVE_FENCE_GATE);
      BAMBOO_FENCE_GATE = register(Blocks.BAMBOO_FENCE_GATE);
      CRIMSON_FENCE_GATE = register(Blocks.CRIMSON_FENCE_GATE);
      WARPED_FENCE_GATE = register(Blocks.WARPED_FENCE_GATE);
      POWERED_RAIL = register(Blocks.POWERED_RAIL);
      DETECTOR_RAIL = register(Blocks.DETECTOR_RAIL);
      RAIL = register(Blocks.RAIL);
      ACTIVATOR_RAIL = register(Blocks.ACTIVATOR_RAIL);
      SADDLE = register((String)"saddle", (Item)(new SaddleItem((new Item.Settings()).maxCount(1))));
      MINECART = register((String)"minecart", (Item)(new MinecartItem(AbstractMinecartEntity.Type.RIDEABLE, (new Item.Settings()).maxCount(1))));
      CHEST_MINECART = register((String)"chest_minecart", (Item)(new MinecartItem(AbstractMinecartEntity.Type.CHEST, (new Item.Settings()).maxCount(1))));
      FURNACE_MINECART = register((String)"furnace_minecart", (Item)(new MinecartItem(AbstractMinecartEntity.Type.FURNACE, (new Item.Settings()).maxCount(1))));
      TNT_MINECART = register((String)"tnt_minecart", (Item)(new MinecartItem(AbstractMinecartEntity.Type.TNT, (new Item.Settings()).maxCount(1))));
      HOPPER_MINECART = register((String)"hopper_minecart", (Item)(new MinecartItem(AbstractMinecartEntity.Type.HOPPER, (new Item.Settings()).maxCount(1))));
      CARROT_ON_A_STICK = register((String)"carrot_on_a_stick", (Item)(new OnAStickItem((new Item.Settings()).maxDamage(25), EntityType.PIG, 7)));
      WARPED_FUNGUS_ON_A_STICK = register((String)"warped_fungus_on_a_stick", (Item)(new OnAStickItem((new Item.Settings()).maxDamage(100), EntityType.STRIDER, 1)));
      ELYTRA = register((String)"elytra", (Item)(new ElytraItem((new Item.Settings()).maxDamage(432).rarity(Rarity.UNCOMMON))));
      OAK_BOAT = register((String)"oak_boat", (Item)(new BoatItem(false, BoatEntity.Type.OAK, (new Item.Settings()).maxCount(1))));
      OAK_CHEST_BOAT = register((String)"oak_chest_boat", (Item)(new BoatItem(true, BoatEntity.Type.OAK, (new Item.Settings()).maxCount(1))));
      SPRUCE_BOAT = register((String)"spruce_boat", (Item)(new BoatItem(false, BoatEntity.Type.SPRUCE, (new Item.Settings()).maxCount(1))));
      SPRUCE_CHEST_BOAT = register((String)"spruce_chest_boat", (Item)(new BoatItem(true, BoatEntity.Type.SPRUCE, (new Item.Settings()).maxCount(1))));
      BIRCH_BOAT = register((String)"birch_boat", (Item)(new BoatItem(false, BoatEntity.Type.BIRCH, (new Item.Settings()).maxCount(1))));
      BIRCH_CHEST_BOAT = register((String)"birch_chest_boat", (Item)(new BoatItem(true, BoatEntity.Type.BIRCH, (new Item.Settings()).maxCount(1))));
      JUNGLE_BOAT = register((String)"jungle_boat", (Item)(new BoatItem(false, BoatEntity.Type.JUNGLE, (new Item.Settings()).maxCount(1))));
      JUNGLE_CHEST_BOAT = register((String)"jungle_chest_boat", (Item)(new BoatItem(true, BoatEntity.Type.JUNGLE, (new Item.Settings()).maxCount(1))));
      ACACIA_BOAT = register((String)"acacia_boat", (Item)(new BoatItem(false, BoatEntity.Type.ACACIA, (new Item.Settings()).maxCount(1))));
      ACACIA_CHEST_BOAT = register((String)"acacia_chest_boat", (Item)(new BoatItem(true, BoatEntity.Type.ACACIA, (new Item.Settings()).maxCount(1))));
      CHERRY_BOAT = register((String)"cherry_boat", (Item)(new BoatItem(false, BoatEntity.Type.CHERRY, (new Item.Settings()).maxCount(1))));
      CHERRY_CHEST_BOAT = register((String)"cherry_chest_boat", (Item)(new BoatItem(true, BoatEntity.Type.CHERRY, (new Item.Settings()).maxCount(1))));
      DARK_OAK_BOAT = register((String)"dark_oak_boat", (Item)(new BoatItem(false, BoatEntity.Type.DARK_OAK, (new Item.Settings()).maxCount(1))));
      DARK_OAK_CHEST_BOAT = register((String)"dark_oak_chest_boat", (Item)(new BoatItem(true, BoatEntity.Type.DARK_OAK, (new Item.Settings()).maxCount(1))));
      MANGROVE_BOAT = register((String)"mangrove_boat", (Item)(new BoatItem(false, BoatEntity.Type.MANGROVE, (new Item.Settings()).maxCount(1))));
      MANGROVE_CHEST_BOAT = register((String)"mangrove_chest_boat", (Item)(new BoatItem(true, BoatEntity.Type.MANGROVE, (new Item.Settings()).maxCount(1))));
      BAMBOO_RAFT = register((String)"bamboo_raft", (Item)(new BoatItem(false, BoatEntity.Type.BAMBOO, (new Item.Settings()).maxCount(1))));
      BAMBOO_CHEST_RAFT = register((String)"bamboo_chest_raft", (Item)(new BoatItem(true, BoatEntity.Type.BAMBOO, (new Item.Settings()).maxCount(1))));
      STRUCTURE_BLOCK = register((BlockItem)(new OperatorOnlyBlockItem(Blocks.STRUCTURE_BLOCK, (new Item.Settings()).rarity(Rarity.EPIC))));
      JIGSAW = register((BlockItem)(new OperatorOnlyBlockItem(Blocks.JIGSAW, (new Item.Settings()).rarity(Rarity.EPIC))));
      TURTLE_HELMET = register((String)"turtle_helmet", (Item)(new ArmorItem(ArmorMaterials.TURTLE, ArmorItem.Type.HELMET, new Item.Settings())));
      SCUTE = register("scute", new Item(new Item.Settings()));
      FLINT_AND_STEEL = register((String)"flint_and_steel", (Item)(new FlintAndSteelItem((new Item.Settings()).maxDamage(64))));
      APPLE = register("apple", new Item((new Item.Settings()).food(FoodComponents.APPLE)));
      BOW = register((String)"bow", (Item)(new BowItem((new Item.Settings()).maxDamage(384))));
      ARROW = register((String)"arrow", (Item)(new ArrowItem(new Item.Settings())));
      COAL = register("coal", new Item(new Item.Settings()));
      CHARCOAL = register("charcoal", new Item(new Item.Settings()));
      DIAMOND = register("diamond", new Item(new Item.Settings()));
      EMERALD = register("emerald", new Item(new Item.Settings()));
      LAPIS_LAZULI = register("lapis_lazuli", new Item(new Item.Settings()));
      QUARTZ = register("quartz", new Item(new Item.Settings()));
      AMETHYST_SHARD = register("amethyst_shard", new Item(new Item.Settings()));
      RAW_IRON = register("raw_iron", new Item(new Item.Settings()));
      IRON_INGOT = register("iron_ingot", new Item(new Item.Settings()));
      RAW_COPPER = register("raw_copper", new Item(new Item.Settings()));
      COPPER_INGOT = register("copper_ingot", new Item(new Item.Settings()));
      RAW_GOLD = register("raw_gold", new Item(new Item.Settings()));
      GOLD_INGOT = register("gold_ingot", new Item(new Item.Settings()));
      NETHERITE_INGOT = register("netherite_ingot", new Item((new Item.Settings()).fireproof()));
      NETHERITE_SCRAP = register("netherite_scrap", new Item((new Item.Settings()).fireproof()));
      WOODEN_SWORD = register((String)"wooden_sword", (Item)(new SwordItem(ToolMaterials.WOOD, 3, -2.4F, new Item.Settings())));
      WOODEN_SHOVEL = register((String)"wooden_shovel", (Item)(new ShovelItem(ToolMaterials.WOOD, 1.5F, -3.0F, new Item.Settings())));
      WOODEN_PICKAXE = register((String)"wooden_pickaxe", (Item)(new PickaxeItem(ToolMaterials.WOOD, 1, -2.8F, new Item.Settings())));
      WOODEN_AXE = register((String)"wooden_axe", (Item)(new AxeItem(ToolMaterials.WOOD, 6.0F, -3.2F, new Item.Settings())));
      WOODEN_HOE = register((String)"wooden_hoe", (Item)(new HoeItem(ToolMaterials.WOOD, 0, -3.0F, new Item.Settings())));
      STONE_SWORD = register((String)"stone_sword", (Item)(new SwordItem(ToolMaterials.STONE, 3, -2.4F, new Item.Settings())));
      STONE_SHOVEL = register((String)"stone_shovel", (Item)(new ShovelItem(ToolMaterials.STONE, 1.5F, -3.0F, new Item.Settings())));
      STONE_PICKAXE = register((String)"stone_pickaxe", (Item)(new PickaxeItem(ToolMaterials.STONE, 1, -2.8F, new Item.Settings())));
      STONE_AXE = register((String)"stone_axe", (Item)(new AxeItem(ToolMaterials.STONE, 7.0F, -3.2F, new Item.Settings())));
      STONE_HOE = register((String)"stone_hoe", (Item)(new HoeItem(ToolMaterials.STONE, -1, -2.0F, new Item.Settings())));
      GOLDEN_SWORD = register((String)"golden_sword", (Item)(new SwordItem(ToolMaterials.GOLD, 3, -2.4F, new Item.Settings())));
      GOLDEN_SHOVEL = register((String)"golden_shovel", (Item)(new ShovelItem(ToolMaterials.GOLD, 1.5F, -3.0F, new Item.Settings())));
      GOLDEN_PICKAXE = register((String)"golden_pickaxe", (Item)(new PickaxeItem(ToolMaterials.GOLD, 1, -2.8F, new Item.Settings())));
      GOLDEN_AXE = register((String)"golden_axe", (Item)(new AxeItem(ToolMaterials.GOLD, 6.0F, -3.0F, new Item.Settings())));
      GOLDEN_HOE = register((String)"golden_hoe", (Item)(new HoeItem(ToolMaterials.GOLD, 0, -3.0F, new Item.Settings())));
      IRON_SWORD = register((String)"iron_sword", (Item)(new SwordItem(ToolMaterials.IRON, 3, -2.4F, new Item.Settings())));
      IRON_SHOVEL = register((String)"iron_shovel", (Item)(new ShovelItem(ToolMaterials.IRON, 1.5F, -3.0F, new Item.Settings())));
      IRON_PICKAXE = register((String)"iron_pickaxe", (Item)(new PickaxeItem(ToolMaterials.IRON, 1, -2.8F, new Item.Settings())));
      IRON_AXE = register((String)"iron_axe", (Item)(new AxeItem(ToolMaterials.IRON, 6.0F, -3.1F, new Item.Settings())));
      IRON_HOE = register((String)"iron_hoe", (Item)(new HoeItem(ToolMaterials.IRON, -2, -1.0F, new Item.Settings())));
      DIAMOND_SWORD = register((String)"diamond_sword", (Item)(new SwordItem(ToolMaterials.DIAMOND, 3, -2.4F, new Item.Settings())));
      DIAMOND_SHOVEL = register((String)"diamond_shovel", (Item)(new ShovelItem(ToolMaterials.DIAMOND, 1.5F, -3.0F, new Item.Settings())));
      DIAMOND_PICKAXE = register((String)"diamond_pickaxe", (Item)(new PickaxeItem(ToolMaterials.DIAMOND, 1, -2.8F, new Item.Settings())));
      DIAMOND_AXE = register((String)"diamond_axe", (Item)(new AxeItem(ToolMaterials.DIAMOND, 5.0F, -3.0F, new Item.Settings())));
      DIAMOND_HOE = register((String)"diamond_hoe", (Item)(new HoeItem(ToolMaterials.DIAMOND, -3, 0.0F, new Item.Settings())));
      NETHERITE_SWORD = register((String)"netherite_sword", (Item)(new SwordItem(ToolMaterials.NETHERITE, 3, -2.4F, (new Item.Settings()).fireproof())));
      NETHERITE_SHOVEL = register((String)"netherite_shovel", (Item)(new ShovelItem(ToolMaterials.NETHERITE, 1.5F, -3.0F, (new Item.Settings()).fireproof())));
      NETHERITE_PICKAXE = register((String)"netherite_pickaxe", (Item)(new PickaxeItem(ToolMaterials.NETHERITE, 1, -2.8F, (new Item.Settings()).fireproof())));
      NETHERITE_AXE = register((String)"netherite_axe", (Item)(new AxeItem(ToolMaterials.NETHERITE, 5.0F, -3.0F, (new Item.Settings()).fireproof())));
      NETHERITE_HOE = register((String)"netherite_hoe", (Item)(new HoeItem(ToolMaterials.NETHERITE, -4, 0.0F, (new Item.Settings()).fireproof())));
      STICK = register("stick", new Item(new Item.Settings()));
      BOWL = register("bowl", new Item(new Item.Settings()));
      MUSHROOM_STEW = register((String)"mushroom_stew", (Item)(new StewItem((new Item.Settings()).maxCount(1).food(FoodComponents.MUSHROOM_STEW))));
      STRING = register((String)"string", (Item)(new AliasedBlockItem(Blocks.TRIPWIRE, new Item.Settings())));
      FEATHER = register("feather", new Item(new Item.Settings()));
      GUNPOWDER = register("gunpowder", new Item(new Item.Settings()));
      WHEAT_SEEDS = register((String)"wheat_seeds", (Item)(new AliasedBlockItem(Blocks.WHEAT, new Item.Settings())));
      WHEAT = register("wheat", new Item(new Item.Settings()));
      BREAD = register("bread", new Item((new Item.Settings()).food(FoodComponents.BREAD)));
      LEATHER_HELMET = register((String)"leather_helmet", (Item)(new DyeableArmorItem(ArmorMaterials.LEATHER, ArmorItem.Type.HELMET, new Item.Settings())));
      LEATHER_CHESTPLATE = register((String)"leather_chestplate", (Item)(new DyeableArmorItem(ArmorMaterials.LEATHER, ArmorItem.Type.CHESTPLATE, new Item.Settings())));
      LEATHER_LEGGINGS = register((String)"leather_leggings", (Item)(new DyeableArmorItem(ArmorMaterials.LEATHER, ArmorItem.Type.LEGGINGS, new Item.Settings())));
      LEATHER_BOOTS = register((String)"leather_boots", (Item)(new DyeableArmorItem(ArmorMaterials.LEATHER, ArmorItem.Type.BOOTS, new Item.Settings())));
      CHAINMAIL_HELMET = register((String)"chainmail_helmet", (Item)(new ArmorItem(ArmorMaterials.CHAIN, ArmorItem.Type.HELMET, new Item.Settings())));
      CHAINMAIL_CHESTPLATE = register((String)"chainmail_chestplate", (Item)(new ArmorItem(ArmorMaterials.CHAIN, ArmorItem.Type.CHESTPLATE, new Item.Settings())));
      CHAINMAIL_LEGGINGS = register((String)"chainmail_leggings", (Item)(new ArmorItem(ArmorMaterials.CHAIN, ArmorItem.Type.LEGGINGS, new Item.Settings())));
      CHAINMAIL_BOOTS = register((String)"chainmail_boots", (Item)(new ArmorItem(ArmorMaterials.CHAIN, ArmorItem.Type.BOOTS, new Item.Settings())));
      IRON_HELMET = register((String)"iron_helmet", (Item)(new ArmorItem(ArmorMaterials.IRON, ArmorItem.Type.HELMET, new Item.Settings())));
      IRON_CHESTPLATE = register((String)"iron_chestplate", (Item)(new ArmorItem(ArmorMaterials.IRON, ArmorItem.Type.CHESTPLATE, new Item.Settings())));
      IRON_LEGGINGS = register((String)"iron_leggings", (Item)(new ArmorItem(ArmorMaterials.IRON, ArmorItem.Type.LEGGINGS, new Item.Settings())));
      IRON_BOOTS = register((String)"iron_boots", (Item)(new ArmorItem(ArmorMaterials.IRON, ArmorItem.Type.BOOTS, new Item.Settings())));
      DIAMOND_HELMET = register((String)"diamond_helmet", (Item)(new ArmorItem(ArmorMaterials.DIAMOND, ArmorItem.Type.HELMET, new Item.Settings())));
      DIAMOND_CHESTPLATE = register((String)"diamond_chestplate", (Item)(new ArmorItem(ArmorMaterials.DIAMOND, ArmorItem.Type.CHESTPLATE, new Item.Settings())));
      DIAMOND_LEGGINGS = register((String)"diamond_leggings", (Item)(new ArmorItem(ArmorMaterials.DIAMOND, ArmorItem.Type.LEGGINGS, new Item.Settings())));
      DIAMOND_BOOTS = register((String)"diamond_boots", (Item)(new ArmorItem(ArmorMaterials.DIAMOND, ArmorItem.Type.BOOTS, new Item.Settings())));
      GOLDEN_HELMET = register((String)"golden_helmet", (Item)(new ArmorItem(ArmorMaterials.GOLD, ArmorItem.Type.HELMET, new Item.Settings())));
      GOLDEN_CHESTPLATE = register((String)"golden_chestplate", (Item)(new ArmorItem(ArmorMaterials.GOLD, ArmorItem.Type.CHESTPLATE, new Item.Settings())));
      GOLDEN_LEGGINGS = register((String)"golden_leggings", (Item)(new ArmorItem(ArmorMaterials.GOLD, ArmorItem.Type.LEGGINGS, new Item.Settings())));
      GOLDEN_BOOTS = register((String)"golden_boots", (Item)(new ArmorItem(ArmorMaterials.GOLD, ArmorItem.Type.BOOTS, new Item.Settings())));
      NETHERITE_HELMET = register((String)"netherite_helmet", (Item)(new ArmorItem(ArmorMaterials.NETHERITE, ArmorItem.Type.HELMET, (new Item.Settings()).fireproof())));
      NETHERITE_CHESTPLATE = register((String)"netherite_chestplate", (Item)(new ArmorItem(ArmorMaterials.NETHERITE, ArmorItem.Type.CHESTPLATE, (new Item.Settings()).fireproof())));
      NETHERITE_LEGGINGS = register((String)"netherite_leggings", (Item)(new ArmorItem(ArmorMaterials.NETHERITE, ArmorItem.Type.LEGGINGS, (new Item.Settings()).fireproof())));
      NETHERITE_BOOTS = register((String)"netherite_boots", (Item)(new ArmorItem(ArmorMaterials.NETHERITE, ArmorItem.Type.BOOTS, (new Item.Settings()).fireproof())));
      FLINT = register("flint", new Item(new Item.Settings()));
      PORKCHOP = register("porkchop", new Item((new Item.Settings()).food(FoodComponents.PORKCHOP)));
      COOKED_PORKCHOP = register("cooked_porkchop", new Item((new Item.Settings()).food(FoodComponents.COOKED_PORKCHOP)));
      PAINTING = register((String)"painting", (Item)(new DecorationItem(EntityType.PAINTING, new Item.Settings())));
      GOLDEN_APPLE = register("golden_apple", new Item((new Item.Settings()).rarity(Rarity.RARE).food(FoodComponents.GOLDEN_APPLE)));
      ENCHANTED_GOLDEN_APPLE = register((String)"enchanted_golden_apple", (Item)(new EnchantedGoldenAppleItem((new Item.Settings()).rarity(Rarity.EPIC).food(FoodComponents.ENCHANTED_GOLDEN_APPLE))));
      OAK_SIGN = register((String)"oak_sign", (Item)(new SignItem((new Item.Settings()).maxCount(16), Blocks.OAK_SIGN, Blocks.OAK_WALL_SIGN)));
      SPRUCE_SIGN = register((String)"spruce_sign", (Item)(new SignItem((new Item.Settings()).maxCount(16), Blocks.SPRUCE_SIGN, Blocks.SPRUCE_WALL_SIGN)));
      BIRCH_SIGN = register((String)"birch_sign", (Item)(new SignItem((new Item.Settings()).maxCount(16), Blocks.BIRCH_SIGN, Blocks.BIRCH_WALL_SIGN)));
      JUNGLE_SIGN = register((String)"jungle_sign", (Item)(new SignItem((new Item.Settings()).maxCount(16), Blocks.JUNGLE_SIGN, Blocks.JUNGLE_WALL_SIGN)));
      ACACIA_SIGN = register((String)"acacia_sign", (Item)(new SignItem((new Item.Settings()).maxCount(16), Blocks.ACACIA_SIGN, Blocks.ACACIA_WALL_SIGN)));
      CHERRY_SIGN = register((String)"cherry_sign", (Item)(new SignItem((new Item.Settings()).maxCount(16), Blocks.CHERRY_SIGN, Blocks.CHERRY_WALL_SIGN)));
      DARK_OAK_SIGN = register((String)"dark_oak_sign", (Item)(new SignItem((new Item.Settings()).maxCount(16), Blocks.DARK_OAK_SIGN, Blocks.DARK_OAK_WALL_SIGN)));
      MANGROVE_SIGN = register((String)"mangrove_sign", (Item)(new SignItem((new Item.Settings()).maxCount(16), Blocks.MANGROVE_SIGN, Blocks.MANGROVE_WALL_SIGN)));
      BAMBOO_SIGN = register((String)"bamboo_sign", (Item)(new SignItem((new Item.Settings()).maxCount(16), Blocks.BAMBOO_SIGN, Blocks.BAMBOO_WALL_SIGN)));
      CRIMSON_SIGN = register((String)"crimson_sign", (Item)(new SignItem((new Item.Settings()).maxCount(16), Blocks.CRIMSON_SIGN, Blocks.CRIMSON_WALL_SIGN)));
      WARPED_SIGN = register((String)"warped_sign", (Item)(new SignItem((new Item.Settings()).maxCount(16), Blocks.WARPED_SIGN, Blocks.WARPED_WALL_SIGN)));
      OAK_HANGING_SIGN = register((String)"oak_hanging_sign", (Item)(new HangingSignItem(Blocks.OAK_HANGING_SIGN, Blocks.OAK_WALL_HANGING_SIGN, (new Item.Settings()).maxCount(16))));
      SPRUCE_HANGING_SIGN = register((String)"spruce_hanging_sign", (Item)(new HangingSignItem(Blocks.SPRUCE_HANGING_SIGN, Blocks.SPRUCE_WALL_HANGING_SIGN, (new Item.Settings()).maxCount(16))));
      BIRCH_HANGING_SIGN = register((String)"birch_hanging_sign", (Item)(new HangingSignItem(Blocks.BIRCH_HANGING_SIGN, Blocks.BIRCH_WALL_HANGING_SIGN, (new Item.Settings()).maxCount(16))));
      JUNGLE_HANGING_SIGN = register((String)"jungle_hanging_sign", (Item)(new HangingSignItem(Blocks.JUNGLE_HANGING_SIGN, Blocks.JUNGLE_WALL_HANGING_SIGN, (new Item.Settings()).maxCount(16))));
      ACACIA_HANGING_SIGN = register((String)"acacia_hanging_sign", (Item)(new HangingSignItem(Blocks.ACACIA_HANGING_SIGN, Blocks.ACACIA_WALL_HANGING_SIGN, (new Item.Settings()).maxCount(16))));
      CHERRY_HANGING_SIGN = register((String)"cherry_hanging_sign", (Item)(new HangingSignItem(Blocks.CHERRY_HANGING_SIGN, Blocks.CHERRY_WALL_HANGING_SIGN, (new Item.Settings()).maxCount(16))));
      DARK_OAK_HANGING_SIGN = register((String)"dark_oak_hanging_sign", (Item)(new HangingSignItem(Blocks.DARK_OAK_HANGING_SIGN, Blocks.DARK_OAK_WALL_HANGING_SIGN, (new Item.Settings()).maxCount(16))));
      MANGROVE_HANGING_SIGN = register((String)"mangrove_hanging_sign", (Item)(new HangingSignItem(Blocks.MANGROVE_HANGING_SIGN, Blocks.MANGROVE_WALL_HANGING_SIGN, (new Item.Settings()).maxCount(16))));
      BAMBOO_HANGING_SIGN = register((String)"bamboo_hanging_sign", (Item)(new HangingSignItem(Blocks.BAMBOO_HANGING_SIGN, Blocks.BAMBOO_WALL_HANGING_SIGN, (new Item.Settings()).maxCount(16))));
      CRIMSON_HANGING_SIGN = register((String)"crimson_hanging_sign", (Item)(new HangingSignItem(Blocks.CRIMSON_HANGING_SIGN, Blocks.CRIMSON_WALL_HANGING_SIGN, (new Item.Settings()).maxCount(16))));
      WARPED_HANGING_SIGN = register((String)"warped_hanging_sign", (Item)(new HangingSignItem(Blocks.WARPED_HANGING_SIGN, Blocks.WARPED_WALL_HANGING_SIGN, (new Item.Settings()).maxCount(16))));
      BUCKET = register((String)"bucket", (Item)(new BucketItem(Fluids.EMPTY, (new Item.Settings()).maxCount(16))));
      WATER_BUCKET = register((String)"water_bucket", (Item)(new BucketItem(Fluids.WATER, (new Item.Settings()).recipeRemainder(BUCKET).maxCount(1))));
      LAVA_BUCKET = register((String)"lava_bucket", (Item)(new BucketItem(Fluids.LAVA, (new Item.Settings()).recipeRemainder(BUCKET).maxCount(1))));
      POWDER_SNOW_BUCKET = register((String)"powder_snow_bucket", (Item)(new PowderSnowBucketItem(Blocks.POWDER_SNOW, SoundEvents.ITEM_BUCKET_EMPTY_POWDER_SNOW, (new Item.Settings()).maxCount(1))));
      SNOWBALL = register((String)"snowball", (Item)(new SnowballItem((new Item.Settings()).maxCount(16))));
      LEATHER = register("leather", new Item(new Item.Settings()));
      MILK_BUCKET = register((String)"milk_bucket", (Item)(new MilkBucketItem((new Item.Settings()).recipeRemainder(BUCKET).maxCount(1))));
      PUFFERFISH_BUCKET = register((String)"pufferfish_bucket", (Item)(new EntityBucketItem(EntityType.PUFFERFISH, Fluids.WATER, SoundEvents.ITEM_BUCKET_EMPTY_FISH, (new Item.Settings()).maxCount(1))));
      SALMON_BUCKET = register((String)"salmon_bucket", (Item)(new EntityBucketItem(EntityType.SALMON, Fluids.WATER, SoundEvents.ITEM_BUCKET_EMPTY_FISH, (new Item.Settings()).maxCount(1))));
      COD_BUCKET = register((String)"cod_bucket", (Item)(new EntityBucketItem(EntityType.COD, Fluids.WATER, SoundEvents.ITEM_BUCKET_EMPTY_FISH, (new Item.Settings()).maxCount(1))));
      TROPICAL_FISH_BUCKET = register((String)"tropical_fish_bucket", (Item)(new EntityBucketItem(EntityType.TROPICAL_FISH, Fluids.WATER, SoundEvents.ITEM_BUCKET_EMPTY_FISH, (new Item.Settings()).maxCount(1))));
      AXOLOTL_BUCKET = register((String)"axolotl_bucket", (Item)(new EntityBucketItem(EntityType.AXOLOTL, Fluids.WATER, SoundEvents.ITEM_BUCKET_EMPTY_AXOLOTL, (new Item.Settings()).maxCount(1))));
      TADPOLE_BUCKET = register((String)"tadpole_bucket", (Item)(new EntityBucketItem(EntityType.TADPOLE, Fluids.WATER, SoundEvents.ITEM_BUCKET_EMPTY_TADPOLE, (new Item.Settings()).maxCount(1))));
      BRICK = register("brick", new Item(new Item.Settings()));
      CLAY_BALL = register("clay_ball", new Item(new Item.Settings()));
      DRIED_KELP_BLOCK = register(Blocks.DRIED_KELP_BLOCK);
      PAPER = register("paper", new Item(new Item.Settings()));
      BOOK = register((String)"book", (Item)(new BookItem(new Item.Settings())));
      SLIME_BALL = register("slime_ball", new Item(new Item.Settings()));
      EGG = register((String)"egg", (Item)(new EggItem((new Item.Settings()).maxCount(16))));
      COMPASS = register((String)"compass", (Item)(new CompassItem(new Item.Settings())));
      RECOVERY_COMPASS = register("recovery_compass", new Item(new Item.Settings()));
      BUNDLE = register((String)"bundle", (Item)(new BundleItem((new Item.Settings()).maxCount(1))));
      FISHING_ROD = register((String)"fishing_rod", (Item)(new FishingRodItem((new Item.Settings()).maxDamage(64))));
      CLOCK = register("clock", new Item(new Item.Settings()));
      SPYGLASS = register((String)"spyglass", (Item)(new SpyglassItem((new Item.Settings()).maxCount(1))));
      GLOWSTONE_DUST = register("glowstone_dust", new Item(new Item.Settings()));
      COD = register("cod", new Item((new Item.Settings()).food(FoodComponents.COD)));
      SALMON = register("salmon", new Item((new Item.Settings()).food(FoodComponents.SALMON)));
      TROPICAL_FISH = register("tropical_fish", new Item((new Item.Settings()).food(FoodComponents.TROPICAL_FISH)));
      PUFFERFISH = register("pufferfish", new Item((new Item.Settings()).food(FoodComponents.PUFFERFISH)));
      COOKED_COD = register("cooked_cod", new Item((new Item.Settings()).food(FoodComponents.COOKED_COD)));
      COOKED_SALMON = register("cooked_salmon", new Item((new Item.Settings()).food(FoodComponents.COOKED_SALMON)));
      INK_SAC = register((String)"ink_sac", (Item)(new InkSacItem(new Item.Settings())));
      GLOW_INK_SAC = register((String)"glow_ink_sac", (Item)(new GlowInkSacItem(new Item.Settings())));
      COCOA_BEANS = register((String)"cocoa_beans", (Item)(new AliasedBlockItem(Blocks.COCOA, new Item.Settings())));
      WHITE_DYE = register((String)"white_dye", (Item)(new DyeItem(DyeColor.WHITE, new Item.Settings())));
      ORANGE_DYE = register((String)"orange_dye", (Item)(new DyeItem(DyeColor.ORANGE, new Item.Settings())));
      MAGENTA_DYE = register((String)"magenta_dye", (Item)(new DyeItem(DyeColor.MAGENTA, new Item.Settings())));
      LIGHT_BLUE_DYE = register((String)"light_blue_dye", (Item)(new DyeItem(DyeColor.LIGHT_BLUE, new Item.Settings())));
      YELLOW_DYE = register((String)"yellow_dye", (Item)(new DyeItem(DyeColor.YELLOW, new Item.Settings())));
      LIME_DYE = register((String)"lime_dye", (Item)(new DyeItem(DyeColor.LIME, new Item.Settings())));
      PINK_DYE = register((String)"pink_dye", (Item)(new DyeItem(DyeColor.PINK, new Item.Settings())));
      GRAY_DYE = register((String)"gray_dye", (Item)(new DyeItem(DyeColor.GRAY, new Item.Settings())));
      LIGHT_GRAY_DYE = register((String)"light_gray_dye", (Item)(new DyeItem(DyeColor.LIGHT_GRAY, new Item.Settings())));
      CYAN_DYE = register((String)"cyan_dye", (Item)(new DyeItem(DyeColor.CYAN, new Item.Settings())));
      PURPLE_DYE = register((String)"purple_dye", (Item)(new DyeItem(DyeColor.PURPLE, new Item.Settings())));
      BLUE_DYE = register((String)"blue_dye", (Item)(new DyeItem(DyeColor.BLUE, new Item.Settings())));
      BROWN_DYE = register((String)"brown_dye", (Item)(new DyeItem(DyeColor.BROWN, new Item.Settings())));
      GREEN_DYE = register((String)"green_dye", (Item)(new DyeItem(DyeColor.GREEN, new Item.Settings())));
      RED_DYE = register((String)"red_dye", (Item)(new DyeItem(DyeColor.RED, new Item.Settings())));
      BLACK_DYE = register((String)"black_dye", (Item)(new DyeItem(DyeColor.BLACK, new Item.Settings())));
      BONE_MEAL = register((String)"bone_meal", (Item)(new BoneMealItem(new Item.Settings())));
      BONE = register("bone", new Item(new Item.Settings()));
      SUGAR = register("sugar", new Item(new Item.Settings()));
      CAKE = register(new BlockItem(Blocks.CAKE, (new Item.Settings()).maxCount(1)));
      WHITE_BED = register((BlockItem)(new BedItem(Blocks.WHITE_BED, (new Item.Settings()).maxCount(1))));
      ORANGE_BED = register((BlockItem)(new BedItem(Blocks.ORANGE_BED, (new Item.Settings()).maxCount(1))));
      MAGENTA_BED = register((BlockItem)(new BedItem(Blocks.MAGENTA_BED, (new Item.Settings()).maxCount(1))));
      LIGHT_BLUE_BED = register((BlockItem)(new BedItem(Blocks.LIGHT_BLUE_BED, (new Item.Settings()).maxCount(1))));
      YELLOW_BED = register((BlockItem)(new BedItem(Blocks.YELLOW_BED, (new Item.Settings()).maxCount(1))));
      LIME_BED = register((BlockItem)(new BedItem(Blocks.LIME_BED, (new Item.Settings()).maxCount(1))));
      PINK_BED = register((BlockItem)(new BedItem(Blocks.PINK_BED, (new Item.Settings()).maxCount(1))));
      GRAY_BED = register((BlockItem)(new BedItem(Blocks.GRAY_BED, (new Item.Settings()).maxCount(1))));
      LIGHT_GRAY_BED = register((BlockItem)(new BedItem(Blocks.LIGHT_GRAY_BED, (new Item.Settings()).maxCount(1))));
      CYAN_BED = register((BlockItem)(new BedItem(Blocks.CYAN_BED, (new Item.Settings()).maxCount(1))));
      PURPLE_BED = register((BlockItem)(new BedItem(Blocks.PURPLE_BED, (new Item.Settings()).maxCount(1))));
      BLUE_BED = register((BlockItem)(new BedItem(Blocks.BLUE_BED, (new Item.Settings()).maxCount(1))));
      BROWN_BED = register((BlockItem)(new BedItem(Blocks.BROWN_BED, (new Item.Settings()).maxCount(1))));
      GREEN_BED = register((BlockItem)(new BedItem(Blocks.GREEN_BED, (new Item.Settings()).maxCount(1))));
      RED_BED = register((BlockItem)(new BedItem(Blocks.RED_BED, (new Item.Settings()).maxCount(1))));
      BLACK_BED = register((BlockItem)(new BedItem(Blocks.BLACK_BED, (new Item.Settings()).maxCount(1))));
      COOKIE = register("cookie", new Item((new Item.Settings()).food(FoodComponents.COOKIE)));
      FILLED_MAP = register((String)"filled_map", (Item)(new FilledMapItem(new Item.Settings())));
      SHEARS = register((String)"shears", (Item)(new ShearsItem((new Item.Settings()).maxDamage(238))));
      MELON_SLICE = register("melon_slice", new Item((new Item.Settings()).food(FoodComponents.MELON_SLICE)));
      DRIED_KELP = register("dried_kelp", new Item((new Item.Settings()).food(FoodComponents.DRIED_KELP)));
      PUMPKIN_SEEDS = register((String)"pumpkin_seeds", (Item)(new AliasedBlockItem(Blocks.PUMPKIN_STEM, new Item.Settings())));
      MELON_SEEDS = register((String)"melon_seeds", (Item)(new AliasedBlockItem(Blocks.MELON_STEM, new Item.Settings())));
      BEEF = register("beef", new Item((new Item.Settings()).food(FoodComponents.BEEF)));
      COOKED_BEEF = register("cooked_beef", new Item((new Item.Settings()).food(FoodComponents.COOKED_BEEF)));
      CHICKEN = register("chicken", new Item((new Item.Settings()).food(FoodComponents.CHICKEN)));
      COOKED_CHICKEN = register("cooked_chicken", new Item((new Item.Settings()).food(FoodComponents.COOKED_CHICKEN)));
      ROTTEN_FLESH = register("rotten_flesh", new Item((new Item.Settings()).food(FoodComponents.ROTTEN_FLESH)));
      ENDER_PEARL = register((String)"ender_pearl", (Item)(new EnderPearlItem((new Item.Settings()).maxCount(16))));
      BLAZE_ROD = register("blaze_rod", new Item(new Item.Settings()));
      GHAST_TEAR = register("ghast_tear", new Item(new Item.Settings()));
      GOLD_NUGGET = register("gold_nugget", new Item(new Item.Settings()));
      NETHER_WART = register((String)"nether_wart", (Item)(new AliasedBlockItem(Blocks.NETHER_WART, new Item.Settings())));
      POTION = register((String)"potion", (Item)(new PotionItem((new Item.Settings()).maxCount(1))));
      GLASS_BOTTLE = register((String)"glass_bottle", (Item)(new GlassBottleItem(new Item.Settings())));
      SPIDER_EYE = register("spider_eye", new Item((new Item.Settings()).food(FoodComponents.SPIDER_EYE)));
      FERMENTED_SPIDER_EYE = register("fermented_spider_eye", new Item(new Item.Settings()));
      BLAZE_POWDER = register("blaze_powder", new Item(new Item.Settings()));
      MAGMA_CREAM = register("magma_cream", new Item(new Item.Settings()));
      BREWING_STAND = register(Blocks.BREWING_STAND);
      CAULDRON = register(Blocks.CAULDRON, Blocks.WATER_CAULDRON, Blocks.LAVA_CAULDRON, Blocks.POWDER_SNOW_CAULDRON);
      ENDER_EYE = register((String)"ender_eye", (Item)(new EnderEyeItem(new Item.Settings())));
      GLISTERING_MELON_SLICE = register("glistering_melon_slice", new Item(new Item.Settings()));
      ALLAY_SPAWN_EGG = register((String)"allay_spawn_egg", (Item)(new SpawnEggItem(EntityType.ALLAY, 56063, 44543, new Item.Settings())));
      AXOLOTL_SPAWN_EGG = register((String)"axolotl_spawn_egg", (Item)(new SpawnEggItem(EntityType.AXOLOTL, 16499171, 10890612, new Item.Settings())));
      BAT_SPAWN_EGG = register((String)"bat_spawn_egg", (Item)(new SpawnEggItem(EntityType.BAT, 4996656, 986895, new Item.Settings())));
      BEE_SPAWN_EGG = register((String)"bee_spawn_egg", (Item)(new SpawnEggItem(EntityType.BEE, 15582019, 4400155, new Item.Settings())));
      BLAZE_SPAWN_EGG = register((String)"blaze_spawn_egg", (Item)(new SpawnEggItem(EntityType.BLAZE, 16167425, 16775294, new Item.Settings())));
      CAT_SPAWN_EGG = register((String)"cat_spawn_egg", (Item)(new SpawnEggItem(EntityType.CAT, 15714446, 9794134, new Item.Settings())));
      CAMEL_SPAWN_EGG = register((String)"camel_spawn_egg", (Item)(new SpawnEggItem(EntityType.CAMEL, 16565097, 13341495, new Item.Settings())));
      CAVE_SPIDER_SPAWN_EGG = register((String)"cave_spider_spawn_egg", (Item)(new SpawnEggItem(EntityType.CAVE_SPIDER, 803406, 11013646, new Item.Settings())));
      CHICKEN_SPAWN_EGG = register((String)"chicken_spawn_egg", (Item)(new SpawnEggItem(EntityType.CHICKEN, 10592673, 16711680, new Item.Settings())));
      COD_SPAWN_EGG = register((String)"cod_spawn_egg", (Item)(new SpawnEggItem(EntityType.COD, 12691306, 15058059, new Item.Settings())));
      COW_SPAWN_EGG = register((String)"cow_spawn_egg", (Item)(new SpawnEggItem(EntityType.COW, 4470310, 10592673, new Item.Settings())));
      CREEPER_SPAWN_EGG = register((String)"creeper_spawn_egg", (Item)(new SpawnEggItem(EntityType.CREEPER, 894731, 0, new Item.Settings())));
      DOLPHIN_SPAWN_EGG = register((String)"dolphin_spawn_egg", (Item)(new SpawnEggItem(EntityType.DOLPHIN, 2243405, 16382457, new Item.Settings())));
      DONKEY_SPAWN_EGG = register((String)"donkey_spawn_egg", (Item)(new SpawnEggItem(EntityType.DONKEY, 5457209, 8811878, new Item.Settings())));
      DROWNED_SPAWN_EGG = register((String)"drowned_spawn_egg", (Item)(new SpawnEggItem(EntityType.DROWNED, 9433559, 7969893, new Item.Settings())));
      ELDER_GUARDIAN_SPAWN_EGG = register((String)"elder_guardian_spawn_egg", (Item)(new SpawnEggItem(EntityType.ELDER_GUARDIAN, 13552826, 7632531, new Item.Settings())));
      ENDER_DRAGON_SPAWN_EGG = register((String)"ender_dragon_spawn_egg", (Item)(new SpawnEggItem(EntityType.ENDER_DRAGON, 1842204, 14711290, new Item.Settings())));
      ENDERMAN_SPAWN_EGG = register((String)"enderman_spawn_egg", (Item)(new SpawnEggItem(EntityType.ENDERMAN, 1447446, 0, new Item.Settings())));
      ENDERMITE_SPAWN_EGG = register((String)"endermite_spawn_egg", (Item)(new SpawnEggItem(EntityType.ENDERMITE, 1447446, 7237230, new Item.Settings())));
      EVOKER_SPAWN_EGG = register((String)"evoker_spawn_egg", (Item)(new SpawnEggItem(EntityType.EVOKER, 9804699, 1973274, new Item.Settings())));
      FOX_SPAWN_EGG = register((String)"fox_spawn_egg", (Item)(new SpawnEggItem(EntityType.FOX, 14005919, 13396256, new Item.Settings())));
      FROG_SPAWN_EGG = register((String)"frog_spawn_egg", (Item)(new SpawnEggItem(EntityType.FROG, 13661252, 16762748, new Item.Settings())));
      GHAST_SPAWN_EGG = register((String)"ghast_spawn_egg", (Item)(new SpawnEggItem(EntityType.GHAST, 16382457, 12369084, new Item.Settings())));
      GLOW_SQUID_SPAWN_EGG = register((String)"glow_squid_spawn_egg", (Item)(new SpawnEggItem(EntityType.GLOW_SQUID, 611926, 8778172, new Item.Settings())));
      GOAT_SPAWN_EGG = register((String)"goat_spawn_egg", (Item)(new SpawnEggItem(EntityType.GOAT, 10851452, 5589310, new Item.Settings())));
      GUARDIAN_SPAWN_EGG = register((String)"guardian_spawn_egg", (Item)(new SpawnEggItem(EntityType.GUARDIAN, 5931634, 15826224, new Item.Settings())));
      HOGLIN_SPAWN_EGG = register((String)"hoglin_spawn_egg", (Item)(new SpawnEggItem(EntityType.HOGLIN, 13004373, 6251620, new Item.Settings())));
      HORSE_SPAWN_EGG = register((String)"horse_spawn_egg", (Item)(new SpawnEggItem(EntityType.HORSE, 12623485, 15656192, new Item.Settings())));
      HUSK_SPAWN_EGG = register((String)"husk_spawn_egg", (Item)(new SpawnEggItem(EntityType.HUSK, 7958625, 15125652, new Item.Settings())));
      IRON_GOLEM_SPAWN_EGG = register((String)"iron_golem_spawn_egg", (Item)(new SpawnEggItem(EntityType.IRON_GOLEM, 14405058, 7643954, new Item.Settings())));
      LLAMA_SPAWN_EGG = register((String)"llama_spawn_egg", (Item)(new SpawnEggItem(EntityType.LLAMA, 12623485, 10051392, new Item.Settings())));
      MAGMA_CUBE_SPAWN_EGG = register((String)"magma_cube_spawn_egg", (Item)(new SpawnEggItem(EntityType.MAGMA_CUBE, 3407872, 16579584, new Item.Settings())));
      MOOSHROOM_SPAWN_EGG = register((String)"mooshroom_spawn_egg", (Item)(new SpawnEggItem(EntityType.MOOSHROOM, 10489616, 12040119, new Item.Settings())));
      MULE_SPAWN_EGG = register((String)"mule_spawn_egg", (Item)(new SpawnEggItem(EntityType.MULE, 1769984, 5321501, new Item.Settings())));
      OCELOT_SPAWN_EGG = register((String)"ocelot_spawn_egg", (Item)(new SpawnEggItem(EntityType.OCELOT, 15720061, 5653556, new Item.Settings())));
      PANDA_SPAWN_EGG = register((String)"panda_spawn_egg", (Item)(new SpawnEggItem(EntityType.PANDA, 15198183, 1776418, new Item.Settings())));
      PARROT_SPAWN_EGG = register((String)"parrot_spawn_egg", (Item)(new SpawnEggItem(EntityType.PARROT, 894731, 16711680, new Item.Settings())));
      PHANTOM_SPAWN_EGG = register((String)"phantom_spawn_egg", (Item)(new SpawnEggItem(EntityType.PHANTOM, 4411786, 8978176, new Item.Settings())));
      PIG_SPAWN_EGG = register((String)"pig_spawn_egg", (Item)(new SpawnEggItem(EntityType.PIG, 15771042, 14377823, new Item.Settings())));
      PIGLIN_SPAWN_EGG = register((String)"piglin_spawn_egg", (Item)(new SpawnEggItem(EntityType.PIGLIN, 10051392, 16380836, new Item.Settings())));
      PIGLIN_BRUTE_SPAWN_EGG = register((String)"piglin_brute_spawn_egg", (Item)(new SpawnEggItem(EntityType.PIGLIN_BRUTE, 5843472, 16380836, new Item.Settings())));
      PILLAGER_SPAWN_EGG = register((String)"pillager_spawn_egg", (Item)(new SpawnEggItem(EntityType.PILLAGER, 5451574, 9804699, new Item.Settings())));
      POLAR_BEAR_SPAWN_EGG = register((String)"polar_bear_spawn_egg", (Item)(new SpawnEggItem(EntityType.POLAR_BEAR, 15658718, 14014157, new Item.Settings())));
      PUFFERFISH_SPAWN_EGG = register((String)"pufferfish_spawn_egg", (Item)(new SpawnEggItem(EntityType.PUFFERFISH, 16167425, 3654642, new Item.Settings())));
      RABBIT_SPAWN_EGG = register((String)"rabbit_spawn_egg", (Item)(new SpawnEggItem(EntityType.RABBIT, 10051392, 7555121, new Item.Settings())));
      RAVAGER_SPAWN_EGG = register((String)"ravager_spawn_egg", (Item)(new SpawnEggItem(EntityType.RAVAGER, 7697520, 5984329, new Item.Settings())));
      SALMON_SPAWN_EGG = register((String)"salmon_spawn_egg", (Item)(new SpawnEggItem(EntityType.SALMON, 10489616, 951412, new Item.Settings())));
      SHEEP_SPAWN_EGG = register((String)"sheep_spawn_egg", (Item)(new SpawnEggItem(EntityType.SHEEP, 15198183, 16758197, new Item.Settings())));
      SHULKER_SPAWN_EGG = register((String)"shulker_spawn_egg", (Item)(new SpawnEggItem(EntityType.SHULKER, 9725844, 5060690, new Item.Settings())));
      SILVERFISH_SPAWN_EGG = register((String)"silverfish_spawn_egg", (Item)(new SpawnEggItem(EntityType.SILVERFISH, 7237230, 3158064, new Item.Settings())));
      SKELETON_SPAWN_EGG = register((String)"skeleton_spawn_egg", (Item)(new SpawnEggItem(EntityType.SKELETON, 12698049, 4802889, new Item.Settings())));
      SKELETON_HORSE_SPAWN_EGG = register((String)"skeleton_horse_spawn_egg", (Item)(new SpawnEggItem(EntityType.SKELETON_HORSE, 6842447, 15066584, new Item.Settings())));
      SLIME_SPAWN_EGG = register((String)"slime_spawn_egg", (Item)(new SpawnEggItem(EntityType.SLIME, 5349438, 8306542, new Item.Settings())));
      SNIFFER_SPAWN_EGG = register((String)"sniffer_spawn_egg", (Item)(new SpawnEggItem(EntityType.SNIFFER, 8855049, 2468720, new Item.Settings())));
      SNOW_GOLEM_SPAWN_EGG = register((String)"snow_golem_spawn_egg", (Item)(new SpawnEggItem(EntityType.SNOW_GOLEM, 14283506, 8496292, new Item.Settings())));
      SPIDER_SPAWN_EGG = register((String)"spider_spawn_egg", (Item)(new SpawnEggItem(EntityType.SPIDER, 3419431, 11013646, new Item.Settings())));
      SQUID_SPAWN_EGG = register((String)"squid_spawn_egg", (Item)(new SpawnEggItem(EntityType.SQUID, 2243405, 7375001, new Item.Settings())));
      STRAY_SPAWN_EGG = register((String)"stray_spawn_egg", (Item)(new SpawnEggItem(EntityType.STRAY, 6387319, 14543594, new Item.Settings())));
      STRIDER_SPAWN_EGG = register((String)"strider_spawn_egg", (Item)(new SpawnEggItem(EntityType.STRIDER, 10236982, 5065037, new Item.Settings())));
      TADPOLE_SPAWN_EGG = register((String)"tadpole_spawn_egg", (Item)(new SpawnEggItem(EntityType.TADPOLE, 7164733, 1444352, new Item.Settings())));
      TRADER_LLAMA_SPAWN_EGG = register((String)"trader_llama_spawn_egg", (Item)(new SpawnEggItem(EntityType.TRADER_LLAMA, 15377456, 4547222, new Item.Settings())));
      TROPICAL_FISH_SPAWN_EGG = register((String)"tropical_fish_spawn_egg", (Item)(new SpawnEggItem(EntityType.TROPICAL_FISH, 15690005, 16775663, new Item.Settings())));
      TURTLE_SPAWN_EGG = register((String)"turtle_spawn_egg", (Item)(new SpawnEggItem(EntityType.TURTLE, 15198183, 44975, new Item.Settings())));
      VEX_SPAWN_EGG = register((String)"vex_spawn_egg", (Item)(new SpawnEggItem(EntityType.VEX, 8032420, 15265265, new Item.Settings())));
      VILLAGER_SPAWN_EGG = register((String)"villager_spawn_egg", (Item)(new SpawnEggItem(EntityType.VILLAGER, 5651507, 12422002, new Item.Settings())));
      VINDICATOR_SPAWN_EGG = register((String)"vindicator_spawn_egg", (Item)(new SpawnEggItem(EntityType.VINDICATOR, 9804699, 2580065, new Item.Settings())));
      WANDERING_TRADER_SPAWN_EGG = register((String)"wandering_trader_spawn_egg", (Item)(new SpawnEggItem(EntityType.WANDERING_TRADER, 4547222, 15377456, new Item.Settings())));
      WARDEN_SPAWN_EGG = register((String)"warden_spawn_egg", (Item)(new SpawnEggItem(EntityType.WARDEN, 1001033, 3790560, new Item.Settings())));
      WITCH_SPAWN_EGG = register((String)"witch_spawn_egg", (Item)(new SpawnEggItem(EntityType.WITCH, 3407872, 5349438, new Item.Settings())));
      WITHER_SPAWN_EGG = register((String)"wither_spawn_egg", (Item)(new SpawnEggItem(EntityType.WITHER, 1315860, 5075616, new Item.Settings())));
      WITHER_SKELETON_SPAWN_EGG = register((String)"wither_skeleton_spawn_egg", (Item)(new SpawnEggItem(EntityType.WITHER_SKELETON, 1315860, 4672845, new Item.Settings())));
      WOLF_SPAWN_EGG = register((String)"wolf_spawn_egg", (Item)(new SpawnEggItem(EntityType.WOLF, 14144467, 13545366, new Item.Settings())));
      ZOGLIN_SPAWN_EGG = register((String)"zoglin_spawn_egg", (Item)(new SpawnEggItem(EntityType.ZOGLIN, 13004373, 15132390, new Item.Settings())));
      ZOMBIE_SPAWN_EGG = register((String)"zombie_spawn_egg", (Item)(new SpawnEggItem(EntityType.ZOMBIE, 44975, 7969893, new Item.Settings())));
      ZOMBIE_HORSE_SPAWN_EGG = register((String)"zombie_horse_spawn_egg", (Item)(new SpawnEggItem(EntityType.ZOMBIE_HORSE, 3232308, 9945732, new Item.Settings())));
      ZOMBIE_VILLAGER_SPAWN_EGG = register((String)"zombie_villager_spawn_egg", (Item)(new SpawnEggItem(EntityType.ZOMBIE_VILLAGER, 5651507, 7969893, new Item.Settings())));
      ZOMBIFIED_PIGLIN_SPAWN_EGG = register((String)"zombified_piglin_spawn_egg", (Item)(new SpawnEggItem(EntityType.ZOMBIFIED_PIGLIN, 15373203, 5009705, new Item.Settings())));
      EXPERIENCE_BOTTLE = register((String)"experience_bottle", (Item)(new ExperienceBottleItem((new Item.Settings()).rarity(Rarity.UNCOMMON))));
      FIRE_CHARGE = register((String)"fire_charge", (Item)(new FireChargeItem(new Item.Settings())));
      WRITABLE_BOOK = register((String)"writable_book", (Item)(new WritableBookItem((new Item.Settings()).maxCount(1))));
      WRITTEN_BOOK = register((String)"written_book", (Item)(new WrittenBookItem((new Item.Settings()).maxCount(16))));
      ITEM_FRAME = register((String)"item_frame", (Item)(new ItemFrameItem(EntityType.ITEM_FRAME, new Item.Settings())));
      GLOW_ITEM_FRAME = register((String)"glow_item_frame", (Item)(new ItemFrameItem(EntityType.GLOW_ITEM_FRAME, new Item.Settings())));
      FLOWER_POT = register(Blocks.FLOWER_POT);
      CARROT = register((String)"carrot", (Item)(new AliasedBlockItem(Blocks.CARROTS, (new Item.Settings()).food(FoodComponents.CARROT))));
      POTATO = register((String)"potato", (Item)(new AliasedBlockItem(Blocks.POTATOES, (new Item.Settings()).food(FoodComponents.POTATO))));
      BAKED_POTATO = register("baked_potato", new Item((new Item.Settings()).food(FoodComponents.BAKED_POTATO)));
      POISONOUS_POTATO = register("poisonous_potato", new Item((new Item.Settings()).food(FoodComponents.POISONOUS_POTATO)));
      MAP = register((String)"map", (Item)(new EmptyMapItem(new Item.Settings())));
      GOLDEN_CARROT = register("golden_carrot", new Item((new Item.Settings()).food(FoodComponents.GOLDEN_CARROT)));
      SKELETON_SKULL = register((BlockItem)(new VerticallyAttachableBlockItem(Blocks.SKELETON_SKULL, Blocks.SKELETON_WALL_SKULL, (new Item.Settings()).rarity(Rarity.UNCOMMON), Direction.DOWN)));
      WITHER_SKELETON_SKULL = register((BlockItem)(new VerticallyAttachableBlockItem(Blocks.WITHER_SKELETON_SKULL, Blocks.WITHER_SKELETON_WALL_SKULL, (new Item.Settings()).rarity(Rarity.UNCOMMON), Direction.DOWN)));
      PLAYER_HEAD = register((BlockItem)(new SkullItem(Blocks.PLAYER_HEAD, Blocks.PLAYER_WALL_HEAD, (new Item.Settings()).rarity(Rarity.UNCOMMON))));
      ZOMBIE_HEAD = register((BlockItem)(new VerticallyAttachableBlockItem(Blocks.ZOMBIE_HEAD, Blocks.ZOMBIE_WALL_HEAD, (new Item.Settings()).rarity(Rarity.UNCOMMON), Direction.DOWN)));
      CREEPER_HEAD = register((BlockItem)(new VerticallyAttachableBlockItem(Blocks.CREEPER_HEAD, Blocks.CREEPER_WALL_HEAD, (new Item.Settings()).rarity(Rarity.UNCOMMON), Direction.DOWN)));
      DRAGON_HEAD = register((BlockItem)(new VerticallyAttachableBlockItem(Blocks.DRAGON_HEAD, Blocks.DRAGON_WALL_HEAD, (new Item.Settings()).rarity(Rarity.UNCOMMON), Direction.DOWN)));
      PIGLIN_HEAD = register((BlockItem)(new VerticallyAttachableBlockItem(Blocks.PIGLIN_HEAD, Blocks.PIGLIN_WALL_HEAD, (new Item.Settings()).rarity(Rarity.UNCOMMON), Direction.DOWN)));
      NETHER_STAR = register((String)"nether_star", (Item)(new NetherStarItem((new Item.Settings()).rarity(Rarity.UNCOMMON))));
      PUMPKIN_PIE = register("pumpkin_pie", new Item((new Item.Settings()).food(FoodComponents.PUMPKIN_PIE)));
      FIREWORK_ROCKET = register((String)"firework_rocket", (Item)(new FireworkRocketItem(new Item.Settings())));
      FIREWORK_STAR = register((String)"firework_star", (Item)(new FireworkStarItem(new Item.Settings())));
      ENCHANTED_BOOK = register((String)"enchanted_book", (Item)(new EnchantedBookItem((new Item.Settings()).maxCount(1).rarity(Rarity.UNCOMMON))));
      NETHER_BRICK = register("nether_brick", new Item(new Item.Settings()));
      PRISMARINE_SHARD = register("prismarine_shard", new Item(new Item.Settings()));
      PRISMARINE_CRYSTALS = register("prismarine_crystals", new Item(new Item.Settings()));
      RABBIT = register("rabbit", new Item((new Item.Settings()).food(FoodComponents.RABBIT)));
      COOKED_RABBIT = register("cooked_rabbit", new Item((new Item.Settings()).food(FoodComponents.COOKED_RABBIT)));
      RABBIT_STEW = register((String)"rabbit_stew", (Item)(new StewItem((new Item.Settings()).maxCount(1).food(FoodComponents.RABBIT_STEW))));
      RABBIT_FOOT = register("rabbit_foot", new Item(new Item.Settings()));
      RABBIT_HIDE = register("rabbit_hide", new Item(new Item.Settings()));
      ARMOR_STAND = register((String)"armor_stand", (Item)(new ArmorStandItem((new Item.Settings()).maxCount(16))));
      IRON_HORSE_ARMOR = register((String)"iron_horse_armor", (Item)(new HorseArmorItem(5, "iron", (new Item.Settings()).maxCount(1))));
      GOLDEN_HORSE_ARMOR = register((String)"golden_horse_armor", (Item)(new HorseArmorItem(7, "gold", (new Item.Settings()).maxCount(1))));
      DIAMOND_HORSE_ARMOR = register((String)"diamond_horse_armor", (Item)(new HorseArmorItem(11, "diamond", (new Item.Settings()).maxCount(1))));
      LEATHER_HORSE_ARMOR = register((String)"leather_horse_armor", (Item)(new DyeableHorseArmorItem(3, "leather", (new Item.Settings()).maxCount(1))));
      LEAD = register((String)"lead", (Item)(new LeadItem(new Item.Settings())));
      NAME_TAG = register((String)"name_tag", (Item)(new NameTagItem(new Item.Settings())));
      COMMAND_BLOCK_MINECART = register((String)"command_block_minecart", (Item)(new MinecartItem(AbstractMinecartEntity.Type.COMMAND_BLOCK, (new Item.Settings()).maxCount(1).rarity(Rarity.EPIC))));
      MUTTON = register("mutton", new Item((new Item.Settings()).food(FoodComponents.MUTTON)));
      COOKED_MUTTON = register("cooked_mutton", new Item((new Item.Settings()).food(FoodComponents.COOKED_MUTTON)));
      WHITE_BANNER = register((String)"white_banner", (Item)(new BannerItem(Blocks.WHITE_BANNER, Blocks.WHITE_WALL_BANNER, (new Item.Settings()).maxCount(16))));
      ORANGE_BANNER = register((String)"orange_banner", (Item)(new BannerItem(Blocks.ORANGE_BANNER, Blocks.ORANGE_WALL_BANNER, (new Item.Settings()).maxCount(16))));
      MAGENTA_BANNER = register((String)"magenta_banner", (Item)(new BannerItem(Blocks.MAGENTA_BANNER, Blocks.MAGENTA_WALL_BANNER, (new Item.Settings()).maxCount(16))));
      LIGHT_BLUE_BANNER = register((String)"light_blue_banner", (Item)(new BannerItem(Blocks.LIGHT_BLUE_BANNER, Blocks.LIGHT_BLUE_WALL_BANNER, (new Item.Settings()).maxCount(16))));
      YELLOW_BANNER = register((String)"yellow_banner", (Item)(new BannerItem(Blocks.YELLOW_BANNER, Blocks.YELLOW_WALL_BANNER, (new Item.Settings()).maxCount(16))));
      LIME_BANNER = register((String)"lime_banner", (Item)(new BannerItem(Blocks.LIME_BANNER, Blocks.LIME_WALL_BANNER, (new Item.Settings()).maxCount(16))));
      PINK_BANNER = register((String)"pink_banner", (Item)(new BannerItem(Blocks.PINK_BANNER, Blocks.PINK_WALL_BANNER, (new Item.Settings()).maxCount(16))));
      GRAY_BANNER = register((String)"gray_banner", (Item)(new BannerItem(Blocks.GRAY_BANNER, Blocks.GRAY_WALL_BANNER, (new Item.Settings()).maxCount(16))));
      LIGHT_GRAY_BANNER = register((String)"light_gray_banner", (Item)(new BannerItem(Blocks.LIGHT_GRAY_BANNER, Blocks.LIGHT_GRAY_WALL_BANNER, (new Item.Settings()).maxCount(16))));
      CYAN_BANNER = register((String)"cyan_banner", (Item)(new BannerItem(Blocks.CYAN_BANNER, Blocks.CYAN_WALL_BANNER, (new Item.Settings()).maxCount(16))));
      PURPLE_BANNER = register((String)"purple_banner", (Item)(new BannerItem(Blocks.PURPLE_BANNER, Blocks.PURPLE_WALL_BANNER, (new Item.Settings()).maxCount(16))));
      BLUE_BANNER = register((String)"blue_banner", (Item)(new BannerItem(Blocks.BLUE_BANNER, Blocks.BLUE_WALL_BANNER, (new Item.Settings()).maxCount(16))));
      BROWN_BANNER = register((String)"brown_banner", (Item)(new BannerItem(Blocks.BROWN_BANNER, Blocks.BROWN_WALL_BANNER, (new Item.Settings()).maxCount(16))));
      GREEN_BANNER = register((String)"green_banner", (Item)(new BannerItem(Blocks.GREEN_BANNER, Blocks.GREEN_WALL_BANNER, (new Item.Settings()).maxCount(16))));
      RED_BANNER = register((String)"red_banner", (Item)(new BannerItem(Blocks.RED_BANNER, Blocks.RED_WALL_BANNER, (new Item.Settings()).maxCount(16))));
      BLACK_BANNER = register((String)"black_banner", (Item)(new BannerItem(Blocks.BLACK_BANNER, Blocks.BLACK_WALL_BANNER, (new Item.Settings()).maxCount(16))));
      END_CRYSTAL = register((String)"end_crystal", (Item)(new EndCrystalItem((new Item.Settings()).rarity(Rarity.RARE))));
      CHORUS_FRUIT = register((String)"chorus_fruit", (Item)(new ChorusFruitItem((new Item.Settings()).food(FoodComponents.CHORUS_FRUIT))));
      POPPED_CHORUS_FRUIT = register("popped_chorus_fruit", new Item(new Item.Settings()));
      TORCHFLOWER_SEEDS = register((String)"torchflower_seeds", (Item)(new AliasedBlockItem(Blocks.TORCHFLOWER_CROP, new Item.Settings())));
      PITCHER_POD = register((String)"pitcher_pod", (Item)(new AliasedBlockItem(Blocks.PITCHER_CROP, new Item.Settings())));
      BEETROOT = register("beetroot", new Item((new Item.Settings()).food(FoodComponents.BEETROOT)));
      BEETROOT_SEEDS = register((String)"beetroot_seeds", (Item)(new AliasedBlockItem(Blocks.BEETROOTS, new Item.Settings())));
      BEETROOT_SOUP = register((String)"beetroot_soup", (Item)(new StewItem((new Item.Settings()).maxCount(1).food(FoodComponents.BEETROOT_SOUP))));
      DRAGON_BREATH = register("dragon_breath", new Item((new Item.Settings()).recipeRemainder(GLASS_BOTTLE).rarity(Rarity.UNCOMMON)));
      SPLASH_POTION = register((String)"splash_potion", (Item)(new SplashPotionItem((new Item.Settings()).maxCount(1))));
      SPECTRAL_ARROW = register((String)"spectral_arrow", (Item)(new SpectralArrowItem(new Item.Settings())));
      TIPPED_ARROW = register((String)"tipped_arrow", (Item)(new TippedArrowItem(new Item.Settings())));
      LINGERING_POTION = register((String)"lingering_potion", (Item)(new LingeringPotionItem((new Item.Settings()).maxCount(1))));
      SHIELD = register((String)"shield", (Item)(new ShieldItem((new Item.Settings()).maxDamage(336))));
      TOTEM_OF_UNDYING = register("totem_of_undying", new Item((new Item.Settings()).maxCount(1).rarity(Rarity.UNCOMMON)));
      SHULKER_SHELL = register("shulker_shell", new Item(new Item.Settings()));
      IRON_NUGGET = register("iron_nugget", new Item(new Item.Settings()));
      KNOWLEDGE_BOOK = register((String)"knowledge_book", (Item)(new KnowledgeBookItem((new Item.Settings()).maxCount(1).rarity(Rarity.EPIC))));
      DEBUG_STICK = register((String)"debug_stick", (Item)(new DebugStickItem((new Item.Settings()).maxCount(1).rarity(Rarity.EPIC))));
      MUSIC_DISC_13 = register((String)"music_disc_13", (Item)(new MusicDiscItem(1, SoundEvents.MUSIC_DISC_13, (new Item.Settings()).maxCount(1).rarity(Rarity.RARE), 178)));
      MUSIC_DISC_CAT = register((String)"music_disc_cat", (Item)(new MusicDiscItem(2, SoundEvents.MUSIC_DISC_CAT, (new Item.Settings()).maxCount(1).rarity(Rarity.RARE), 185)));
      MUSIC_DISC_BLOCKS = register((String)"music_disc_blocks", (Item)(new MusicDiscItem(3, SoundEvents.MUSIC_DISC_BLOCKS, (new Item.Settings()).maxCount(1).rarity(Rarity.RARE), 345)));
      MUSIC_DISC_CHIRP = register((String)"music_disc_chirp", (Item)(new MusicDiscItem(4, SoundEvents.MUSIC_DISC_CHIRP, (new Item.Settings()).maxCount(1).rarity(Rarity.RARE), 185)));
      MUSIC_DISC_FAR = register((String)"music_disc_far", (Item)(new MusicDiscItem(5, SoundEvents.MUSIC_DISC_FAR, (new Item.Settings()).maxCount(1).rarity(Rarity.RARE), 174)));
      MUSIC_DISC_MALL = register((String)"music_disc_mall", (Item)(new MusicDiscItem(6, SoundEvents.MUSIC_DISC_MALL, (new Item.Settings()).maxCount(1).rarity(Rarity.RARE), 197)));
      MUSIC_DISC_MELLOHI = register((String)"music_disc_mellohi", (Item)(new MusicDiscItem(7, SoundEvents.MUSIC_DISC_MELLOHI, (new Item.Settings()).maxCount(1).rarity(Rarity.RARE), 96)));
      MUSIC_DISC_STAL = register((String)"music_disc_stal", (Item)(new MusicDiscItem(8, SoundEvents.MUSIC_DISC_STAL, (new Item.Settings()).maxCount(1).rarity(Rarity.RARE), 150)));
      MUSIC_DISC_STRAD = register((String)"music_disc_strad", (Item)(new MusicDiscItem(9, SoundEvents.MUSIC_DISC_STRAD, (new Item.Settings()).maxCount(1).rarity(Rarity.RARE), 188)));
      MUSIC_DISC_WARD = register((String)"music_disc_ward", (Item)(new MusicDiscItem(10, SoundEvents.MUSIC_DISC_WARD, (new Item.Settings()).maxCount(1).rarity(Rarity.RARE), 251)));
      MUSIC_DISC_11 = register((String)"music_disc_11", (Item)(new MusicDiscItem(11, SoundEvents.MUSIC_DISC_11, (new Item.Settings()).maxCount(1).rarity(Rarity.RARE), 71)));
      MUSIC_DISC_WAIT = register((String)"music_disc_wait", (Item)(new MusicDiscItem(12, SoundEvents.MUSIC_DISC_WAIT, (new Item.Settings()).maxCount(1).rarity(Rarity.RARE), 238)));
      MUSIC_DISC_OTHERSIDE = register((String)"music_disc_otherside", (Item)(new MusicDiscItem(14, SoundEvents.MUSIC_DISC_OTHERSIDE, (new Item.Settings()).maxCount(1).rarity(Rarity.RARE), 195)));
      MUSIC_DISC_5 = register((String)"music_disc_5", (Item)(new MusicDiscItem(15, SoundEvents.MUSIC_DISC_5, (new Item.Settings()).maxCount(1).rarity(Rarity.RARE), 178)));
      MUSIC_DISC_PIGSTEP = register((String)"music_disc_pigstep", (Item)(new MusicDiscItem(13, SoundEvents.MUSIC_DISC_PIGSTEP, (new Item.Settings()).maxCount(1).rarity(Rarity.RARE), 149)));
      DISC_FRAGMENT_5 = register((String)"disc_fragment_5", (Item)(new DiscFragmentItem(new Item.Settings())));
      TRIDENT = register((String)"trident", (Item)(new TridentItem((new Item.Settings()).maxDamage(250))));
      PHANTOM_MEMBRANE = register("phantom_membrane", new Item(new Item.Settings()));
      NAUTILUS_SHELL = register("nautilus_shell", new Item(new Item.Settings()));
      HEART_OF_THE_SEA = register("heart_of_the_sea", new Item((new Item.Settings()).rarity(Rarity.UNCOMMON)));
      CROSSBOW = register((String)"crossbow", (Item)(new CrossbowItem((new Item.Settings()).maxCount(1).maxDamage(465))));
      SUSPICIOUS_STEW = register((String)"suspicious_stew", (Item)(new SuspiciousStewItem((new Item.Settings()).maxCount(1).food(FoodComponents.SUSPICIOUS_STEW))));
      LOOM = register(Blocks.LOOM);
      FLOWER_BANNER_PATTERN = register((String)"flower_banner_pattern", (Item)(new BannerPatternItem(BannerPatternTags.FLOWER_PATTERN_ITEM, (new Item.Settings()).maxCount(1))));
      CREEPER_BANNER_PATTERN = register((String)"creeper_banner_pattern", (Item)(new BannerPatternItem(BannerPatternTags.CREEPER_PATTERN_ITEM, (new Item.Settings()).maxCount(1).rarity(Rarity.UNCOMMON))));
      SKULL_BANNER_PATTERN = register((String)"skull_banner_pattern", (Item)(new BannerPatternItem(BannerPatternTags.SKULL_PATTERN_ITEM, (new Item.Settings()).maxCount(1).rarity(Rarity.UNCOMMON))));
      MOJANG_BANNER_PATTERN = register((String)"mojang_banner_pattern", (Item)(new BannerPatternItem(BannerPatternTags.MOJANG_PATTERN_ITEM, (new Item.Settings()).maxCount(1).rarity(Rarity.EPIC))));
      GLOBE_BANNER_PATTERN = register((String)"globe_banner_pattern", (Item)(new BannerPatternItem(BannerPatternTags.GLOBE_PATTERN_ITEM, (new Item.Settings()).maxCount(1))));
      PIGLIN_BANNER_PATTERN = register((String)"piglin_banner_pattern", (Item)(new BannerPatternItem(BannerPatternTags.PIGLIN_PATTERN_ITEM, (new Item.Settings()).maxCount(1))));
      GOAT_HORN = register((String)"goat_horn", (Item)(new GoatHornItem((new Item.Settings()).maxCount(1), InstrumentTags.GOAT_HORNS)));
      COMPOSTER = register(Blocks.COMPOSTER);
      BARREL = register(Blocks.BARREL);
      SMOKER = register(Blocks.SMOKER);
      BLAST_FURNACE = register(Blocks.BLAST_FURNACE);
      CARTOGRAPHY_TABLE = register(Blocks.CARTOGRAPHY_TABLE);
      FLETCHING_TABLE = register(Blocks.FLETCHING_TABLE);
      GRINDSTONE = register(Blocks.GRINDSTONE);
      SMITHING_TABLE = register(Blocks.SMITHING_TABLE);
      STONECUTTER = register(Blocks.STONECUTTER);
      BELL = register(Blocks.BELL);
      LANTERN = register(Blocks.LANTERN);
      SOUL_LANTERN = register(Blocks.SOUL_LANTERN);
      SWEET_BERRIES = register((String)"sweet_berries", (Item)(new AliasedBlockItem(Blocks.SWEET_BERRY_BUSH, (new Item.Settings()).food(FoodComponents.SWEET_BERRIES))));
      GLOW_BERRIES = register((String)"glow_berries", (Item)(new AliasedBlockItem(Blocks.CAVE_VINES, (new Item.Settings()).food(FoodComponents.GLOW_BERRIES))));
      CAMPFIRE = register(Blocks.CAMPFIRE);
      SOUL_CAMPFIRE = register(Blocks.SOUL_CAMPFIRE);
      SHROOMLIGHT = register(Blocks.SHROOMLIGHT);
      HONEYCOMB = register((String)"honeycomb", (Item)(new HoneycombItem(new Item.Settings())));
      BEE_NEST = register(Blocks.BEE_NEST);
      BEEHIVE = register(Blocks.BEEHIVE);
      HONEY_BOTTLE = register((String)"honey_bottle", (Item)(new HoneyBottleItem((new Item.Settings()).recipeRemainder(GLASS_BOTTLE).food(FoodComponents.HONEY_BOTTLE).maxCount(16))));
      HONEYCOMB_BLOCK = register(Blocks.HONEYCOMB_BLOCK);
      LODESTONE = register(Blocks.LODESTONE);
      CRYING_OBSIDIAN = register(Blocks.CRYING_OBSIDIAN);
      BLACKSTONE = register(Blocks.BLACKSTONE);
      BLACKSTONE_SLAB = register(Blocks.BLACKSTONE_SLAB);
      BLACKSTONE_STAIRS = register(Blocks.BLACKSTONE_STAIRS);
      GILDED_BLACKSTONE = register(Blocks.GILDED_BLACKSTONE);
      POLISHED_BLACKSTONE = register(Blocks.POLISHED_BLACKSTONE);
      POLISHED_BLACKSTONE_SLAB = register(Blocks.POLISHED_BLACKSTONE_SLAB);
      POLISHED_BLACKSTONE_STAIRS = register(Blocks.POLISHED_BLACKSTONE_STAIRS);
      CHISELED_POLISHED_BLACKSTONE = register(Blocks.CHISELED_POLISHED_BLACKSTONE);
      POLISHED_BLACKSTONE_BRICKS = register(Blocks.POLISHED_BLACKSTONE_BRICKS);
      POLISHED_BLACKSTONE_BRICK_SLAB = register(Blocks.POLISHED_BLACKSTONE_BRICK_SLAB);
      POLISHED_BLACKSTONE_BRICK_STAIRS = register(Blocks.POLISHED_BLACKSTONE_BRICK_STAIRS);
      CRACKED_POLISHED_BLACKSTONE_BRICKS = register(Blocks.CRACKED_POLISHED_BLACKSTONE_BRICKS);
      RESPAWN_ANCHOR = register(Blocks.RESPAWN_ANCHOR);
      CANDLE = register(Blocks.CANDLE);
      WHITE_CANDLE = register(Blocks.WHITE_CANDLE);
      ORANGE_CANDLE = register(Blocks.ORANGE_CANDLE);
      MAGENTA_CANDLE = register(Blocks.MAGENTA_CANDLE);
      LIGHT_BLUE_CANDLE = register(Blocks.LIGHT_BLUE_CANDLE);
      YELLOW_CANDLE = register(Blocks.YELLOW_CANDLE);
      LIME_CANDLE = register(Blocks.LIME_CANDLE);
      PINK_CANDLE = register(Blocks.PINK_CANDLE);
      GRAY_CANDLE = register(Blocks.GRAY_CANDLE);
      LIGHT_GRAY_CANDLE = register(Blocks.LIGHT_GRAY_CANDLE);
      CYAN_CANDLE = register(Blocks.CYAN_CANDLE);
      PURPLE_CANDLE = register(Blocks.PURPLE_CANDLE);
      BLUE_CANDLE = register(Blocks.BLUE_CANDLE);
      BROWN_CANDLE = register(Blocks.BROWN_CANDLE);
      GREEN_CANDLE = register(Blocks.GREEN_CANDLE);
      RED_CANDLE = register(Blocks.RED_CANDLE);
      BLACK_CANDLE = register(Blocks.BLACK_CANDLE);
      SMALL_AMETHYST_BUD = register(Blocks.SMALL_AMETHYST_BUD);
      MEDIUM_AMETHYST_BUD = register(Blocks.MEDIUM_AMETHYST_BUD);
      LARGE_AMETHYST_BUD = register(Blocks.LARGE_AMETHYST_BUD);
      AMETHYST_CLUSTER = register(Blocks.AMETHYST_CLUSTER);
      POINTED_DRIPSTONE = register(Blocks.POINTED_DRIPSTONE);
      OCHRE_FROGLIGHT = register(Blocks.OCHRE_FROGLIGHT);
      VERDANT_FROGLIGHT = register(Blocks.VERDANT_FROGLIGHT);
      PEARLESCENT_FROGLIGHT = register(Blocks.PEARLESCENT_FROGLIGHT);
      FROGSPAWN = register((BlockItem)(new PlaceableOnWaterItem(Blocks.FROGSPAWN, new Item.Settings())));
      ECHO_SHARD = register("echo_shard", new Item(new Item.Settings()));
      BRUSH = register((String)"brush", (Item)(new BrushItem((new Item.Settings()).maxDamage(64))));
      NETHERITE_UPGRADE_SMITHING_TEMPLATE = register((String)"netherite_upgrade_smithing_template", (Item)SmithingTemplateItem.createNetheriteUpgrade());
      SENTRY_ARMOR_TRIM_SMITHING_TEMPLATE = register((String)"sentry_armor_trim_smithing_template", (Item)SmithingTemplateItem.of(ArmorTrimPatterns.SENTRY));
      DUNE_ARMOR_TRIM_SMITHING_TEMPLATE = register((String)"dune_armor_trim_smithing_template", (Item)SmithingTemplateItem.of(ArmorTrimPatterns.DUNE));
      COAST_ARMOR_TRIM_SMITHING_TEMPLATE = register((String)"coast_armor_trim_smithing_template", (Item)SmithingTemplateItem.of(ArmorTrimPatterns.COAST));
      WILD_ARMOR_TRIM_SMITHING_TEMPLATE = register((String)"wild_armor_trim_smithing_template", (Item)SmithingTemplateItem.of(ArmorTrimPatterns.WILD));
      WARD_ARMOR_TRIM_SMITHING_TEMPLATE = register((String)"ward_armor_trim_smithing_template", (Item)SmithingTemplateItem.of(ArmorTrimPatterns.WARD));
      EYE_ARMOR_TRIM_SMITHING_TEMPLATE = register((String)"eye_armor_trim_smithing_template", (Item)SmithingTemplateItem.of(ArmorTrimPatterns.EYE));
      VEX_ARMOR_TRIM_SMITHING_TEMPLATE = register((String)"vex_armor_trim_smithing_template", (Item)SmithingTemplateItem.of(ArmorTrimPatterns.VEX));
      TIDE_ARMOR_TRIM_SMITHING_TEMPLATE = register((String)"tide_armor_trim_smithing_template", (Item)SmithingTemplateItem.of(ArmorTrimPatterns.TIDE));
      SNOUT_ARMOR_TRIM_SMITHING_TEMPLATE = register((String)"snout_armor_trim_smithing_template", (Item)SmithingTemplateItem.of(ArmorTrimPatterns.SNOUT));
      RIB_ARMOR_TRIM_SMITHING_TEMPLATE = register((String)"rib_armor_trim_smithing_template", (Item)SmithingTemplateItem.of(ArmorTrimPatterns.RIB));
      SPIRE_ARMOR_TRIM_SMITHING_TEMPLATE = register((String)"spire_armor_trim_smithing_template", (Item)SmithingTemplateItem.of(ArmorTrimPatterns.SPIRE));
      WAYFINDER_ARMOR_TRIM_SMITHING_TEMPLATE = register((String)"wayfinder_armor_trim_smithing_template", (Item)SmithingTemplateItem.of(ArmorTrimPatterns.WAYFINDER));
      SHAPER_ARMOR_TRIM_SMITHING_TEMPLATE = register((String)"shaper_armor_trim_smithing_template", (Item)SmithingTemplateItem.of(ArmorTrimPatterns.SHAPER));
      SILENCE_ARMOR_TRIM_SMITHING_TEMPLATE = register((String)"silence_armor_trim_smithing_template", (Item)SmithingTemplateItem.of(ArmorTrimPatterns.SILENCE));
      RAISER_ARMOR_TRIM_SMITHING_TEMPLATE = register((String)"raiser_armor_trim_smithing_template", (Item)SmithingTemplateItem.of(ArmorTrimPatterns.RAISER));
      HOST_ARMOR_TRIM_SMITHING_TEMPLATE = register((String)"host_armor_trim_smithing_template", (Item)SmithingTemplateItem.of(ArmorTrimPatterns.HOST));
      ANGLER_POTTERY_SHARD = register("angler_pottery_shard", new Item(new Item.Settings()));
      ARCHER_POTTERY_SHARD = register("archer_pottery_shard", new Item(new Item.Settings()));
      ARMS_UP_POTTERY_SHARD = register("arms_up_pottery_shard", new Item(new Item.Settings()));
      BLADE_POTTERY_SHARD = register("blade_pottery_shard", new Item(new Item.Settings()));
      BREWER_POTTERY_SHARD = register("brewer_pottery_shard", new Item(new Item.Settings()));
      BURN_POTTERY_SHARD = register("burn_pottery_shard", new Item(new Item.Settings()));
      DANGER_POTTERY_SHARD = register("danger_pottery_shard", new Item(new Item.Settings()));
      EXPLORER_POTTERY_SHARD = register("explorer_pottery_shard", new Item(new Item.Settings()));
      FRIEND_POTTERY_SHARD = register("friend_pottery_shard", new Item(new Item.Settings()));
      HEART_POTTERY_SHARD = register("heart_pottery_shard", new Item(new Item.Settings()));
      HEARTBREAK_POTTERY_SHARD = register("heartbreak_pottery_shard", new Item(new Item.Settings()));
      HOWL_POTTERY_SHARD = register("howl_pottery_shard", new Item(new Item.Settings()));
      MINER_POTTERY_SHARD = register("miner_pottery_shard", new Item(new Item.Settings()));
      MOURNER_POTTERY_SHARD = register("mourner_pottery_shard", new Item(new Item.Settings()));
      PLENTY_POTTERY_SHARD = register("plenty_pottery_shard", new Item(new Item.Settings()));
      PRIZE_POTTERY_SHARD = register("prize_pottery_shard", new Item(new Item.Settings()));
      SHEAF_POTTERY_SHARD = register("sheaf_pottery_shard", new Item(new Item.Settings()));
      SHELTER_POTTERY_SHARD = register("shelter_pottery_shard", new Item(new Item.Settings()));
      SKULL_POTTERY_SHARD = register("skull_pottery_shard", new Item(new Item.Settings()));
      SNORT_POTTERY_SHARD = register("snort_pottery_shard", new Item(new Item.Settings()));
   }
}
